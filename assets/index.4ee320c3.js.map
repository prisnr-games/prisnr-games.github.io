{"version":3,"file":"index.4ee320c3.js","sources":["../../vite/modulepreload-polyfill","../../src/intl/game.ts","../../src/intl/messages.ts","../../src/network/wallet.ts","../../src/util/belt.ts","../../src/util/fetch.ts","../../src/network/contract.ts","../../src/network/permits.ts","../../src/network/keplr.ts","../../src/util/dom.ts","../../src/util/logic.ts","../../src/component/MessagePanel.svelte","../../src/component/Prompt.svelte","../../src/component/Assertion.svelte","../../src/util/three.ts","../../src/util/draw.ts","../../src/component/Scene.svelte","../../src/component/PremiseWidget.svelte","../../src/component/Decision.svelte","../../src/component/ActionWidget.svelte","../../src/component/Pick.svelte","../../src/util/encrypted-local-storage.ts","../../src/component/NftCard.svelte","../../src/component/App.svelte","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","\nexport const H_LANGUAGES = {\n\ten: {},\n} as const;\n\nexport type SupportedLanguage = keyof typeof H_LANGUAGES;\n\nexport interface Labeled {\n\tlabels: {\n\t\t[K in SupportedLanguage]: string;\n\t};\n}\n\ninterface Color extends Labeled {\n\tcolor: string;\n}\n\ninterface Shape extends Labeled {\n\tsymbol: string;\n}\n\nexport const H_COLORS = {\n\tred: {\n\t\tcolor: '#a00000',\n\t\tlabels: {\n\t\t\ten: 'red',\n\t\t},\n\t},\n\tgreen: {\n\t\tcolor: '#006000',\n\t\tlabels: {\n\t\t\ten: 'green',\n\t\t},\n\t},\n\tblue: {\n\t\tcolor: '#0000a0',\n\t\tlabels: {\n\t\t\ten: 'blue',\n\t\t},\n\t},\n\tblack: {\n\t\tcolor: '#000000',\n\t\tlabels: {\n\t\t\ten: 'black',\n\t\t},\n\t},\n} as const;\n\nexport type CanonicalColor = keyof typeof H_COLORS;\n\nexport const A_COLORS = Object.keys(H_COLORS) as CanonicalColor[];\n\n\nexport const H_SHAPES = {\n\ttriangle: {\n\t\tsymbol: '▲',\n\t\tlabels: {\n\t\t\ten: 'triangle',\n\t\t},\n\t},\n\tsquare: {\n\t\tsymbol: '■',\n\t\tlabels: {\n\t\t\ten: 'square',\n\t\t},\n\t},\n\tcircle: {\n\t\tsymbol: '●',\n\t\tlabels: {\n\t\t\ten: 'circle',\n\t\t},\n\t},\n\tstar: {\n\t\tsymbol: '★',\n\t\tlabels: {\n\t\t\ten: 'star',\n\t\t},\n\t},\n} as const;\n\nexport type CanonicalShape = keyof typeof H_SHAPES;\n\nexport const A_SHAPES = Object.keys(H_SHAPES) as CanonicalShape[];\n\ninterface Basis {\n\tdescribe: {\n\t\t[K in SupportedLanguage]: (s: string) => string;\n\t}\n}\n\nexport const H_BASES = {\n\tnobody_has: {\n\t\tdescribe: {\n\t\t\ten: (s: string) => `nobody has ${s || '...'}`,\n\t\t},\n\t},\n\ti_have: {\n\t\tdescribe: {\n\t\t\ten: (s: string) => `my chip is ${s || '...'}`,\n\t\t},\n\t},\n} as const;\n\nexport type CanonicalBasis = keyof typeof H_BASES;\n\nexport const A_BASES = Object.keys(H_BASES) as CanonicalBasis[];\n\n\nexport const H_TARGETS = {\n\tbag: {\n\t\tlabel: 'Arbiter',\n\t},\n\topponent: {\n\t\tlabel: 'Opponent',\n\t},\n\tabstain: {\n\t\tlabel: 'Abstain',\n\t},\n};\n\nexport type CanonicalTarget = keyof typeof H_TARGETS;\n\nexport const A_TARGETS = Object.keys(H_TARGETS) as CanonicalTarget[];\n\n\nexport type PickOption = 'nft' | 'jackpot';\n","import type {\n\tLabeled,\n} from './game';\n\nexport const H_MESSAGES = {\n\tattention: [\n\t\t// {\n\t\t// \tlabels: {\n\t\t// \t\ten: 'hey there :)',\n\t\t// \t},\n\t\t// },\n\t\t// {\n\t\t// \tdelay: 2000,\n\t\t// \tpause: 800,\n\t\t// \tlabels: {\n\t\t// \t\ten: 'glad you made it!',\n\t\t// \t},\n\t\t// },\n\t\t// {\n\t\t// \tpause: 600,\n\t\t// \tdelay: 1800,\n\t\t// \tlabels: {\n\t\t// \t\ten: 'just remember that you should nev',\n\t\t// \t},\n\t\t// },\n\t\t{\n\t\t\tlabels: {\n\t\t\t\ten: 'the Arbiter approaches...',\n\t\t\t},\n\t\t},\n\t],\n\n\tloading: [\n\t\t{\n\t\t\tdelay: 2000,\n\t\t\tinterval: 200,\n\t\t\tlabels: {\n\t\t\t\ten: 'hmmm',\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdelay: 250,\n\t\t\tinterval: 500,\n\t\t\tlabels: {\n\t\t\t\ten: 'hmmm....',\n\t\t\t},\n\t\t},\n\t],\n} as Record<string, Array<Labeled & {\n\tdelay?: number;\n\tinterval?: number;\n\tpause?: number;\n}>>;\n","import type { JsonValue } from '#/util/types';\nimport type { Key } from '@keplr-wallet/types';\nimport type { ExecuteResult } from 'secretjs';\nimport type { Coin, JsonObject, StdFee, StdSignature } from 'secretjs/types/types';\nimport type { AccountData } from 'secretjs/types/wallet';\n\n/**\n * chain id\n */\nexport const SI_CHAIN = import.meta.env.VITE_NETWORK_CHAIN_ID;\n\n/**\n * chain name\n */\nexport const S_CHAIN_NAME = import.meta.env.VITE_NETWORK_CHAIN_NAME;\n\n/**\n * rest endpoint uri\n */\nexport const P_LCD_REST = import.meta.env.VITE_NETWORK_LCD_REST;\n\n/**\n * rpc endpoint uri\n */\nexport const P_LCD_RPC = import.meta.env.VITE_NETWORK_LCD_RPC;\n\n\nexport const uscrt_to_scrt = (xg_usrt: bigint) => (Number(xg_usrt / 10000n) / 100).toFixed(2).replace(/\\.?0+$/, '')+' SCRT';\n\n/**\n * wallet error\n */\nexport class WalletError extends Error {\n\tconstructor(s_msg: string, e_original?: unknown) {\n\t\t// no original error\n\t\tif (!e_original) {\n\t\t\tsuper(s_msg);\n\t\t}\n\t\t// window[f_undef]()\n\t\telse if (e_original instanceof TypeError) {\n\t\t\tsuper(`${s_msg}: ${e_original.stack}`);\n\t\t}\n\t\t// other error\n\t\telse if (e_original instanceof Error) {\n\t\t\tsuper(`${s_msg}: ${e_original.stack}`);\n\t\t}\n\t\t// unknown\n\t\telse {\n\t\t\tsuper(`${s_msg}: Unknown error`);\n\t\t}\n\t}\n}\n\nexport class NotEnabledError extends WalletError {\n\tconstructor() {\n\t\tsuper(`Wallet was not enabled first`);\n\t}\n}\n\n\n/**\n * wallet interface\n */\nexport interface Wallet {\n\tenable(g_chain: SecretChainInfo, fk_change: AccountChangeCallback): Promise<boolean>;\n\tdisable(): void;\n\tget chain(): string;\n\tget key(): Key;\n\tget accounts(): readonly AccountData[];\n\tget primaryAccount(): AccountData;\n\tget publicAddress(): string;\n\tsignQueryPermit(): Promise< StdSignature>;\n\texecute(p_contract: string, g_msg: JsonObject, g_xfer?: readonly Coin[], g_fee?: StdFee, si_code_hash?: string): Promise<ExecuteResult>\n\tquery(p_contract: string, g_msg: JsonObject, g_params?: JsonObject, si_code_hash?: string): Promise<JsonObject>;\n}\n\nexport interface SecretChainInfo {\n\tchainId: string;\n\tchainName: string;\n\trpc: string;\n\trest: string;\n}\n\nexport type AccountChangeCallback = VoidFunction;\n","export const XTL_SECONDS = 1000;\nexport const XTL_MINUTES = 60 * XTL_SECONDS;\nexport const XTL_HOURS = 60 * XTL_MINUTES;\nexport const XTL_DAYS = 24 * XTL_HOURS;\nexport const XTL_WEEKS = 7 * XTL_DAYS;\nexport const XTL_MONTHS = 30 * XTL_DAYS;\nexport const XTL_YEARS = 365 * XTL_DAYS;\n\ntype ReduceParameters<T extends any=any> = Parameters<Array<T>['reduce']>;\n\nexport const ode = Object.entries;\n\nexport function oder<\n\tOutType extends any,\n\tValueType extends any,\n>(h_thing: Record<string, ValueType>, f_reduce: ReduceParameters[0], w_init: OutType): OutType {\n\treturn ode(h_thing).reduce(f_reduce, w_init) as OutType;\n}\n\nexport function oderac<\n\tOutType extends any,\n\tValueType extends any,\n>(h_thing: Record<string, ValueType>, f_concat: (si_key: string, w_value: ValueType) => OutType): OutType[] {\n\treturn ode(h_thing).reduce((a_out, [si_key, w_value]) => [\n\t\t...a_out,\n\t\tf_concat(si_key, w_value),\n\t], [] as OutType[]);\n}\n\nexport function oderaf<\n\tOutType extends any,\n\tValueType extends any,\n>(h_thing: Record<string, ValueType>, f_concat: (si_key: string, w_value: ValueType) => OutType[]): OutType[] {\n\treturn ode(h_thing).reduce((a_out, [si_key, w_value]) => [\n\t\t...a_out,\n\t\t...f_concat(si_key, w_value),\n\t], [] as OutType[]);\n}\n\nexport function oderom<\n\tOutType extends any,\n\tValueType extends any,\n>(h_thing: Record<string, ValueType>, f_concat: (si_key: string, w_value: ValueType) => Record<string, OutType>): Record<string, OutType> {\n\treturn ode(h_thing).reduce((h_out, [si_key, w_value]) => ({\n\t\t...h_out,\n\t\t...f_concat(si_key, w_value),\n\t}), {} as Record<string, OutType>);\n}\n\nexport function timeout(xt_wait: number): Promise<void> {\n\treturn new Promise((fk_resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tfk_resolve();\n\t\t}, xt_wait);\n\t});\n};\n\nexport function forever<T>(): Promise<T> {\n\treturn new Promise(() => {});\n}\n\nexport function microtask(): Promise<void> {\n\treturn new Promise((fk_resolve) => {\n\t\tqueueMicrotask(() => {\n\t\t\tfk_resolve();\n\t\t});\n\t});\n}\n\nexport const proper = (s: string) => s[0].toUpperCase() + s.slice(1);\n\n\nconst A_INTERVALS = [\n\t{ ge: XTL_YEARS, divisor: XTL_YEARS, unit: 'year' },\n\t{ ge: XTL_MONTHS, divisor: XTL_MONTHS, unit: 'month' },\n\t{ ge: XTL_WEEKS, divisor: XTL_WEEKS, unit: 'week' },\n\t{ ge: XTL_DAYS, divisor: XTL_DAYS, unit: 'day' },\n\t{ ge: XTL_HOURS, divisor: XTL_HOURS, unit: 'hour' },\n\t{ ge: XTL_MINUTES, divisor: XTL_MINUTES, unit: 'minute' },\n\t{ ge: XTL_SECONDS, divisor: XTL_SECONDS, unit: 'seconds' },\n\t{ ge: 0, divisor: 1, text: 'just now' },\n];\n\nexport function relative_time(z_when: number | Date, z_relative: number | Date=Date.now(), d_rtf=new Intl.RelativeTimeFormat(undefined, {numeric:'auto'})) {\n\tconst xt_now = typeof z_relative === 'object' ? z_relative.getTime() : new Date(z_relative).getTime();\n\tconst xtl_diff = xt_now - (typeof z_when === 'object' ? z_when : new Date(z_when)).getTime();\n\tconst xtl_diff_abs = Math.abs(xtl_diff);\n\tfor (const g_interval of A_INTERVALS) {\n\t\tif (xtl_diff_abs >= g_interval.ge) {\n\t\t\tconst x_span = Math.round(Math.abs(xtl_diff) / g_interval.divisor);\n\t\t\tconst b_future = xtl_diff < 0;\n\t\t\treturn g_interval.unit ? d_rtf.format(b_future ? x_span : -x_span, g_interval.unit as Intl.RelativeTimeFormatUnit) : g_interval.text;\n\t\t}\n\t}\n}\n\nexport class Killables {\n\tprotected _as_intervals = new Set<number>();\n\tprotected _as_timeouts = new Set<number>();\n\n\tconstructor() {\n\n\t}\n\n\taddInterval(fk_action: VoidFunction, xtl_interval: number): number {\n\t\tconst i_handle = window.setInterval(fk_action, xtl_interval);\n\n\t\tthis._as_intervals.add(i_handle);\n\n\t\treturn i_handle;\n\t}\n\n\taddTimeout(fk_action: VoidFunction, xtl_timeout: number): number {\n\t\tconst i_handle = window.setTimeout(() => {\n\t\t\t// auto-delete\n\t\t\tthis.delTimeout(i_handle);\n\n\t\t\t// call action\n\t\t\tfk_action();\n\t\t}, xtl_timeout);\n\n\t\tthis._as_timeouts.add(i_handle);\n\n\t\treturn i_handle;\n\t}\n\n\tdelInterval(i_handle: number): void {\n\t\twindow.clearInterval(i_handle);\n\n\t\tthis._as_intervals.delete(i_handle);\n\t}\n\n\tdelTimeout(i_handle: number): void {\n\t\twindow.clearTimeout(i_handle);\n\n\t\tthis._as_timeouts.delete(i_handle);\n\t}\n\n\tkillAll(): void {\n\t\tfor(const i_handle of this._as_intervals) {\n\t\t\tthis.delInterval(i_handle);\n\t\t}\n\n\t\tfor(const i_handle of this._as_timeouts) {\n\t\t\tthis.delTimeout(i_handle);\n\t\t}\n\t}\n}\n\n\n","import {\n\tgretch,\n} from 'gretchen';\n\nimport type {\n\tGretchResponse,\n} from 'gretchen';\n\nimport type {\n\tHash,\n\tJsonObject,\n\tJsonValue,\n} from './types';\n\nexport interface FetchConfig {\n\theaders?: Hash;\n\tsearch?: Hash;\n\tbody?: string;\n\tjson?: JsonValue;\n}\n\ntype HttpError = {\n\tcode: number;\n\terrors: string[];\n};\n\nexport type Response<Data> = GretchResponse<Data, HttpError>;\n\ntype RequestMethod = 'GET' | 'POST' | 'PUT' | 'HEAD' | 'DELETE';\n\nasync function request_json<Data extends JsonObject>(\n\ts_method: RequestMethod,\n\tpr_uri: string,\n\tgc_fetch: FetchConfig | null = null\n): Promise<Response<Data>> {\n\t// append search params\n\tif(gc_fetch?.search) {\n\t\t// uri already has query string\n\t\tif(pr_uri.includes('?')) {\n\t\t\tthrow new Error(`Cannot specify 'search' option in fetch config when URI already contains search params: \"${pr_uri}\"`);\n\t\t}\n\n\t\t// append search params; ensure plus signs remain\n\t\tpr_uri += '?'+new URLSearchParams(gc_fetch.search).toString();\n\n\t\tdelete gc_fetch.search;\n\t}\n\n\t// attempt fetch request\n\ttry {\n\t\treturn await gretch<Data, HttpError>(pr_uri, {\n\t\t\t...(gc_fetch as any),\n\t\t\tmethod: s_method,\n\t\t\tmode: 'cors',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t...((gc_fetch || {}).headers || {}),\n\t\t\t},\n\t\t}).json();\n\t}\n\t// network error\n\tcatch(e_fetch) {\n\t\t// TODO: handle network error\n\t\tthrow e_fetch;\n\t}\n}\n\nexport async function get_json<Data extends JsonObject>(\n\tpr_uri: string,\n\tgc_fetch: FetchConfig | null = null\n): Promise<Response<Data>> {\n\treturn request_json<Data>('GET', pr_uri, gc_fetch);\n}\n\nexport async function post_json<Data extends JsonObject>(\n\tpr_uri: string,\n\tgc_fetch: FetchConfig | null = null\n): Promise<Response<Data>> {\n\treturn request_json<Data>('POST', pr_uri, gc_fetch);\n}\n\nexport async function put_json<Data extends JsonObject>(\n\tpr_uri: string,\n\tgc_fetch: FetchConfig | null = null\n): Promise<Response<Data>> {\n\treturn request_json<Data>('PUT', pr_uri, gc_fetch);\n}","import type { CanonicalBasis, CanonicalColor, CanonicalShape, CanonicalTarget, PickOption } from '#/intl/game';\nimport { XTL_MINUTES, XTL_SECONDS } from '#/util/belt';\nimport { get_json } from '#/util/fetch';\nimport type { GuessOption, SemanticAssertion, SemanticAssertion_Nobody, SemanticColorQuality, SemanticQuality, SemanticShapeQuality } from '#/util/logic';\nimport type { JsonValue } from '#/util/types';\nimport type {\n\tCoin, JsonObject, StdFee,\n} from \"secretjs/types/types\";\n\nimport type {\n\tPermit,\n} from \"./permits\";\n\nimport {\n\tP_LCD_RPC, SI_CHAIN,\n} from './wallet';\n\nimport type {\n\tWallet,\n} from './wallet';\n\n/**\n * game contract address\n */\n export const P_CONTRACT_GAME_ADDR = import.meta.env.VITE_CONTRACT_GAME_ADDR;\n\n/**\n * game contract code hash\n */\nexport const SI_CONTRACT_GAME_CODE_HASH = import.meta.env.VITE_CONTRACT_GAME_CODE_HASH;\n\n/**\n * minter contract address\n */\nexport const P_CONTRACT_MINTER_ADDR = import.meta.env.VITE_CONTRACT_MINTER_ADDR;\n\n/**\n * minter contract code hash\n */\nexport const SI_CONTRACT_MINTER_CODE_HASH = import.meta.env.VITE_CONTRACT_MINTER_CODE_HASH;\n\nexport class ContractError extends Error {\n\tconstructor(s_error: string) {\n\t\tsuper(`The game contract returned the following error: ${s_error}`);\n\t}\n}\n\n/**\n * execution result info\n */\nexport interface ContractExecInfo<Wrapped extends JsonObject> {\n\ttxnHash: string\n\tdata: Wrapped;\n};\n\nconst SN_DEFAULT_WAGER = '10000000';\n\nconst d_decoder = new TextDecoder();\n\n// types for contract responses\n\ninterface Response {\n\tstatus: String,\n}\n\nexport type SemanticGuess = `target:${CanonicalTarget}|${SemanticColorQuality}|${SemanticShapeQuality}`;\nexport type SemanticGuessResult = `${'bag' | 'opponent'}|${'correct' | 'wrong'}` | 'abstain';\n\nexport type SemanticOutcome = `you ${`${'won' | 'lost'} wager` | 'won jackpot' | 'won nft' | 'lost reward'}`;\n\nexport interface GameStateResponse {\n\t// 0: waiting for second player, 1: first round, 3: reward round\n\tround: 0 | 1 | 3 | null,\n\n\t// currently must be default wager \"10000000\" uscrt\n\twager: string | null,\n\n\t// one of \"red\", \"green\", \"blue\", \"black\"\n\tchip_color: SemanticColorQuality | null,\n\n\t// one of \"triangle\", \"square\", \"circle\", \"star\"\n\tchip_shape: SemanticShapeQuality | null,\n\n\t// one of \"nobody_has|red\", \"nobody_has|green\", \"nobody_has|blue\", \"nobody_has|black\", \n\t//        \"nobody_has|triangle\", \"nobody_has|square\", \"nobody_has|circle\", \"nobody_has|star\"\n\thint: SemanticAssertion_Nobody | null,\n\n\t// one of \"nobody_has|red\", \"nobody_has|green\", \"nobody_has|blue\", \"nobody_has|black\", \n\t//        \"nobody_has|triangle\", \"nobody_has|square\", \"nobody_has|circle\", \"nobody_has|star\",\n\t//        \"i_have|red\", \"i_have|green\", \"i_have|blue\", \"i_have|black\",\n\t//        \"i_have|triangle\", \"i_have|square\", \"i_have|circle\", \"i_have|star\"\n\tfirst_submit: SemanticAssertion | null,\n\n\t// same as above\n\topponent_first_submit: SemanticAssertion | null,\n\t\n\t// one of \"red\", \"green\", \"blue\", \"black\", \"triangle\", \"square\", \"circle\", \"star\"\n\t//   means that you have learned the secret that opponent has this feature.\n\tfirst_extra_secret: SemanticAssertion | null,\n\n\t// next three same as first submit/secret\n\tsecond_submit: SemanticAssertion | null,\n\topponent_second_submit: SemanticAssertion | null,\n\tsecond_extra_secret: SemanticAssertion | null,\n\n\t// has format \"{target}|{color}|{shape}\", where\n\t//    {target} is one of \"abstain\", \"bag\", \"opponent\"\n\t//    {color} is one of \"red\", \"green\", \"blue\", \"black\", \"\" (in case of abstain)\n\t//    {shape} is one of \"triange\", \"square\", \"circle\", \"star\", \"\" (in case of abstain)\n\tguess: SemanticGuess | null,\n\t\n\t// same as guess\n\topponent_guess: string | null,\n\n\t// one of \"bag|correct\", \"bag|wrong\", \"opponent|correct\", \"opponent|wrong\", \"abstain\"\n\tround_result: SemanticGuessResult | null,\n\n\t// same as round_result\n\topponent_round_result: SemanticGuessResult | null,\n\n\t// indicates game is finished (null if second player has not joined, yet)\n\tfinished: boolean | null,\n\n\t// one of \"you won wager\", \"you lost wager\", \"you won jackpot\", \"you won nft\", \"you lost reward\"\n\tresult: SemanticOutcome | null,\n\n\tfirst_round_start_block: number;\n\n\tfirst_submit_block: number;\n\n\tguess_block: number;\n\n\tguess_turn_start_block: number;\n\n\tpick: 'nft' | 'jackpot' | null;\n\n\tpick_reward_round_start_block: number;\n\n\tsecond_submit_block: number;\n\n\tsecond_submit_turn_start_block: number;\n\n\tjackpot_reward: string;\n}\n\ninterface InnerResponse {\n\tstatus: string,\n\tgame_state: GameStateResponse | null,\n}\n\nexport interface JoinResponse {\n\tjoin?: InnerResponse,\n\terror?: string,\n}\n\nexport interface SubmitResponse {\n\tsubmit?: InnerResponse,\n\terror?: string,\n}\n\nexport interface GuessResponse {\n\tguess?: InnerResponse,\n\terror?: string,\n}\n\nexport interface PickRewardResponse {\n\tpick_reward?: InnerResponse,\n\terror?: string,\n}\n\nexport interface ForceEndgameResponse {\n\tforce_endgame?: InnerResponse;\n\terror?: string;\n}\n\nexport interface QueryGameStateResponse {\n\tgame_state?: GameStateResponse,\n\terror?: string,\n}\n\n// Message formats sent to contract\n\ninterface InnerSubmitMsg {\n\ttarget: string,\n\tcolor?: string,\n\tshape?: string,\n}\n\ninterface SubmitMsg {\n\tsubmit: InnerSubmitMsg,\n}\n\ninterface GuessMsg {\n\tguess: InnerSubmitMsg,\n}\n\ninterface InnerPickRewardMsg {\n\treward: string,\n}\n\ninterface PickRewardMsg {\n\tpick_reward: InnerPickRewardMsg,\n}\n\nconst entropyGenerator = (length: number): string => {\n\tvar base = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'.split('');\n\tvar array = new Uint8Array(length);\n\twindow.crypto.getRandomValues(array);\n\tvar str = '';\n\tfor (var i = 0; i < array.length; i++) {\n\t\tstr += base[array[i] % base.length];\n\t};\n\treturn str;\n}\n\n\n\n\nexport class Contract {\n\tprotected _k_wallet: Wallet;\n\tprotected _p_contract: string;\n\tprotected _g_permit: Permit | null;\n\tprotected _si_code_hash: string | undefined;\n\n\tconstructor(k_wallet: Wallet, p_contract: string, g_permit?: Permit, si_code_hash?: string) {\n\t\tthis._k_wallet = k_wallet;\n\t\tthis._p_contract = p_contract;\n\t\tthis._g_permit = g_permit || null;\n\t\tthis._si_code_hash = si_code_hash;\n\t}\n\n\tasync execute<Wrapped extends JsonObject>(g_msg: JsonObject, g_fee?: StdFee, g_xfer: readonly Coin[]=[]): Promise<ContractExecInfo<Wrapped>> {\n\t\tconst g_result = await this._k_wallet.execute(this._p_contract, g_msg, g_xfer, g_fee, this._si_code_hash);\n\n\t\treturn {\n\t\t\ttxnHash: g_result.transactionHash,\n\t\t\tdata: JSON.parse(d_decoder.decode(g_result.data)),\n\t\t};\n\t}\n\n\tquery<Response extends JsonObject>(g_msg: JsonObject): Promise<Response> {\n\t\tif(this._g_permit) {\n\t\t\tg_msg = {\n\t\t\t\twith_permit: {\n\t\t\t\t\tquery: g_msg,\n\t\t\t\t\tpermit: this._g_permit,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn this._k_wallet.query(this._p_contract, g_msg);\n\t}\n\n}\n\nconst XG_BASE_FEE = 180_000n;\n\nexport class GameContract extends Contract {\n\tasync queryGameState(): Promise<GameStateResponse> {\n\t\tconst g_response = await this.query<QueryGameStateResponse>({\n\t\t\tgame_state: {},\n\t\t});\n\n\t\tif(g_response.error) {\n\t\t\tthrow new ContractError(g_response.error);\n\t\t}\n\n\t\treturn g_response.game_state!;\n\t}\n\n\t// Calls Join function of contract to join a new game\n\t// Will return an error if already in a game that is not finished.\n\tjoinGame(): Promise<ContractExecInfo<JoinResponse>> {\n\t\treturn this.execute<JoinResponse>({\n\t\t\tjoin: {},\n\t\t}, {\n\t\t\tamount: [\n\t\t\t\t{\n\t\t\t\t\tamount: '81000',\n\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t},\n\t\t\t],\n\t\t\tgas: ''+XG_BASE_FEE,\n\t\t}, [\n\t\t\t{\n\t\t\t\tdenom: 'uscrt',\n\t\t\t\tamount: SN_DEFAULT_WAGER,\n\t\t\t},\n\t\t]);\n\t}\n\n\tsubmitAssertion(si_basis: CanonicalBasis, si_quality: SemanticQuality): Promise<ContractExecInfo<SubmitResponse>> {\n\t\tconst [si_attr, s_value] = si_quality.split(':');\n\n\t\tconst g_quality = 'color' === si_attr? {color:s_value}: {shape:s_value};\n\n\t\treturn this.execute<SubmitResponse>({\n\t\t\tsubmit: {\n\t\t\t\ttarget: si_basis,\n\t\t\t\t...g_quality,\n\t\t\t},\n\t\t} as SubmitMsg, {\n\t\t\tamount: [\n\t\t\t\t{\n\t\t\t\t\tamount: '65000',\n\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t},\n\t\t\t],\n\t\t\tgas: ''+XG_BASE_FEE,\n\t\t});\n\t}\n\n\tsubmitGuess(g_opt: GuessOption): Promise<ContractExecInfo<GuessResponse>> {\n\t\treturn this.execute<GuessResponse>({\n\t\t\tguess: g_opt,\n\t\t} as GuessMsg, {\n\t\t\tamount: [\n\t\t\t\t{\n\t\t\t\t\tamount: '65000',\n\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t},\n\t\t\t],\n\t\t\tgas: ''+XG_BASE_FEE,\n\t\t});\n\t}\n\n\tpickReward(si_pick: PickOption): Promise<ContractExecInfo<PickRewardResponse>> {\n\t\treturn this.execute<PickRewardResponse>({\n\t\t\tpick_reward: {\n\t\t\t\treward: si_pick,\n\t\t\t},\n\t\t} as PickRewardMsg, {\n\t\t\tamount: [\n\t\t\t\t{\n\t\t\t\t\tamount: '1000',\n\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t},\n\t\t\t],\n\t\t\tgas: ''+(25n * XG_BASE_FEE),\n\t\t});\n\t}\n\n\tforceEndgame(): Promise<ContractExecInfo<ForceEndgameResponse>> {\n\t\treturn this.execute<PickRewardResponse>({\n\t\t\tforce_endgame: {},\n\t\t}, {\n\t\t\tamount: [\n\t\t\t\t{\n\t\t\t\t\tamount: '65000',\n\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t},\n\t\t\t],\n\t\t\tgas: ''+XG_BASE_FEE,\n\t\t});\n\t}\n\n}\n\nexport interface TokensResponse extends JsonObject {\n\ttoken_list: {\n\t\ttokens: string[];\n\t};\n}\n\nexport interface NftMetadata extends JsonObject {\n\tanimation_url: null;\n\tattributes: null;\n\tbackground_color: string;\n\tdescription: string;\n\texternal_url: null;\n\timage: string;\n\timage_data: null;\n\tmedia: null;\n\tname: string;\n\tprotected_attributes: null;\n\tyoutube_url: null;\n}\n\nexport interface NftInfoResponse extends JsonObject {\n\tprivate_metadata: {\n\t\ttoken_uri?: string;\n\t\textension: NftMetadata;\n\t};\n}\n\nexport class MinterContract extends Contract {\n\tasync queryListNfts(): Promise<TokensResponse> {\n\t\tconst g_response = await this.query<TokensResponse>({\n\t\t\ttokens: {\n\t\t\t\towner: this._k_wallet.publicAddress,\n\t\t\t},\n\t\t});\n\n\t\tif(g_response.error) {\n\t\t\tthrow new ContractError(g_response.error);\n\t\t}\n\n\t\treturn g_response!;\n\t}\n\n\tasync queryNftInfo(si_token: string): Promise<NftInfoResponse> {\n\t\tconst g_response = await this.query<NftInfoResponse>({\n\t\t\tprivate_metadata: {\n\t\t\t\ttoken_id: si_token,\n\t\t\t},\n\t\t});\n\n\t\tif(g_response.error) {\n\t\t\tthrow new ContractError(g_response.error);\n\t\t}\n\n\t\treturn g_response!;\n\t}\n\n\tasync *queryNfts(): AsyncGenerator<NftInfoResponse> {\n\t\tconst g_list = await this.queryListNfts();\n\n\t\tfor(const si_token of g_list.token_list.tokens) {\n\t\t\tyield await this.queryNftInfo(si_token);\n\t\t}\n\t}\n}\n\n\n// // Calls Submit function in contract to submit a hint to other player.\n// // Will return an error if the game is not in the correct round/state to receive a hint.\n// export const executeSubmit = async (target: string, shape: string | null, color: string | null): Promise<SubmitResponse> => {\n// \t// TODO: need to update wallet\n// \tconst keplr = get(keplrStore);\n// \tconst { keplrEnabled, scrtAuthorized, scrtClient } = keplr;\n// \tif (!keplrEnabled || !scrtAuthorized || !scrtClient) {\n// \t\treturn { error: \"Keplr not enabled\" };\n// \t}\n\n// \tif (shape === null && color === null) {\n// \t\treturn { error: \"Hint must have a color or shape\" };\n// \t}\n\n// \tif (shape !== null && color !== null) {\n// \t\treturn { error: \"Hint must have a color or shape, but not both\" };\n// \t}\n\n// \tif (target != \"nobody_has\" && target != \"bag_not\") {\n// \t\treturn { error: \"Invalid target in hint\" };\n// \t}\n\n// \tlet executeMsg: SubmitMsg = {\n// \t\tsubmit: {\n// \t\t\ttarget\n// \t\t}\n// \t}\n\n// \tif (color != null) {\n// \t\tif (color != \"red\" && color != \"blue\" && color != \"green\" && color != \"black\") {\n// \t\t\treturn { error: \"Invalid color in hint\" };\n// \t\t}\n// \t\texecuteMsg.submit.color = color;\n// \t} else if (shape != null) {\n// \t\tif (shape != \"triangle\" && shape != \"square\" && shape != \"circle\" && shape != \"star\") {\n// \t\t\treturn { error: \"Invalid shape in hint\" };\n// \t\t}\n// \t\texecuteMsg.submit.shape = shape;\n// \t}\n\n// \tconst funds = [];\n// \tconst fee = {\n// \t\tamount: [{ amount: \"10000\", denom: \"uscrt\" }],\n// \t\tgas: \"40000\",\n// \t};\n\n// \ttry {\n// \t\tconst response = await scrtClient.execute(P_CONTRACT_ADDR, executeMsg, \"\", funds, fee);\n// \t\tlet data: SubmitResponse = JSON.parse(d_decoder.decode(response.data));\n// \t\treturn data;\n// \t} catch (error: any) {\n// \t\treturn { error: error.toString() };\n// \t}\n// }\n\n// // Calls Guess function in contract to make a guess at the end of round 1.\n// // Will return an error if the game is not in the correct round/state to receive a guess.\n// export const executeGuess = async (target: string, shape: string | null, color: string | null): Promise<GuessResponse> => {\n// \t// TODO: need to update wallet\n// \tconst keplr = get(keplrStore);\n// \tconst { keplrEnabled, scrtAuthorized, scrtClient } = keplr;\n// \tif (!keplrEnabled || !scrtAuthorized || !scrtClient) {\n// \t\treturn { error: \"Keplr not enabled\" };\n// \t}\n\n// \tif (target != \"abstain\" && target != \"bag\" && target != \"opponent\") {\n// \t\treturn { error: \"Invalid target for guess\" };\n// \t}\n\n// \tif (target != \"abstain\" && (shape === null || color === null)) {\n// \t\treturn { error: \"Guess must have a color and shape, unless you are abstaining\" };\n// \t}\n\n// \tlet executeMsg: GuessMsg = {\n// \t\tguess: {\n// \t\t\ttarget\n// \t\t}\n// \t}\n\n// \tif (color != null && shape != null) {\n// \t\tif (color != \"red\" && color != \"blue\" && color != \"green\" && color != \"black\") {\n// \t\t\treturn { error: \"Invalid color in guess\" };\n// \t\t}\n// \t\tif (shape != \"triangle\" && shape != \"square\" && shape != \"circle\" && shape != \"star\") {\n// \t\t\treturn { error: \"Invalid shape in guess\" };\n// \t\t}\n// \t\texecuteMsg.guess.color = color;\n// \t\texecuteMsg.guess.shape = shape;\n// \t}\n\n// \tconst funds = [];\n// \tconst fee = {\n// \t\tamount: [{ amount: \"10000\", denom: \"uscrt\" }],\n// \t\tgas: \"40000\",\n// \t};\n\n// \ttry {\n// \t\tconst response = await scrtClient.execute(P_CONTRACT_ADDR, executeMsg, \"\", funds, fee);\n// \t\tlet data: GuessResponse = JSON.parse(d_decoder.decode(response.data));\n// \t\treturn data;\n// \t} catch (error: any) {\n// \t\treturn { error: error.toString() };\n// \t}\n// }\n\n// // Calls PickReward function in contract to pick a reward in round 3.\n// // Will return an error if the game is not in the correct round/state to have player pick a reward.\n// export const executePickReward = async (reward: string): Promise<PickRewardResponse> => {\n// \t// TODO: need to update wallet\n// \tconst keplr = get(keplrStore);\n// \tconst { keplrEnabled, scrtAuthorized, scrtClient } = keplr;\n// \tif (!keplrEnabled || !scrtAuthorized || !scrtClient) {\n// \t\treturn { error: \"Keplr not enabled\" };\n// \t}\n\n// \tif (reward != \"pool\" && reward != \"nft\") {\n// \t\treturn { error: \"Invalid value for picked reward\" };\n// \t}\n\n// \tlet executeMsg: PickRewardMsg = {\n// \t\tpick_reward: {\n// \t\t\treward\n// \t\t}\n// \t}\n\n// \tconst funds = [];\n// \tconst fee = {\n// \t\tamount: [{ amount: \"10000\", denom: \"uscrt\" }],\n// \t\tgas: \"40000\",\n// \t};\n\n// \ttry {\n// \t\tconst response = await scrtClient.execute(P_CONTRACT_ADDR, executeMsg, \"\", funds, fee);\n// \t\tlet data: PickRewardResponse = JSON.parse(d_decoder.decode(response.data));\n// \t\treturn data;\n// \t} catch (error: any) {\n// \t\treturn { error: error.toString() };\n// \t}\n// }\n\ntype FrequencyTuner = (k_eta: EtaEstimator, xtl_remain: number) => boolean;\n\nconst F_FREQ_DEFAULT: FrequencyTuner = (k_eta: EtaEstimator, xtl_remain: number) => {\n\t// once less than a minute remains\n\tif(xtl_remain < 60*XTL_SECONDS) {\n\t\t// update every 5 seconds\n\t\treturn (Date.now() - k_eta.lastUpdated) > 5 * XTL_SECONDS;\n\t}\n\t// otherwise\n\telse {\n\t\t// update every 30 seconds\n\t\treturn (Date.now() - k_eta.lastUpdated) > 30 * XTL_SECONDS;\n\t}\n};\n\ninterface RpcResponse<Result extends JsonObject> extends JsonObject {\n\tjsnorpc: string;\n\tid: number;\n\tresult: Result;\n}\n\ninterface BlockId {\n\thash: string;\n\tparts: {\n\t\ttotal: number;\n\t\thash: string;\n\t};\n}\n\ninterface BlockRpcResponse extends JsonObject {\n\tblock_id: BlockId;\n\tblock: {\n\t\theader: {\n\t\t\tversion: {\n\t\t\t\tblock: string;\n\t\t\t};\n\t\t\tchain_id: string;\n\t\t\theight: string;\n\t\t\ttime: string;\n\t\t\tlast_block_id: BlockId;\n\t\t\tlast_commit_hash: string;\n\t\t\tdata_hash: string;\n\t\t\tvalidators_hash: string;\n\t\t\tnext_validators_hash: string;\n\t\t\tconsensus_hash: string;\n\t\t\tapp_hash: string;\n\t\t\tlast_results_hash: string;\n\t\t\tevidence_hash: string;\n\t\t\tproposer_address: string;\n\t\t};\n\t\tdata: {\n\t\t\ttxns: string[];\n\t\t};\n\t\tlast_commit: {\n\t\t\theight: string;\n\t\t\tround: number;\n\t\t\tblock_id: BlockId;\n\t\t\tsignatures: {\n\t\t\t\tblock_id_flag: number;\n\t\t\t\tvalidator_address: string;\n\t\t\t\ttimestamp: string;\n\t\t\t\tsignature: string;\n\t\t\t}[];\n\t\t};\n\t};\n}\n\ninterface StatusRpcResponse extends JsonObject {\n\tnode_info: {\n\t\tprotocol_version: {\n\t\t\tp2p: string;\n\t\t\tblock: string;\n\t\t\tapp: string;\n\t\t};\n\t\tid: string;\n\t\tlisten_addr: string;\n\t\tnetwork: string;\n\t\tversion: string;\n\t\tchannels: string;\n\t\tmoniker: string;\n\t\tother: {\n\t\t\ttx_index: string;\n\t\t\trpc_address: string;\n\t\t};\n\t};\n\tsync_info: {\n\t\tlatest_block_hash: string;\n\t\tlatest_app_hash: string;\n\t\tlatest_block_height: string;\n\t\tlatest_block_time: string;\n\t\tearliest_block_hash: string;\n\t\tearliest_app_hash: string;\n\t\tearliest_block_height: string;\n\t\tearliest_block_time: string;\n\t\tcatching_up: boolean;\n\t};\n\tvalidator_info: {\n\t\taddress: string;\n\t\tpub_key: {\n\t\t\ttype: string;\n\t\t\tvalue: string;\n\t\t},\n\t\tvoting_power: string;\n\t};\n}\n\n// const XTL_BLOCK_TIME_AVG = SI_CHAIN.startsWith('pulsar')? 1.98*XTL_SECONDS: 5.99*XTL_SECONDS\n// const N_BLOCKS_PER_5_MIN = Math.floor((10*XTL_MINUTES) / XTL_BLOCK_TIME_AVG);\nconst N_BLOCKS_PER_5_MIN = 200;\nconsole.log(`Imposing global ${N_BLOCKS_PER_5_MIN} blocks per 5 minutes estimate`);\n\nlet b_currently_updating = false;\nlet xg_latest: bigint = 0n;\nlet xt_latest = 0;\nlet xt_last_update = 0;\n\nasync function update_latest() {\n\tif(Date.now() - xt_last_update < 5*XTL_SECONDS) {\n\t\treturn;\n\t}\n\n\tconst du_endpoint = new URL(P_LCD_RPC);\n\tdu_endpoint.pathname = '/status';\n\n\ttry {\n\t\tconst g_res = await get_json<RpcResponse<StatusRpcResponse>>(du_endpoint.href);\n\n\t\tconst {\n\t\t\tlatest_block_height: s_latest_height,\n\t\t\tlatest_block_time: s_latest_time,\n\t\t} = g_res.data!.result.sync_info;\n\n\t\txg_latest = BigInt(s_latest_height);\n\t\txt_latest = (new Date(s_latest_time)).getTime();\n\t\txt_last_update = Date.now();\n\t}\n\tcatch(e_update) {}\n}\n\nexport class EtaEstimator {\n\tprotected _xg_block_start: bigint;\n\tprotected _xt_start = 0;\n\tprotected _xg_block_dest: bigint;\n\tprotected _f_should_update: () => boolean;\n\tprotected _xt_eta = 0;\n\tprotected _xt_updated = 0;\n\tprotected _b_currently_updating = false;\n\n\tconstructor(w_block_start: string | bigint, n_blocks_elapse=N_BLOCKS_PER_5_MIN, f_frequency=F_FREQ_DEFAULT) {\n\t\tthis._xg_block_start = BigInt(w_block_start);\n\t\tthis._xg_block_dest = this._xg_block_start + BigInt(n_blocks_elapse);\n\t\tthis._f_should_update = () => f_frequency(this, this._xt_eta - Date.now());\n\t}\n\n\tprotected async fetch_start_time(): Promise<void> {\n\t\tconst du_endpoint = new URL(P_LCD_RPC);\n\t\tdu_endpoint.pathname = '/block';\n\n\t\tconst g_res = await get_json<RpcResponse<BlockRpcResponse>>(du_endpoint.href, {\n\t\t\tsearch: {\n\t\t\t\theight: this._xg_block_start+'',\n\t\t\t},\n\t\t});\n\n\t\tthis._xt_start = (new Date(g_res.data!.result.block.header.time)).getTime();\n\t}\n\n\tprotected async estimate(): Promise<number> {\n\t\tb_currently_updating = true;\n\n\t\tif(!this._xt_start) {\n\t\t\tawait this.fetch_start_time();\n\t\t}\n\n\t\tawait update_latest();\n\n\t\t// not enough data to estimate yet\n\t\tconst n_span = Number(xg_latest - this._xg_block_start);\n\t\tif(n_span < 5) return 0;\n\n\t\tconst xtl_per_block = (xt_latest - this._xt_start) / n_span;\n\n\t\tconst n_blocks_remaining = Number(this._xg_block_dest - xg_latest);\n\n\t\tconst xt_now = this._xt_updated = Date.now();\n\n\t\tb_currently_updating = false;\n\n\t\treturn this._xt_eta = xt_now + Math.round(n_blocks_remaining * xtl_per_block);\n\t}\n\n\tget lastUpdated(): number {\n\t\treturn this._xt_updated;\n\t}\n\n\n\tget destinationBlock(): bigint {\n\t\treturn this._xg_block_dest;\n\t}\n\n\tget expired(): boolean {\n\t\treturn xg_latest >= this.destinationBlock;\n\t}\n\n\tget ready(): boolean {\n\t\treturn 0 !== this._xt_eta;\n\t}\n\n\tget eta(): number {\n\t\tif(!this.expired && !b_currently_updating && this._f_should_update()) {\n\t\t\tvoid this.estimate();\n\t\t}\n\n\t\treturn this._xt_eta;\n\t}\n\n\tget remaining(): number {\n\t\treturn this.eta - Date.now();\n\t}\n}\n","import type { JsonObject } from 'secretjs/types/types';\n\nexport interface PubKey {\n\ttype: string,\n\tvalue: string,\n}\n\nexport interface Signature {\n\tpub_key: PubKey,\n\tsignature: string,\n}\n\nexport interface PermitParams {\n\tchain_id: string,\n\tpermit_name: string,\n\tallowed_tokens: string[],\n\tpermissions: string[],\n}\n\nexport interface Permit extends JsonObject {\n\tparams: PermitParams,\n\tsignature: Signature,\n}\n\n\n/**\n * permit name\n */\nexport const SI_PERMIT = import.meta.env.VITE_PERMIT_NAME;\n","import type {\n\tKeplr,\n\tKey,\n} from \"@keplr-wallet/types\";\n\nimport type {\n\tCoin,\n\tJsonObject,\n\tStdFee,\n\tStdSignature,\n} from \"secretjs/types/types\";\n\nimport type {\n\tAccountData,\n\tOfflineSigner,\n} from 'secretjs/types/wallet';\n\nimport type {\n\tSecretUtils,\n} from 'secretjs/types/enigmautils';\n\n\nimport {\n\tExecuteResult,\n\tSigningCosmWasmClient,\n} from 'secretjs';\n\n\nimport {\n\tP_CONTRACT_GAME_ADDR, P_CONTRACT_MINTER_ADDR,\n} from \"./contract\";\n\nimport {\n\tSI_PERMIT,\n} from \"./permits\";\n\nimport {\n\tP_LCD_REST,\n\tWalletError,\n} from './wallet';\n\nimport type {\n\tWallet,\n\tAccountChangeCallback,\n\tSecretChainInfo,\n} from './wallet';\nimport { forever } from '#/util/belt';\n\n\nexport class EnableKeplrError extends WalletError {\n\tconstructor(e_enable: unknown) {\n\t\tsuper('While attempting to enable Keplr', e_enable);\n\t}\n}\n\nexport class OfflineSignerError extends WalletError {\n\tconstructor(e_signer: unknown) {\n\t\tsuper('While attempting to acquire offline signer', e_signer);\n\t}\n}\n\nexport class EnigmaUtilsError extends WalletError {\n\tconstructor(e_enigma: unknown) {\n\t\tsuper('While attempting to acquire enigma utils', e_enigma);\n\t}\n}\n\nexport class KeplrWallet implements Wallet {\n\tstatic isAvailable(): boolean {\n\t\treturn !!window.keplr;\n\t}\n\n\tstatic fromWindow(): KeplrWallet {\n\t\tif(window.keplr) {\n\t\t\treturn new KeplrWallet(window.keplr);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error(`Keplr extension is not installed`);\n\t\t}\n\t}\n\n\tprotected _k_keplr: Keplr;\n\tprotected _si_chain!: string;\n\tprotected _k_signer!: OfflineSigner;\n\tprotected _k_enigma!: SecretUtils;\n\tprotected _k_client!: SigningCosmWasmClient;\n\tprotected _g_key!: Key;\n\tprotected _a_accounts!: readonly AccountData[];\n\tprotected _fk_change!: AccountChangeCallback;\n\tprotected _b_disabled = false;\n\tprotected _f_change_listener: (() => Promise<void>) | null = null;\n\n\tprotected constructor(k_keplr: Keplr) {\n\t\tthis._k_keplr = k_keplr;\n\t}\n\n\tdisable(): void {\n\t\t// remove change listener\n\t\tif(this._f_change_listener) {\n\t\t\twindow.removeEventListener('keplr_keystorechange', this._f_change_listener);\n\t\t}\n\n\t\t// disable wallet\n\t\tthis._b_disabled = true;\n\t}\n\n\tasync enable(g_chain: SecretChainInfo, fk_change: AccountChangeCallback): Promise<boolean> {\n\t\tif(this._b_disabled) return false;\n\n\t\tconst si_chain = this._si_chain = g_chain.chainId;\n\n\t\tthis._fk_change = fk_change;\n\n\t\t// suggest chain\n\t\ttry {\n\t\t\tawait this._k_keplr.experimentalSuggestChain({\n\t\t\t\tchainId: si_chain,\n\t\t\t\tchainName: g_chain.chainName,\n\t\t\t\trpc: g_chain.rpc,\n\t\t\t\trest: g_chain.rest,\n\t\t\t\tbip44: {\n\t\t\t\t\tcoinType: 529,\n\t\t\t\t},\n\t\t\t\tcoinType: 529,\n\t\t\t\tstakeCurrency: {\n\t\t\t\t\tcoinDenom: 'SCRT',\n\t\t\t\t\tcoinMinimalDenom: 'uscrt',\n\t\t\t\t\tcoinDecimals: 6,\n\t\t\t\t},\n\t\t\t\tbech32Config: {\n\t\t\t\t\tbech32PrefixAccAddr: 'secret',\n\t\t\t\t\tbech32PrefixAccPub: 'secretpub',\n\t\t\t\t\tbech32PrefixValAddr: 'secretvaloper',\n\t\t\t\t\tbech32PrefixValPub: 'secretvaloperpub',\n\t\t\t\t\tbech32PrefixConsAddr: 'secretvalcons',\n\t\t\t\t\tbech32PrefixConsPub: 'secretvalconspub',\n\t\t\t\t},\n\t\t\t\tcurrencies: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcoinDenom: 'SCRT',\n\t\t\t\t\t\tcoinMinimalDenom: 'uscrt',\n\t\t\t\t\t\tcoinDecimals: 6,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tfeeCurrencies: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcoinDenom: 'SCRT',\n\t\t\t\t\t\tcoinMinimalDenom: 'uscrt',\n\t\t\t\t\t\tcoinDecimals: 6,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tgasPriceStep: {\n\t\t\t\t\tlow: 0.4,\n\t\t\t\t\taverage: 0.4,\n\t\t\t\t\thigh: 0.4,\n\t\t\t\t},\n\t\t\t\tfeatures: ['secretwasm'],\n\t\t\t});\n\t\t}\n\t\tcatch (e_suggest) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// enable\n\t\ttry {\n\t\t\tawait this._k_keplr.enable(si_chain);\n\t\t}\n\t\tcatch(e_enable: unknown) {\n\t\t\tthrow new EnableKeplrError(e_enable);\n\t\t}\n\n\t\t// offline signer\n\t\ttry {\n\t\t\tthis._k_signer = window.getOfflineSigner!(si_chain) as unknown as OfflineSigner;\n\t\t}\n\t\tcatch(e_signer: unknown) {\n\t\t\tthrow new OfflineSignerError(e_signer);\n\t\t}\n\n\t\t// enigma utils\n\t\ttry {\n\t\t\tthis._k_enigma = window.getEnigmaUtils!(si_chain);\n\t\t}\n\t\tcatch(e_enigma: unknown) {\n\t\t\tthrow new EnigmaUtilsError(e_enigma);\n\t\t}\n\n\t\t// save key\n\t\tthis._g_key = await this._k_keplr.getKey(si_chain);\n\n\t\t// save accounts\n\t\tthis._a_accounts = await this._k_signer.getAccounts();\n\n\t\t// cosm-wasm client\n\t\tthis._k_client = new SigningCosmWasmClient(\n\t\t\tP_LCD_REST,\n\t\t\tthis.publicAddress,\n\t\t\tthis._k_signer,\n\t\t\tthis._k_enigma,\n\t\t\t{\n\t\t\t\texec: {\n\t\t\t\t\tamount: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tamount: '62500',\n\t\t\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tgas: '250000',\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\n\t\t// listen for change event\n\t\twindow.addEventListener('keplr_keystorechange', this._f_change_listener = async() => {\n\t\t\tconst g_key = await this._k_keplr.getKey(si_chain);\n\t\t\tif(g_key.bech32Address !== this.publicAddress) {\n\t\t\t\tthis._fk_change();\n\t\t\t}\n\t\t});\n\n\t\t// worked\n\t\treturn true;\n\t}\n\n\tget chain(): string {\n\t\treturn this._si_chain;\n\t}\n\n\tget key(): Key {\n\t\treturn this._g_key;\n\t}\n\n\tget accounts(): readonly AccountData[] {\n\t\treturn this._a_accounts;\n\t}\n\n\tget primaryAccount(): AccountData {\n\t\treturn this.accounts[0];\n\t}\n\n\tget publicAddress(): string {\n\t\treturn this.primaryAccount.address;\n\t}\n\n\tasync signQueryPermit(): Promise<StdSignature> {\n\t\tif(this._b_disabled) return forever<StdSignature>();\n\n\t\treturn (await this._k_keplr.signAmino(\n\t\t\tthis.chain,\n\t\t\tthis.publicAddress,\n\t\t\t{\n\t\t\t\tchain_id: this.chain,\n\t\t\t\taccount_number: '0',\n\t\t\t\tsequence: '0',\n\t\t\t\tfee: {\n\t\t\t\t\tamount: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdenom: 'uscrt',\n\t\t\t\t\t\t\tamount: '0',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tgas: '1',\n\t\t\t\t},\n\t\t\t\tmsgs: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'query_permit',\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\tpermit_name: SI_PERMIT,\n\t\t\t\t\t\t\tallowed_tokens: [\n\t\t\t\t\t\t\t\tP_CONTRACT_GAME_ADDR,\n\t\t\t\t\t\t\t\tP_CONTRACT_MINTER_ADDR,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tpermissions: ['owner'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmemo: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tpreferNoSetFee: true,\n\t\t\t\tpreferNoSetMemo: true,\n\t\t\t},\n\t\t)).signature;\n\t}\n\n\texecute(p_contract: string, g_msg: JsonObject, a_xfer?: readonly Coin[], g_fee?: StdFee, si_code_hash?: string): Promise<ExecuteResult> {\n\t\tif(this._b_disabled) return forever<ExecuteResult>();\n\n\t\tlet s_opts = '';\n\t\tif(g_fee) {\n\t\t\ts_opts += ` --gas ${g_fee.gas}`;\n\t\t}\n\t\tif(a_xfer && a_xfer.length) {\n\t\t\tconst g_xfer = a_xfer[0];\n\t\t\ts_opts += ` --amount ${g_xfer.amount}${g_xfer.denom}`;\n\t\t}\n\t\t// console.log(`secretd tx compute execute ${p_contract} '${JSON.stringify(g_msg)}' --from ${this.publicAddress}${s_opts}`);\n\t\tdebugger;\n\t\treturn this._k_client.execute(p_contract, g_msg, '', a_xfer, g_fee , si_code_hash || void 0);\n\t}\n\n\tquery(p_contract: string, g_msg: JsonObject, g_params?: JsonObject, si_code_hash?: string): Promise<JsonObject> {\n\t\tif(this._b_disabled) return forever<JsonObject>();\n\n\t\t// console.log(`secretd q compute ${p_contract} '${JSON.stringify(g_msg)}' --from ${this.publicAddress}`);\n\t\treturn this._k_client.queryContractSmart(p_contract, g_msg, g_params || {}, si_code_hash || void 0);\n\t}\n}\n","import { ode } from './belt';\nimport type { JsonValue } from './types';\n\ntype Hash = Record<string, string>;\n\ntype Split<S extends string, D extends string> = S extends `${infer T}${D}${infer U}` ? [T, ...Split<U, D>] : [S];\n\ntype TakeLast<V> = V extends []\n\t? never\n\t: V extends [string]\n\t\t? V[0]\n\t\t: V extends [string, ...infer R]\n\t\t\t? TakeLast<R>\n\t\t\t: never;\n\ntype TrimLeft<V extends string> = V extends ` ${infer R}` ? TrimLeft<R> : V;\n\ntype TrimRight<V extends string> = V extends `${infer R} ` ? TrimRight<R> : V;\n\ntype Trim<V extends string> = TrimLeft<TrimRight<V>>;\n\ntype StripModifier<V extends string, M extends string> = V extends `${infer L}${M}${infer A}` ? L : V;\n\ntype StripModifiers<V extends string> = StripModifier<\n\tStripModifier<\n\t\tStripModifier<\n\t\t\tStripModifier<V, '.'>, '#'\n\t\t>,\n\t'['>,\n':'>;\n\ntype TakeLastAfterToken<V extends string, T extends string> = StripModifiers<\n\tTakeLast<\n\t\tSplit<\n\t\t\tTrim<V>, T\n\t\t>\n\t>\n>;\n\ntype GetLastElementName<V extends string> = TakeLastAfterToken<\n\tTakeLastAfterToken<V, ' '>,\n\t'>'\n>;\n\ntype GetEachElementName<V, L extends string[] = []> = V extends []\n\t? L\n\t: V extends [string]\n\t\t? [...L, GetLastElementName<V[0]>]\n\t\t: V extends [string, ...infer R]\n\t\t\t? GetEachElementName<R, [...L, GetLastElementName<V[0]>]>\n\t\t\t: [];\n\ntype GetElementNames<V extends string> = GetEachElementName<Split<V, ','>>;\n\ntype ElementByName<V extends string> = V extends keyof HTMLElementTagNameMap\n\t? HTMLElementTagNameMap[V]\n\t: V extends keyof SVGElementTagNameMap\n\t\t? SVGElementTagNameMap[V]\n\t\t: Element;\n\ntype MatchEachElement<V, L extends Element = Element> = V extends []\n\t? L\n\t: V extends [string]\n\t\t? L | ElementByName<V[0]>\n\t\t: V extends [string, ...infer R]\n\t\t\t? MatchEachElement<R, L | ElementByName<V[0]>>\n\t\t\t: L;\n\ntype QueryResult<T extends string> = MatchEachElement<GetElementNames<T>>;\n\nexport const qs = <T extends string>(dm_node: ParentNode | HTMLElement, sq_selector: T): QueryResult<T> => dm_node.querySelector(sq_selector) as QueryResult<T>;\n\nexport const qsa = <T extends string>(dm_node: ParentNode | HTMLElement, sq_selector: T): QueryResult<T>[] => Array.prototype.slice.call(dm_node.querySelectorAll(sq_selector), 0);\n\nexport function dd<T extends HTMLElement = HTMLElement>(\n\ts_tag: string,\n\th_attrs: Record<string, string | number | boolean> = {},\n\ta_children: (Element | string)[] = [],\n): T {\n\tconst dm_node = document.createElement(s_tag);\n\n\tfor(const si_attr in h_attrs) {\n\t\tdm_node.setAttribute(si_attr, h_attrs[si_attr]+'');\n\t}\n\n\tfor(const w_child of a_children) {\n\t\tdm_node.append(w_child);\n\t}\n\n\treturn dm_node as T;\n}\n\n\nconst S_UUID_V4 = 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx';\nconst R_UUID_V4 = /[xy]/g;\n\nexport const uuid_v4 = (): string => {\n\tlet dt_now = Date.now();\n\tif('undefined' !== typeof performance) dt_now += performance.now();\n\treturn S_UUID_V4.replace(R_UUID_V4, (s) => {\n\t\tconst x_r = (dt_now + (Math.random()*16)) % 16 | 0;\n\t\tdt_now = Math.floor(dt_now / 16);\n\t\treturn ('x' === s? x_r: ((x_r & 0x3) | 0x8)).toString(16);\n\t});\n};\n\nexport function read_cookie(): Record<string, string> {\n\treturn document.cookie.split(';').reduce((h_out, s_cookie) => {\n\t\tconst a_split = s_cookie.trim().split('=');\n\t\treturn {\n\t\t\t...h_out,\n\t\t\t[a_split[0]]: a_split.slice(1).join('='),\n\t\t};\n\t}, {});\n}\n\nexport function read_cookie_json<T extends JsonValue=JsonValue>(si_key: string): T {\n\tconst h_cookie = read_cookie();\n\n\tif(!(si_key in h_cookie)) return null;\n\n\tlet w_value: JsonValue;\n\ttry {\n\t\tw_value = JSON.parse(h_cookie[si_key]);\n\t}\n\tcatch(e_parse) {\n\t\tconsole.error(`failed to parse cookie JSON value associated with key '${si_key}'`);\n\t\tdelete_cookie(si_key);\n\t}\n\n\treturn w_value;\n}\n\nexport function write_cookie(h_cookie: Record<string, JsonValue>, xt_expires: number) {\n\tconst h_serialize: Record<string, string> = {};\n\n\tfor(const [si_key, z_value] of ode(h_cookie)) {\n\t\tif('string' === typeof z_value) {\n\t\t\th_serialize[si_key] = z_value;\n\t\t}\n\t\telse if(null === z_value || 'undefined' === typeof z_value) {\n\t\t\tdelete_cookie(si_key);\n\t\t}\n\t\telse {\n\t\t\th_serialize[si_key] = JSON.stringify(z_value);\n\t\t}\n\t}\n\n\tdocument.cookie = Object.entries({\n\t\t...h_serialize,\n\t\t'max-age': ''+xt_expires,\n\t})\n\t\t.map(([si_key, s_value]) => `${si_key}=${s_value}`)\n\t\t.join('; ');\n}\n\nexport function delete_cookie(si_cookie: string) {\n\treturn write_cookie({\n\t\t[si_cookie]: '',\n\t}, 0);\n}\n","import {\n\tA_COLORS,\n\tA_SHAPES,\n\tH_COLORS,\n} from '#/intl/game';\n\nimport type {\n\tCanonicalColor,\n\tCanonicalShape,\n\tCanonicalBasis,\n\tCanonicalTarget,\n} from '#/intl/game';\n\nexport type SemanticColorQuality = `color:${CanonicalColor}`;\nexport type SemanticShapeQuality = `shape:${CanonicalShape}`;\n\nexport type SemanticQuality = SemanticColorQuality | SemanticShapeQuality;\n\nexport type SemanticAssertion_Nobody = `nobody_has|${SemanticQuality}`;\nexport type SemanticAssertion_Mine = `i_have|${SemanticQuality}`;\nexport type SemanticAssertion = `${CanonicalBasis}|${SemanticQuality}`;\n\n// export type QualityMask = number & {}\n\nexport const XM_DEDUCE_BLANK = 0xffff;  // 16 bits\n\nconst XM_HI_BIT = 0b10000000;\n\nconst S_TABLE = 'RGBK▲▆●★';  // ▆ █ ✶ ★\n\nfunction render_known(xm_known: number): string {\n\tlet a_out = [];\n\tfor(let ii_each = 0; ii_each < 8; ii_each++) {\n\t\tif(xm_known & XM_HI_BIT) {\n\t\t\ta_out.push(S_TABLE[ii_each]);\n\t\t}\n\t\telse {\n\t\t\ta_out.push(' ');\n\t\t}\n\n\t\txm_known = xm_known << 1;\n\t}\n\n\treturn `[${a_out.join(',')}]`;\n}\n\nfunction mask_from_semantic(si_semantic: SemanticQuality, b_complement=false): number {\n\tconst [si_quality, s_value] = si_semantic.split(':');\n\n\tif('color' === si_quality) {\n\t\tconst i_color = A_COLORS.indexOf(s_value as CanonicalColor);\n\t\treturn (1 << (7 - i_color)) | (b_complement? 0x0f: 0);\n\t}\n\telse {\n\t\tconst i_shape = A_SHAPES.indexOf(s_value as CanonicalShape);\n\t\treturn (1 << (3 - i_shape)) | (b_complement? 0xf0: 0);\n\t}\n}\n\nexport function use_quality_in_sentence(si_semantic: SemanticQuality): string {\n\tconst [si_attr, s_value] = si_semantic.split(':');\n\n\treturn `${'shape' === si_attr? 'a ': ''}${s_value}`;\n}\n\nexport function use_assertion_in_sentence(si_assertion: SemanticAssertion): string {\n\tconst [si_basis, si_quality] = si_assertion.split('|') as [CanonicalBasis, SemanticQuality];\n\n\treturn `${'nobody_has' === si_basis? 'nobody has ': 'my chip is'} ${use_quality_in_sentence(si_quality)}`;\n}\n\nexport interface CanonicalGuessOption {\n\ttarget: CanonicalTarget;\n\tcolor: CanonicalColor;\n\tshape: CanonicalShape;\n};\n\nexport type GuessOption = CanonicalGuessOption | {\n\ttarget: 'abstain';\n\tcolor: null;\n\tshape: null;\n};\n\nexport class Deduction {\n\tprotected _xm_deduce: number;\n\n\tconstructor(xm_given=XM_DEDUCE_BLANK) {\n\t\tthis._xm_deduce = xm_given;\n\t}\n\n\tclone(): Deduction {\n\t\treturn new Deduction(this._xm_deduce);\n\t}\n\n\t/**\n\t * rejecting a noobody assertion is more complicated than a bitmask operation can capture\n\t */\n\tnobody(si_assertion: SemanticQuality): this {\n\t\tlet xm_quality = mask_from_semantic(si_assertion);\n\n\t\t// duplicate for both arbiter and opponent\n\t\txm_quality |= (xm_quality << 8);\n\n\t\t// apply assertion\n\t\tthis._xm_deduce &= ~xm_quality;\n\n\t\treturn this;\n\t}\n\n\topponent(si_assertion: SemanticQuality, b_believe: boolean): this {\n\t\t// accept assertion\n\t\tif(b_believe) {\n\t\t\tconst xm_opp = mask_from_semantic(si_assertion, true);\n\n\t\t\t// apply inverse to arbiter\n\t\t\tconst xm_arb = ~mask_from_semantic(si_assertion);\n\n\t\t\t// apply mask\n\t\t\tthis._xm_deduce &= (xm_arb << 8) | xm_opp;\n\t\t}\n\t\t// reject assertion\n\t\telse {\n\t\t\tthis._xm_deduce &= ~mask_from_semantic(si_assertion);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\texplain(): string {\n\t\tconst xm_arb = this._xm_deduce >> 8;\n\t\tconst xm_opp = this._xm_deduce & 0xff;\n\n\t\treturn [\n\t\t\t`A: ${render_known(xm_arb)}`,\n\t\t\t`O: ${render_known(xm_opp)}`,\n\t\t].join('\\n');\n\t}\n\n\tenumerate(si_target: CanonicalTarget): CanonicalGuessOption[] {\n\t\tlet xm_known = 'bag' === si_target? this._xm_deduce >> 8: this._xm_deduce & 0xff;\n\n\t\tconst a_colors: CanonicalColor[] = [];\n\t\tconst a_shapes: CanonicalShape[] = [];\n\t\tfor(let ii_each = 0; ii_each<8; ii_each++) {\n\t\t\tif(xm_known & XM_HI_BIT) {\n\t\t\t\tif(ii_each < 4) {\n\t\t\t\t\ta_colors.push(A_COLORS[ii_each]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta_shapes.push(A_SHAPES[ii_each-4]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txm_known = xm_known << 1;\n\t\t}\n\n\t\t// pairwise combinations\n\t\tconst a_out: CanonicalGuessOption[] = [];\n\t\tfor(const si_color of a_colors) {\n\t\t\tfor(const si_shape of a_shapes) {\n\t\t\t\ta_out.push({\n\t\t\t\t\ttarget: si_target,\n\t\t\t\t\tcolor: si_color,\n\t\t\t\t\tshape: si_shape,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn a_out;\n\t}\n}\n","<script context=\"module\" lang=\"ts\">\n\timport type { Writable } from 'svelte/store';\n\timport type { PermitParams } from '#/util/encrypted-local-storage';\n\n\texport type Widgets = Record<string, Writable<string> | HTMLElement>;\n\n\texport interface AddrInfo {\n\t\tname: string;\n\t\taddr: string;\n\t\tledger?: boolean;\n\t}\n\n\ttype TextInput = string | string[];\n\n\texport interface MessagePanelHelper {\n\t\treveal_text(s_reveal: string, xt_interval?: number, xt_pause?: number): Promise<void>;\n\t\tspinning(b_spin: boolean): void;\n\t\tcommit(): Promise<void>;\n\t\treceive(g_msg: ReceivedMessage): Promise<void>;\n\t\tarbiter(z_text: TextInput, h_widgets?: Widgets): Promise<void>;\n\t\topponent(a_text: string[], h_widgets?: Widgets): Promise<void>;\n\t\tuser(z_text: string | string[], h_widgets?: Widgets): Promise<void>;\n\t\terror(z_text: TextInput, b_fatal?: boolean, h_widgets?: Widgets): Promise<void>;\n\t\twarn(z_text: TextInput, h_widgets?: Widgets): Promise<void>;\n\t\twallet(g_addr: AddrInfo): void;\n\t\tpermit(g_params: PermitParams, b_restored?: boolean): void;\n\t\tsubmittable(fk_submit: VoidFunction | null, s_tag?: string): void;\n\t\tunsubmittable(): void;\n\t}\n\n\texport interface ReceivedMessage {\n\t\tfrom: string;\n\t\tclasses?: string[];\n\t\ttext: string[];\n\t\twidgets?: Widgets;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tgetContext,\n\t\tonMount\n\t} from 'svelte';\n\n\timport {\n\t\tslide,\n\t\tblur,\n\t\tfade,\n\t} from 'svelte/transition';\n\n\timport {\n\t\tquadOut,\n\t} from 'svelte/easing';\n\n\timport Fa from 'svelte-fa';\n\n\timport {\n\t\tfaUser,\n\t\tfaWallet,\n\t\tfaFilePowerpoint,\n\t\tfaTicketAlt,\n\t} from '@fortawesome/free-solid-svg-icons';\n\t\n\timport {\n\t\tfaPaperPlane,\n\t} from '@fortawesome/free-regular-svg-icons';\n\n\timport type {\n\t\tSupportedLanguage,\n\t} from '#/intl/game';\n\n\timport {\n\t\tKillables,\n\t\tmicrotask,\n\t\tode,\n\t\toder,\n\t\ttimeout,\n\t} from '#/util/belt';\n\n\timport type {\n\t\tGameContext,\n\t } from './App.svelte';\n\n\timport { dd, qs, qsa } from '#/util/dom';\n\n\t// game context\n\tconst {\n\t\tlanguage: ys_lang,\n\t} = getContext('game') as GameContext;\n\n\t// language\n\tlet s_lang: SupportedLanguage;\n\n\t// subscribe to updates from store\n\tys_lang.subscribe(s_lang_set => s_lang = s_lang_set);\n\n\t// export helper\n\texport const k_panel: MessagePanelHelper = {\n\t\treveal_text,\n\t\tspinning,\n\t\tcommit,\n\t\treceive,\n\t\tarbiter,\n\t\topponent,\n\t\tuser,\n\t\terror,\n\t\twarn,\n\t\twallet,\n\t\tpermit,\n\t\tsubmittable,\n\t\tunsubmittable,\n\t};\n\n\t/**\n\t * killable intervals and timeouts\n\t */\n\texport let k_killables: Killables;\n\n\t/**\n\t * msg-history\n\t */\n\tlet dm_history: HTMLDivElement;\n\tlet dm_history_data: HTMLDivElement;\n\n\tlet dm_panel: HTMLDivElement;\n\n\t/**\n\t * cursor character\n\t*/\n\tlet s_cursor = '❚';\n\n\tlet s_evaluation = '';\n\n\t/**\n\t * msg text\n\t*/\n\tlet s_text = '';\n\n\t/**\n\t * nav name/addr\n\t */\n\tlet b_nav_display = false;\n\tlet s_nav_name = '';\n\tlet s_nav_addr = '';\n\n\tlet s_account_alias = '';\n\n\t/**\n\t * submit button\n\t */\n\tlet b_submit_display = false;\n\tlet fk_submit: VoidFunction | null = null;\n\n\tlet dm_cursor: HTMLElement;\n\n\tlet i_iter = 0;\n\n\tlet b_disabled = false;\n\tlet s_revealing = '';\n\n\tasync function reveal_text(s_reveal: string, xt_interval=60, xt_pause=0, b_bypass=false) {\n\t\t// clear spinner\n\t\tif(i_spinning) {\n\t\t\ts_spinner = '';\n\t\t\tk_killables.delInterval(i_spinning);\n\t\t\ti_spin = 0;\n\t\t\ti_spinning = 0;\n\t\t}\n\n\t\t// clear evaluation\n\t\ts_evaluation = '';\n\n\t\tif(!b_bypass) {\n\t\t\ts_revealing = s_reveal;\n\t\t}\n\n\t\t// set latest\n\t\tlet i_latest = ++i_iter;\n\n\t\tif(!xt_interval) xt_interval = 60;\n\n\t\tconst nl_text = s_text.length;\n\t\tconst nl_reveal = s_reveal.length;\n\n\t\tlet i_shared = 0;\n\t\tfor(; i_shared<Math.min(nl_text, nl_reveal); i_shared++) {\n\t\t\tif(s_text[i_shared] !== s_reveal[i_shared]) break;\n\t\t}\n\n\t\tconst xr_delete = 3 / 5;\n\t\tfor(let i_delete=nl_text; i_delete>i_shared; i_delete--) {\n\t\t\ts_text = s_text.slice(0, -1);\n\t\t\tawait timeout(xt_interval * xr_delete);\n\n\t\t\t// no longer latest; bail\n\t\t\tif(i_iter !== i_latest) return;\n\t\t}\n\n\t\tif(xt_pause) await timeout(xt_pause);\n\n\t\t// no longer latest; bail\n\t\tif(i_iter !== i_latest) return;\n\n\t\tconst dm_cursor_use = dm_cursor || qs(document.body, '.cursor');\n\n\t\tif(!dm_cursor_use) return;\n\n\t\tfor(let i_char=i_shared; i_char<nl_reveal; i_char++) {\n\t\t\tdm_cursor_use.classList.remove('blinking');\n\t\t\tawait timeout(10);\n\n\t\t\t// no longer latest; bail\n\t\t\tif(i_iter !== i_latest) return;\n\n\t\t\tdm_cursor_use.classList.add('blinking');\n\n\t\t\ts_text += s_reveal[i_char];\n\n\t\t\tawait timeout(xt_interval);\n\n\t\t\t// no longer latest; bail\n\t\t\tif(i_iter !== i_latest) return;\n\t\t}\n\t}\n\n\n\tconst A_SPIN = ['◜ ◝', ' ˉ◞', ' ˍ◝', '◟ ◞', '◜ˍ ', '◟ˉ '];\n\tlet s_spinner = '';\n\tlet i_spinning = 0;\n\tlet i_spin = 0;\n\tasync function spinning(b_spin: boolean) {\n\t\tif(b_spin) {\n\t\t\tif(0 === i_spinning) {\n\t\t\t\ti_spinning = -1;\n\n\t\t\t\tconst s_restore = s_text;\n\t\t\t\tawait reveal_text(s_restore+' '+A_SPIN[A_SPIN.length-1]+' ', 60, 0, true);\n\t\t\t\ts_text = s_restore;\n\n\t\t\t\tfunction spin() {\n\t\t\t\t\ts_spinner = ' '+A_SPIN[i_spin++]+' ';\n\t\t\t\t\ti_spin %= A_SPIN.length;\n\t\t\t\t}\n\n\t\t\t\tspin();\n\t\t\t\ti_spinning = k_killables.addInterval(spin, 100);\n\t\t\t}\n\t\t}\n\t\telse if(i_spinning > 0) {\n\t\t\ts_spinner = '';\n\t\t\tk_killables.delInterval(i_spinning);\n\t\t\ti_spin = 0;\n\t\t\ti_spinning = 0;\n\t\t}\n\t}\n\n\tasync function clear(): Promise<void> {\n\t\tawait reveal_text('');\n\t}\n\n\tlet c_msgs = 0;\n\n\tasync function receive(g_msg: ReceivedMessage): Promise<void> {\n\t\t// disabled\n\t\tif(b_disabled) return;\n\n\t\t// dom not ready\n\t\twhile(!dm_history) {\n\t\t\tawait timeout(100);\n\t\t}\n\n\t\t// ref widgets\n\t\tconst h_widgets = g_msg.widgets || {};\n\n\t\t// increment message counter\n\t\tconst i_msg = c_msgs++;\n\t\n\t\t// create formatted lines\n\t\tconst dm_line = dd('div', {\n\t\t\tclass: [\n\t\t\t\t'line-commit',\n\t\t\t\t...(g_msg.classes || []),\n\t\t\t].join(' '),\n\t\t}, [\n\t\t\t`> ${g_msg.from}: `,\n\t\t\t...g_msg.text.flatMap((s_line) => {\n\t\t\t\tconst a_parts = [];\n\n\t\t\t\t// each substitution\n\t\t\t\tlet i_prev = 0;\n\t\t\t\tfor(const {0:s_span, 1:si_widget, index:i_sub} of s_line.matchAll(/\\{([a-z0-9-_]+)\\}/ig)) {\n\t\t\t\t\t// lookup widget ref\n\t\t\t\t\tconst z_widget = h_widgets[si_widget];\n\n\t\t\t\t\t// widget was not defined\n\t\t\t\t\tif(!z_widget) {\n\t\t\t\t\t\tconsole.error(`No such widget '${si_widget}' was passed in with the formatted line`);\n\n\t\t\t\t\t\t// bypass formatted chunk\n\t\t\t\t\t\ta_parts.push(s_line.slice(i_prev, i_sub!+s_span.length));\n\t\t\t\t\t}\n\t\t\t\t\t// widget is defined\n\t\t\t\t\telse {\n\t\t\t\t\t\t// add previous text chunk if it exists\n\t\t\t\t\t\tif(i_prev !== i_sub) a_parts.push(s_line.slice(i_prev, i_sub));\n\n\t\t\t\t\t\t// add plain html widget\n\t\t\t\t\t\tif(z_widget instanceof Element) {\n\t\t\t\t\t\t\ta_parts.push(z_widget);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// add writable widget\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ta_parts.push(dd('span', {\n\t\t\t\t\t\t\t\tclass: `msg-widget-${si_widget}-${i_msg}`,\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// move pointer\n\t\t\t\t\ti_prev = i_sub!+s_span.length;\n\t\t\t\t}\n\n\t\t\t\t// final piece\n\t\t\t\tif(i_prev !== s_line.length) a_parts.push(s_line.slice(i_prev));\n\n\t\t\t\t// break with newline\n\t\t\t\ta_parts.push(dd('div', {\n\t\t\t\t\tclass: 'newline',\n\t\t\t\t}));\n\n\t\t\t\t// return array of elements/text-nodes\n\t\t\t\treturn a_parts;\n\t\t\t}),\n\t\t]);\n\n\t\t// each widget\n\t\tfor(const [si_widget, z_widget] of ode(h_widgets)) {\n\t\t\t// subscribable\n\t\t\tif('function' === typeof (z_widget as any).subscribe) {\n\t\t\t\t// subscribe to widget updates\n\t\t\t\t(z_widget as any).subscribe((s_display: string) => {\n\t\t\t\t\t// widget instances\n\t\t\t\t\tconst a_instances = qsa(dm_line, `.msg-widget-${si_widget}-${i_msg}`);\n\t\t\n\t\t\t\t\t// each instance; replace inner html\n\t\t\t\t\tfor(const dm_inst of a_instances) {\n\t\t\t\t\t\tdm_inst.innerHTML = s_display;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst dm_curtain = dd('div', {\n\t\t\tclass: 'curtain',\n\t\t});\n\n\t\tdm_history_data.append(dm_line);\n\t\tdm_history_data.append(dm_curtain);\n\n\t\tdm_history.scrollTop = dm_history.scrollHeight;\n\n\t\tconst g_rect_parent = dm_history_data.getBoundingClientRect();\n\t\tconst g_rect_line = dm_line.getBoundingClientRect();\n\n\t\tconst x_top = g_rect_line.top - g_rect_parent.top;\n\t\tconst x_height = g_rect_line.height + 5;\n\n\t\tObject.assign(dm_curtain.style, {\n\t\t\ttop: `${x_top}px`,\n\t\t\theight: `${x_height}px`,\n\t\t\tleft: '0px',\n\t\t\twidth: '100%',\n\t\t});\n\n\t\tawait timeout(100);\n\n\t\tfor(let x_gap=0; x_gap<x_height; x_gap+=5) {\n\t\t\tObject.assign(dm_curtain.style, {\n\t\t\t\ttop: `${x_top + x_gap}px`,\n\t\t\t\theight: `${x_height - x_gap}px`,\n\t\t\t});\n\t\t\tawait timeout(100);\n\t\t}\n\n\t\tdm_curtain.remove();\n\t}\n\n\tconst rerformat_lines = (z_text: TextInput) => Array.isArray(z_text)? z_text: z_text.trim().split(/\\n/).map(s => s.trim());\n\n\tasync function arbiter(z_text: TextInput, h_widgets?: Widgets): Promise<void> {\n\t\treturn await receive({\n\t\t\tfrom: 'Arbiter',\n\t\t\tclasses: ['from-arbiter'],\n\t\t\ttext: rerformat_lines(z_text),\n\t\t\twidgets: h_widgets || {},\n\t\t});\n\t}\n\n\tasync function opponent(a_text: string[], h_widgets?: Widgets): Promise<void> {\n\t\treturn await receive({\n\t\t\tfrom: 'Opponent',\n\t\t\tclasses: ['from-opponent'],\n\t\t\ttext: a_text,\n\t\t\twidgets: h_widgets || {},\n\t\t});\n\t}\n\n\tasync function user(z_text: string | string[], h_widgets?: Widgets): Promise<void> {\n\t\treturn await receive({\n\t\t\tfrom: `You${s_account_alias}`,\n\t\t\tclasses: ['from-user'],\n\t\t\ttext: rerformat_lines(z_text),\n\t\t\twidgets: h_widgets || {},\n\t\t});\n\t}\n\n\tasync function commit(): Promise<void> {\n\t\t// dm_history.append(dd('div', {\n\t\t// \tclass: 'line-commit',\n\t\t// }, [\n\t\t// \t`> You${s_account_alias}: ${s_text}`,\n\t\t// ]));\n\n\t\tuser(s_revealing || s_text);\n\n\t\ts_text = '';\n\t}\n\n\tasync function error(z_text: TextInput, b_fatal=false, h_widgets?: Widgets): Promise<void> {\n\t\tawait receive({\n\t\t\tfrom: 'System',\n\t\t\tclasses: ['from-system-error'],\n\t\t\ttext: rerformat_lines(z_text),\n\t\t\twidgets: h_widgets || {},\n\t\t});\n\n\t\tif(b_fatal) {\n\t\t\tb_disabled = true;\n\t\t}\n\t}\n\n\tasync function warn(z_text: TextInput, h_widgets?: Widgets): Promise<void> {\n\t\tawait receive({\n\t\t\tfrom: 'System',\n\t\t\tclasses: ['from-system-warn'],\n\t\t\ttext: rerformat_lines(z_text),\n\t\t\twidgets: h_widgets || {},\n\t\t});\n\t}\n\n\tfunction wallet(g_addr: AddrInfo): void {\n\t\tif(g_addr.addr) {\n\t\t\tb_nav_display = true;\n\t\t\ts_nav_name = g_addr.name;\n\t\t\ts_nav_addr = g_addr.addr;\n\n\t\t\ts_account_alias = s_nav_name? ` (${s_nav_name})`: '';\n\t\t}\n\t\telse {\n\t\t\tb_nav_display = false;\n\t\t}\n\t}\n\n\tlet a_permit_displays: string[] = [];\n\tfunction permit(g_permit: PermitParams, b_restored?: boolean): void {\n\t\tconst p_token = g_permit.allowed_tokens[0];\n\n\t\ta_permit_displays = [b_restored? 'restored': 'signed', p_token.slice(0, 'secret12345'.length), p_token.slice(-5)];\n\t}\n\n\tlet dt_attempt_last = 0;\n\tasync function attempt_type() {\n\t\tdebugger;\n\n\t\tconst dt_now = Date.now();\n\t\tif(dt_now - dt_attempt_last > 30e3) {\n\t\t\tawait reveal_text(`sorry, you don't get to type :P`);\n\t\t\tawait timeout(1600);\n\t\t\tawait clear();\n\n\t\t\tdt_attempt_last = dt_now;\n\t\t}\n\t}\n\n\tlet dm_eval: HTMLElement;\n\tfunction submittable(_fk_submit: VoidFunction | null, s_tag?: string): void {\n\t\tb_submit_display = true;\n\n\t\t// eval dom node is bound\n\t\tif(dm_eval) {\n\t\t\t// get client rect\n\t\t\tconst g_rect = dm_eval.getBoundingClientRect();\n\n\t\t\t// set fixed position\n\t\t\tObject.assign(dm_eval.style, {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: `${g_rect.top}px`,\n\t\t\t\tleft: `${g_rect.left}px`,\n\t\t\t});\n\t\t}\n\t\t\n\t\ts_evaluation = '';\n\t\n\t\tif(s_tag) {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// eval node is bound and positioning is enabled; clear it\n\t\t\t\tif(dm_eval && dm_eval.style.position) {\n\t\t\t\t\tObject.assign(dm_eval.style, {\n\t\t\t\t\t\tposition: '',\n\t\t\t\t\t\ttop: '',\n\t\t\t\t\t\tleft: '',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ts_evaluation = s_tag;\n\t\t\t}, 500);\n\n\t\t\t// setTimeout(() => {\n\t\t\t// \ts_evaluation = s_tag;\n\t\t\t// }, 400);\n\t\t}\n\n\t\tfk_submit = _fk_submit;\n\t}\n\n\tfunction unsubmittable(): void {\n\t\tb_submit_display = false;\n\t\tfk_submit = null;\n\t}\n\n\tonMount(() => {\n\t\tdm_panel.addEventListener('keydown', () => {\n\t\t\tattempt_type();\n\t\t});\n\t});\n\n\n\t/**\n\t * in order to have an animation on the submit button while it is active and then play a transition\n\t * on hover, the animation must first be disabled before chrome will animate the transition property.\n\t * this is done using a combination of classes and event callbacks.\n\t */\n\tlet dm_submit: HTMLElement;\n\n\tasync function mouseenter_submit() {\n\t\tawait timeout(100);\n\t\tdm_submit.classList.add('hover');\n\t}\n\n\tasync function mouseleave_submit() {\n\t\tdm_submit.style.animation = '0';\n\t\tawait timeout(100);\n\t\tdm_submit.classList.remove('hover');\n\t\tawait timeout(1e3);\n\t\tdm_submit.style.animation = '';\n\t}\n</script>\n\n<style lang=\"less\">\n\t@import './common.less';\n\n\t@ease-in-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n\t@keyframes blink {\n\t\tfrom {\n\t\t\topacity: 1.0;\n\t\t}\n\t\tto {\n\t\t\topacity: 0.05;\n\t\t}\n\t}\n\n\t@keyframes pulse-border {\n\t\t0% {\n\t\t\tborder-color: fade(@user-color, 10%);\n\t\t}\n\t\t90% {\n\t\t\tborder-color: fade(@user-color, 20%);\n\t\t}\n\t\t100% {\n\t\t\tborder-color: fade(@user-color, 10%);\n\t\t}\n\t}\n\n\t@keyframes pulse-color {\n\t\t0% {\n\t\t\tcolor: white;\n\t\t}\n\t\t12% {\n\t\t\tcolor: fade(@user-color, 50%);\n\t\t}\n\t\t24% {\n\t\t\tcolor: white;\n\t\t}\n\t\t50% {\n\t\t\tcolor: fade(@user-color, 75%);\n\t\t}\n\t\t75% {\n\t\t\tcolor: white;\n\t\t}\n\t\t100% {\n\t\t\tcolor: fade(@user-color, 80%);\n\t\t}\n\t}\n\n\t@console-border: 8px;\n\t.console-bg() {\n\t\tbackground-color: #141414;\n\t}\n\n\t.blinking {\n\t\tanimation: blink 0.4s infinite 100ms;\n\t}\n\n\t.msg-panel {\n\t\tmargin-top: 8px;\n\t\tmax-width: 800px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\n\t\t// color: rgb(60, 215, 60);\n\t\tcolor: #bfbfff;\n\t\tfont-family: 'Roboto Mono';\n\n\t\tborder: 2px dashed rgba(60, 215, 60, 0.4);\n\t\tborder-radius: 11px;\n\t\tpadding: 4px;\n\n\t\toverflow: hidden;\n\t\tposition: relative;\n\t}\n\n\t.msg-nav {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\n\t\tcolor: white;\n\n\t\tpadding: 6px 14px;\n\t\tbackground-color: rgba(0, 0, 0, 0.86);\n\t\ttext-shadow: 0px 0px 11px rgba(255, 255, 255, 0.9);\n\t\tbox-shadow: 0 0 12px 6px black;\n\n\t\t.msg-nav-group {\n\t\t\tmargin: 0 6px;\n\t\t}\n\n\t\t.msg-nav-name {\n\t\t\tfont-size: 14px;\n\t\t}\n\n\t\t.long-name {\n\t\t\tmax-width: 375px;\n\t\t\toverflow: hidden;\n\t\t\tdisplay: inline-flex;\n\t\t\twhite-space: no-wrap;\n\t\t}\n\n\t\t.msg-nav-addr {\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t.addr {\n\t\t\t// condense it a bit\n\t\t\tletter-spacing: -0.03rem;\n\t\t}\n\n\t\t.prefix {\n\t\t\tletter-spacing: -0.02rem;\n\t\t}\n\n\t\t.msg-nav-permit {\n\t\t\tfont-size: 12px;\n\n\t\t\t.ellipsis {\n\t\t\t\tmargin-left: -4px;\n\t\t\t\tmargin-right: -4px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\ttransform: scaleX(0.45);\n\t\t\t}\n\t\t}\n\n\t\t.msg-nav-icon {\n\t\t\topacity: 0.7;\n\t\t\tfont-size: 16px;\n\n\t\t\t:global(&>svg) {\n\t\t\t\tfilter: drop-shadow(0 0 7px rgba(255, 255, 255, 0.6));\n\t\t\t\tvertical-align: middle !important;\n\t\t\t}\n\n\t\t\t:global(&.lifted>svg) {\n\t\t\t\tvertical-align: -0.125em !important;\n\t\t\t}\n\t\t}\n\t}\n\n\t.msg-history {\n\t\t.console-bg();\n\t\tborder-radius: @console-border @console-border 0 0;\n\t\t\n\t\tposition: relative;\n\t\theight: 270px;\n\t\toverflow-y: scroll;\n\t}\n\t\t\n\t.msg-history-scroll {\n\t\t// position: static;\n\t\t// bottom: 0;\n\t\tfont-size: 12px;\n\t\tpadding: 35px 8px 2px 8px;\n\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tflex-direction: column;\n\n\t\tline-height: 14px;\n\n\t\t:global(.line-commit) {\n\t\t\ttext-indent: -22px;\n\t\t\tpadding-left: 22px;\n\t\t\tmargin-top: 8px;\n\t\t\tline-height: 16px;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t:global(.line-commit>*) {\n\t\t\ttext-indent: initial;\n\t\t\tpadding-left: initial;\n\t\t\tmargin-top: initial;\n\t\t}\n\n\t\t:global(.line-commit svg) {\n\t\t\tfont-size: 13px;\n\t\t\tpadding-right: 2px;\n\t\t\tcolor: white;\n\t\t\tvertical-align: -2px important;\n\t\t}\n\n\t\t:global(.line-commit>[class^=\"msg-widget-\"]) {\n\t\t\tcolor: white;\n\t\t}\n\n\t\t:global(.from-arbiter) {\n\t\t\tcolor: @arbiter-color;\n\t\t}\n\n\t\t:global(.from-opponent) {\n\t\t\tcolor: @opponent-color;\n\t\t}\n\n\t\t:global(.from-user) {\n\t\t\tcolor: @user-color;\n\t\t}\n\n\t\t:global(.from-system-error) {\n\t\t\tcolor: #ff0000;\n\t\t}\n\n\t\t:global(.from-system-warn) {\n\t\t\tcolor: #ffff00;\n\t\t}\n\n\t\t:global(.curtain) {\n\t\t\tposition: absolute;\n\t\t\t.console-bg();\n\t\t}\n\n\t\t:global(.newline) {\n\t\t\theight: 4px;\n\t\t}\n\t}\n\n\t.msg-console {\n\t\t.console-bg();\n\t\tborder-radius: 0 0 @console-border @console-border;\n\t\tposition: relative;\n\n\t\tfont-size: 28px;\n\t\tpadding: 6px;\n\t\tpadding-top: 0;\n\t\tmargin-top: -1px;\n\n\t\t.text {\n\t\t\tfont-size: 22px;\n\t\t\twhite-space: pre-wrap;\n\t\t}\n\t\n\t\t.cursor {\n\t\t\tbackground-color: @user-color;\n\t\t\tmargin-left: -1rem;\n\t\t\tfont-size: 22px;\n\t\t\tdisplay: inline-block;\n\t\t\ttransform: scaleX(0.8);\n\t\t}\n\n\t\t.msg-console-eval {\n\t\t\tfont-size: 12px;\n\t\t\tcolor: white;\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.inline-flex {\n\t\tdisplay: inline-flex;\n\t}\n\n\t.msg-buttons {\n\t}\n\n\t.msg-submit {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tpadding: 6px 42px;\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\tborder-radius: 5px;\n\t\tmargin-right: 7px;\n\t\tmargin-bottom: 7px;\n\t\tcolor: rgba(255, 255, 255, 0.2);\n\t\tborder: 2px solid transparent;\n\t\tcursor: pointer;\n\n\t\ttransition: color 0.5s ease-in-out;\n\n\t\t&.active {\n\t\t\tanimation: pulse-border 4s linear 0s infinite;\n\t\t\ttransition: border-color 1s linear;\n\t\t\tborder-color: fade(@user-color, 15%);\n\t\t\tcolor: white;\n\n\t\t\t&>.msg-submit-icon {\n\t\t\t\tanimation: pulse-color 2s @ease-in-out-quad 0s infinite alternate;\n\t\t\t\tmargin-right: 0.25em;\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\t:global(.msg-submit-text) {\n\t\t\t\t\ttext-decoration: underline;\n\t\t\t\t}\n\t\t\t\tanimation: none;\n\t\t\t}\n\n\t\t\t:global(&.hover) {\n\t\t\t\tborder-color: fade(@user-color, 80%) !important;\n\t\t\t}\n\t\t}\n\t}\n</style>\n\n<div class=\"msg-panel\" bind:this={dm_panel}>\n\t<div class=\"msg-history\" bind:this={dm_history}>\n\t\t<div class=\"msg-history-scroll\" bind:this={dm_history_data} />\n\t</div>\n\t<div class=\"msg-console\">\n\t\t<span class=\"text\">&gt;&nbsp;{s_text}{s_spinner}</span>\n\t\t<span class=\"cursor blinking\" bind:this={dm_cursor}>&nbsp;</span>\n\t\t{#if s_evaluation}\n\t\t\t<span class=\"msg-console-eval\"\n\t\t\t\tbind:this={dm_eval}\n\t\t\t\tin:fade={{duration:1000}}\n\t\t\t\tout:fade={{duration:500}}\n\t\t\t>\n\t\t\t\t{s_evaluation}\n\t\t\t</span>\n\t\t{/if}\n\t</div>\n\t{#if b_nav_display}\n\t\t<div class=\"msg-nav\" transition:slide={{duration:750, easing:quadOut}}>\n\t\t\t<span class=\"msg-nav-group\">\n\t\t\t\t<span class=\"msg-nav-icon lifted\"><Fa icon={faUser}/></span>\n\t\t\t\t<span class=\"msg-nav-name\" class:long-name={s_nav_name.length >= 40}>{s_nav_name}</span>\n\t\t\t</span>\n\t\t\t<span class=\"msg-nav-group\">\n\t\t\t\t<span class=\"msg-nav-icon\"><Fa icon={faWallet}/></span>\n\t\t\t\t<span class=\"msg-nav-addr addr\">{s_nav_addr}</span>\n\t\t\t</span>\n\t\t\t{#if a_permit_displays.length}\n\t\t\t\t<span class=\"msg-nav-group\" transition:fade={{duration:1000}}>\n\t\t\t\t\t<span class=\"msg-nav-icon\"><Fa icon={faTicketAlt}/></span>\n\t\t\t\t\t<span class=\"msg-nav-permit inline-flex\">\n\t\t\t\t\t\t<span class=\"prefix\">{a_permit_displays[0]}:</span>\n\t\t\t\t\t\t<span class=\"addr\">{a_permit_displays[1]}</span>\n\t\t\t\t\t\t<span class=\"ellipsis\">...</span>\n\t\t\t\t\t\t<span class=\"addr\">{a_permit_displays[2]}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t{/if}\n\t\t</div>\n\t{/if}\n\t{#if b_submit_display}\n\t\t<div class=\"msg-submit\"\n\t\t\ton:click={fk_submit || (() => {})}\n\t\t\tclass:active={!!fk_submit}\n\t\t\ttransition:blur={{}}\n\t\t\ton:mouseenter={mouseenter_submit}\n\t\t\ton:mouseleave={mouseleave_submit}\n\t\t\tbind:this={dm_submit}\n\t\t>\n\t\t\t<span class=\"msg-submit-icon\"><Fa icon={faPaperPlane} /></span>\n\t\t\t<span class=\"msg-submit-text\">Submit</span>\n\t\t</div>\n\t{/if}\n</div>\n","<script context=\"module\" lang=\"ts\">\n\texport interface PromptOption {\n\t\tlabel: string;\n\t\talt?: string;\n\t\tdata?: any;\n\t}\n\n\texport interface PromptHelper {\n\t\tok(s_label: string): Promise<void>;\n\t\topts(h_opts: Record<string, PromptOption>): Promise<string>;\n\t\tyes(): Promise<void>;\n\t\tyes_no(): Promise<boolean>;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tmicrotask,\n\t\toderac,\n\t} from '#/util/belt';\n\n\timport {\nexpoOut,\n\t\tquadIn,\n\t\tquadInOut,\n\t\tquadOut,\n\t} from 'svelte/easing';\n\n\timport {\n\t\tfade,\n\t\tblur,\n\t} from 'svelte/transition';\n\n\n\texport const k_prompt = {\n\t\tok,\n\t\topts,\n\t\tyes,\n\t\tyes_no,\n\t} as PromptHelper;\n\n\tinterface Answer extends PromptOption {\n\t\tkey: string;\n\t}\n\n\tconst G_ANS_YES: Answer = {\n\t\tkey: 'yes',\n\t\tlabel: 'Yes',\n\t};\n\n\tconst G_ANS_NO: Answer = {\n\t\tkey: 'no',\n\t\tlabel: 'No',\n\t};\n\n\tconst A_OPTS_YES_NO = [\n\t\tG_ANS_YES,\n\t\tG_ANS_NO,\n\t];\n\n\tconst F_NOOP = () => {};\n\n\tconst F_CALL = (fk: CallableFunction) => {\n\t\tfk();\n\t};\n\n\tlet a_opts: Answer[] = [];\n\n\tlet b_display = false;\n\t\n\t// for triggering css animations\n\tlet b_showing = false;\n\n\tlet fk_answer: (g_ans: Answer) => void = F_NOOP;\n\n\tfunction answer(g_ans: Answer): void {\n\t\tfk_answer(g_ans);\n\n\t\tb_display = false;\n\t}\n\n\tfunction prompt<T>(_a_opts: Answer[], f_handle: (fk: (w_val: T) => void, g_ans: Answer) => void = F_CALL): Promise<T> {\n\t\treturn new Promise((fk_respond) => {\n\t\t\tfk_answer = (g_ans: Answer) => {\n\t\t\t\tf_handle(fk_respond, g_ans);\n\n\t\t\t\tb_display = false;\n\t\t\t};\n\n\t\t\ta_opts = _a_opts;\n\n\t\t\tb_display = true;\n\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tb_showing = true;\n\t\t\t});\n\t\t});\n\t}\n\n\n\tfunction yes_no(): Promise<boolean> {\n\t\treturn prompt<boolean>(A_OPTS_YES_NO, (fk_yes_no, g_ans) => {\n\t\t\tfk_yes_no('yes' === g_ans.key);\n\t\t});\n\t}\n\n\tfunction yes(): Promise<void> {\n\t\treturn prompt<void>([G_ANS_YES]);\n\t}\n\n\tfunction ok(s_label='Ok'): Promise<void> {\t\t\n\t\treturn prompt<void>([{\n\t\t\tkey: 'ok',\n\t\t\tlabel: s_label,\n\t\t}]);\n\t}\n\n\tfunction opts(h_opts: Record<string, PromptOption>): Promise<string> {\n\t\treturn prompt<string>(oderac(h_opts, (si_key, g_opt) => ({\n\t\t\tkey: si_key,\n\t\t\t...g_opt,\n\t\t})), (fk_opt, g_ans) => {\n\t\t\tfk_opt(g_ans.key);\n\t\t});\n\t}\n</script>\n\n<style lang=\"less\">\n\t@user-color: #bfbfff;\n\t@ease-in-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n\t.prompt {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tmargin-top: 1em;\n\t\t\n\t\tbutton {\n\t\t\twidth: 200px;\n\t\t\tpadding: 12px;\n\t\t\tborder-radius: 44px;\n\n\t\t\tmargin-left: 12px;\n\t\t\tmargin-right: 12px;\n\n\t\t\ttext-align: center;\n\t\t\tcursor: pointer;\n\t\t\tborder: 3px solid transparent;\n\t\t\tbackground-color: transparent;\n\n\n\t\t\tcolor: white;\n\t\t\t// border-color: rgb(120,0,190);\n\t\t\tborder-color: rgb(30,30,250);\n\t\t\tbackground: rgb(210, 0, 255);\n\t\t\tbackground: linear-gradient(45deg, rgba(0, 46, 208) 0%, rgba(159, 198, 251, 0.7) 100%);\n\t\t\t// background: linear-gradient(45deg, rgba(0, 46, 208, 1) 0%, rgba(255,255,255,0) 100%)\n\t\t\t// background: linear-gradient(32deg, rgb(210, 0, 255) 0%, rgb(0, 0, 0) 80%);\n\t\t}\n\n\t\t.prompt-btn-local {\n\t\t\tbackground: linear-gradient(45deg, rgba(46, 46, 46) 0%, rgba(189, 198, 251, 0.7) 100%);\n\t\t\tborder-color: silver;\n\t\t}\n\n\t\t.fade-in() {\n\t\t\ttransition: filter 1.4s ease-in-out;\n\t\t\tfilter: blur(6px);\n\t\t}\n\n\t\t@fade-in-btns: ok, keplr, local;\n\n\t\teach(@fade-in-btns, {\n\t\t\t.prompt-btn-@{value} {\n\t\t\t\t.fade-in();\n\t\t\t}\n\n\t\t\t&.showing button.prompt-btn-@{value} {\n\t\t\t\tfilter: blur(0px) !important;\n\t\t\t}\n\t\t});\n\t}\n</style>\n\n<div class=\"prompt\" class:showing={b_showing}>\n\t{#if b_display}\n\t\t{#each a_opts as g_opt}\n\t\t\t<button class=\"prompt-btn-{g_opt.key}\" alt=\"{g_opt.alt || ''}\"\n\t\t\t\ton:click={() => answer(g_opt)}\n\t\t\t\tin:fade={{duration:1.4e3, easing:expoOut}}\n\t\t\t\tout:fade={{duration:1.4e3, easing:quadOut}}\n\t\t\t>\n\t\t\t\t{g_opt.label}\n\t\t\t</button>\n\t\t{/each}\n\t{/if}\n</div>\n","<script context=\"module\" lang=\"ts\">\n\texport interface AssertionHelper {\n\t\tshow(si_basis?: CanonicalBasis): Promise<void>;\n\t\thide(): void;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tgetContext,\n\t\tcreateEventDispatcher,\n\t} from 'svelte';\n\n\timport {\n\t\tfade,\n\t} from 'svelte/transition';\n\n\timport {\n\t\tcircOut, expoOut, quadInOut, sineOut,\n\t} from 'svelte/easing';\n\n\timport {\n\t\tproper,\n\t} from '#/util/belt';\n\n\timport {\n\t\tqsa,\n\t} from '#/util/dom';\n\n\timport type {\n\t\tSemanticQuality,\n\t} from '#/util/logic';\n\n\timport {\n\t\tA_BASES,\n\t\tA_COLORS,\n\t\tA_SHAPES,\n\t\tCanonicalBasis,\n\t\tH_BASES,\n\t\tH_COLORS,\n\t\tH_SHAPES,\n\t} from '#/intl/game';\n\n\timport type {\n\t\tGameContext,\n\t} from './App.svelte';\n\n\texport const k_tx = {\n\t\tshow,\n\t\thide,\n\t} as AssertionHelper;\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst g_game = (getContext('game') as GameContext);\n\n\tlet yw_lang = g_game.language;\n\n\tlet b_visible = false;\n\n\tlet si_basis_force: CanonicalBasis | '' = '';\n\n\tasync function show(si_basis?: CanonicalBasis): Promise<void> {\n\t\tsi_basis_force = si_basis || '';\n\n\t\tif(si_basis) {\n\t\t\tsi_basis_active = si_basis;\n\n\t\t\tdispatch('basis', si_basis_active);\n\t\t}\n\n\t\tb_visible = true;\n\t}\n\n\tfunction hide(): void {\n\t\tb_visible = false;\n\t}\n\n\tlet si_basis_active: CanonicalBasis = A_BASES[0];\n\tlet si_quality: SemanticQuality | null = null;\n\n\tconst data = (d_target: EventTarget, si_key: string) => (d_target as HTMLElement).closest(`[data-${si_key}]`)!.getAttribute(`data-${si_key}`)!;\n\n\tfunction select_basis(d_event: Event): void {\n\t\tconst si_basis_test = data(d_event.target!, 'basis') as CanonicalBasis;\n\n\t\tif(si_basis_force && si_basis_test !== si_basis_force) {\n\t\t\tdispatch('force_reject', [si_basis_test, si_basis_force]);\n\t\t\treturn;\n\t\t}\n\n\t\tsi_basis_active = si_basis_test;\n\n\t\tdispatch('basis', si_basis_active);\n\t}\n\n\tfunction select_quality(d_event: Event): void {\n\t\tsi_quality = data(d_event.target!, 'quality') as SemanticQuality;\n\t\tdispatch('quality', si_quality);\n\t}\n\n\tconst A_DIAMOND_KEYS = [\n\t\t[\n\t\t\t{\n\t\t\t\tkey: 0,\n\t\t\t\tpos: 'top',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 2,\n\t\t\t\tpos: 'rgt',\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tkey: 1,\n\t\t\t\tpos: 'lft',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 3,\n\t\t\t\tpos: 'btm',\n\t\t\t},\n\t\t],\n\t];\n\t\n</script>\n\n<style lang=\"less\">\n\t@user-color: #bfbfff;\n\n\t.tx-basis {\n\t\tmargin-top: 16px;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: calc(50% - 223px);\n\n\t\tcolor: white;\n\n\t\t.tab-wrap {\n\t\t\tborder: 2px solid rgba(255, 255, 255, 0.2);\n\t\t\tborder-radius: 44px;\n\t\t\tbackground-color: #0a0a0a;\n\t\t\t\n\t\t\tdisplay: flex;\n\t\t\toverflow: hidden;\n\t\t\tjustify-content: center;\n\n\t\t\t.tab {\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tpadding: 12px 28px;\n\t\t\t\tborder: 3px solid transparent;\n\t\t\t\tborder-radius: 44px;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 170px;\n\t\t\t\ttext-align: center;\n\n\t\t\t\tcolor: rgba(255, 255, 255, 0.6);\n\n\t\t\t\t&:nth-child(n+2) {\n\t\t\t\t\tmargin-left: -22px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tborder-color: saturate(darken(spin(@user-color, 20), 20%), 100%);\n\t\t\t\t\t// border-color: rgb(120,0,190);\n\t\t\t\t\t// background: linear-gradient(45deg, rgba(0, 46, 208) 0%, rgb(159, 198, 251) 100%);;\n\t\t\t\t\t// background: linear-gradient(45deg, rgba(0, 46, 208, 1) 0%, rgba(255,255,255,0) 100%)\n\t\t\t\t\tbackground: @user-color;\n\t\t\t\t\t// background: rgb(210, 0, 255);\n\t\t\t\t\tbackground: linear-gradient(32deg, darken(saturate(@user-color, 100%), 10%) 0%, rgb(0, 0, 0) 80%);\n\t\t\t\t\t// background: linear-gradient(32deg, rgb(210, 0, 255) 0%, rgb(0, 0, 0) 80%);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.tx-colors {\n\t\tposition: absolute;\n\t\tleft: calc(50% - 380px);\n\t\ttop: 80px;\n\t}\n\n\t.tx-shapes {\n\t\tposition: absolute;\n\t\tleft: calc(50% + 380px - 100px);\n\t\ttop: 80px;\n\t\tfont-size: 23px;\n\t}\n\n\t.diamond {\n\t\t@diamond-radius: 9px;\n\t\t@cell-length: 50px;\n\t\t@cell-scale-x: 1.2;\n\n\t\ttransform: scaleX(@cell-scale-x) rotate(45deg);\n\t\tdisplay: table;\n\n\t\t&>span {\n\t\t\tdisplay: table-row;\n\t\t\twidth: @cell-length * 2;\n\t\t\theight: @cell-length;\n\n\t\t\t&:last-child {\n\t\t\t\tposition: relative;\n\t\t\t\ttop: -1px;\n\t\t\t}\n\n\t\t\t&>button {\n\t\t\t\tdisplay: table-cell;\n\t\t\t\twidth: @cell-length;\n\t\t\t\theight: @cell-length;\n\t\t\t\tborder: 1px solid black;\n\t\t\t\tmargin: 0;\n\t\t\t\tcolor: white;\n\t\t\t\tcursor: pointer;\n\t\t\t\ttransition: color 0.8s ease;\n\n\t\t\t\t.selected {\n\t\t\t\t\tcolor: gold !important;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t}\n\n\t\t\t\t&:active {\n\t\t\t\t\tcolor: rgba(255, 255, 255, 0.6);\n\t\t\t\t}\n\n\t\t\t\t&:active>* {\n\t\t\t\t\ttext-decoration-color: white !important;\n\t\t\t\t}\n\n\t\t\t\t&:hover>* {\n\t\t\t\t\ttext-decoration: overline;\n\t\t\t\t\ttext-decoration-thickness: 2px;\n\t\t\t\t\ttext-decoration-color: rgba(255, 255, 255, 0.6);\n\t\t\t\t}\n\n\t\t\t\t&:last-child {\n\t\t\t\t\tmargin-left: -1px;\n\t\t\t\t}\n\n\t\t\t\t&.diamond-top {\n\t\t\t\t\tborder-top-left-radius: @diamond-radius;\n\t\t\t\t}\n\t\t\t\t&.diamond-lft {\n\t\t\t\t\tborder-bottom-left-radius: @diamond-radius;\n\t\t\t\t}\n\t\t\t\t&.diamond-rgt {\n\t\t\t\t\tborder-top-right-radius: @diamond-radius;\n\t\t\t\t}\n\t\t\t\t&.diamond-btm {\n\t\t\t\t\tborder-bottom-right-radius: @diamond-radius;\n\t\t\t\t}\n\n\t\t\t\t&.color-red {\n\t\t\t\t\tbackground: #a00000;\n\t\t\t\t\tbackground: linear-gradient(0deg, #d00000 0%, #a00000 100%);\n\t\t\t\t}\n\t\t\t\t&.color-green {\n\t\t\t\t\tbackground: #008000;\n\t\t\t\t\tbackground: linear-gradient(0deg, #00b000 0%, #008000 100%);\n\t\t\t\t}\n\t\t\t\t&.color-blue {\n\t\t\t\t\tbackground-color: #0000a0;\n\t\t\t\t\tbackground: linear-gradient(0deg, #0000d0 0%, #0000a0 100%);\n\t\t\t\t}\n\t\t\t\t&.color-black {\n\t\t\t\t\tbackground-color: #000000;\n\t\t\t\t\tbackground: linear-gradient(0deg, #303030 0%, #000000 100%);\n\t\t\t\t}\n\n\t\t\t\t@radial-start-color: #303030;\n\t\t\t\t@radial-end-color: #000000;\n\t\t\t\t@radial-end-pos: 135%;\n\t\t\t\t&.bg-rad-top {\n\t\t\t\t\tbackground: #222;\n\t\t\t\t\tbackground: radial-gradient(circle farthest-corner at right bottom, @radial-start-color 0%, @radial-end-color @radial-end-pos);\n\t\t\t\t}\n\t\t\t\t&.bg-rad-lft {\n\t\t\t\t\tbackground: #222;\n\t\t\t\t\tbackground: radial-gradient(circle farthest-corner at right top, @radial-start-color 0%, @radial-end-color @radial-end-pos);\n\t\t\t\t}\n\t\t\t\t&.bg-rad-rgt {\n\t\t\t\t\tbackground: #222;\n\t\t\t\t\tbackground: radial-gradient(circle farthest-corner at left bottom, @radial-start-color 0%, @radial-end-color @radial-end-pos);\n\t\t\t\t}\n\t\t\t\t&.bg-rad-btm {\n\t\t\t\t\tbackground: #222;\n\t\t\t\t\tbackground: radial-gradient(circle farthest-corner at left top, @radial-start-color 0%, @radial-end-color @radial-end-pos);\n\t\t\t\t}\n\n\t\t\t\t&>span {\n\t\t\t\t\twidth: @cell-length;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t// -9px for shapes\n\t\t\t\t\ttransform: translate(-7px, 0) rotate(-45deg) scaleX((1 / @cell-scale-x));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</style>\n\n{#if b_visible}\n\t<div class=\"tx-basis\" transition:fade={{duration:3600, easing:quadInOut}}>\n\t\t<span class=\"tab-wrap\">\n\t\t\t{#each A_BASES as si_basis}\n\t\t\t\t<span class=\"active tab\" on:click={select_basis} data-basis=\"{si_basis}\" class:active={si_basis === si_basis_active}>\n\t\t\t\t\t{proper(H_BASES[si_basis].describe[$yw_lang](''))}\n\t\t\t\t</span>\n\t\t\t{/each}\n\t\t</span>\n\t</div>\n\n\t<span class=\"diamond tx-colors\" transition:fade={{delay:2400, duration:3200, easing:expoOut}}>\n\t\t{#each A_DIAMOND_KEYS as a_group}\n\t\t\t<span>\n\t\t\t\t{#each a_group as g_loc}\n\t\t\t\t\t{#await A_COLORS[g_loc.key] then si_color}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"diamond-{g_loc.pos} color-{si_color}\"\n\t\t\t\t\t\t\tdata-quality=\"color:{si_color}\"\n\t\t\t\t\t\t\ton:click={select_quality}\n\t\t\t\t\t\t\tclass:selected={`color:${si_color}` === si_quality}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>{proper(H_COLORS[si_color].labels[$yw_lang])}</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t{/await}\n\t\t\t\t{/each}\n\t\t\t</span>\n\t\t{/each}\n\t</span>\n\n\t<span class=\"diamond tx-shapes\" transition:fade={{delay:3200, duration:3200, easing:expoOut}}>\n\t\t{#each A_DIAMOND_KEYS as a_group}\n\t\t\t<span>\n\t\t\t\t{#each a_group as g_loc}\n\t\t\t\t\t{#await A_SHAPES[g_loc.key] then si_shape}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"diamond-{g_loc.pos} bg-rad-{g_loc.pos}\"\n\t\t\t\t\t\t\tdata-quality=\"shape:{si_shape}\"\n\t\t\t\t\t\t\ton:click={select_quality}\n\t\t\t\t\t\t\tclass:selected={`shape:${si_shape}` === si_quality}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>{H_SHAPES[si_shape].symbol}</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t{/await}\n\t\t\t\t{/each}\n\t\t\t</span>\n\t\t{/each}\n\t</span>\n{/if}\n","import {\n\tScene,\n\tPerspectiveCamera,\n\tWebGLRenderer,\n\tVector3,\n\tLineBasicMaterial,\n\tBufferGeometry,\n\tLine,\n\tMesh,\n\tTextureLoader,\n\tMeshBasicMaterial,\n\tMeshLambertMaterial,\n\tCylinderGeometry,\n\tMeshPhongMaterial,\n\tTexture,\n\tMeshToonMaterial,\n\tShape,\n} from 'three';\n\n\nexport function chip(y_texture: Texture, y_bump: Texture): Mesh {\n\tconst y_geom = new CylinderGeometry(39, 39, 3.3, 128, 1);\n\n\tconst a_materials = [\n\t\tnew MeshToonMaterial({\n\t\t\tcolor: '#FF6510',\n\t\t}),\n\t\t// new MeshToonMaterial({\n\t\t// \tmap: y_texture,\n\t\t// \tbumpMap: y_bump,\n\t\t// \tbumpScale: -1,\n\t\t// }),\n\t\tnew MeshPhongMaterial({\n\t\t\tmap: y_texture,\n\t\t\tbumpMap: y_bump,\n\t\t\tbumpScale: (Math.random() * 0.2) + 0.2,\n\t\t}),\n\t\tnew MeshToonMaterial({\n\t\t\tmap: y_texture,\n\t\t}),\n\t];\n\n\t{\n\t\tconst ys_cover = new Shape();\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tvar pct = (i + 1) / 16;\n\t\t\tvar theta = pct * Math.PI * 2.0;\n\t\t\tvar x = 10 * Math.cos(theta);\n\t\t\tvar y = 10 * Math.sin(theta);\n\t\t\tif (i == 0) {\n\t\t\t\tys_cover.moveTo(x, y);\n\t\t\t} else {\n\t\t\t\tys_cover.lineTo(x, y);\n\t\t\t}\n\t\t}\n\n\t\treturn new Mesh(y_geom, a_materials);\n\t}\n}\n","import {\n\tH_COLORS,\n} from '#/intl/game';\n\nimport type {\n\tCanonicalColor,\n\tCanonicalShape,\n} from '#/intl/game';\n\nconst X_PI = Math.PI;\nconst X_2PI = X_PI * 2;\nconst X_SQRT_3 = Math.sqrt(3);\n\nexport function draw_shape(d_ctx: CanvasRenderingContext2D, x_center: number, x_area: number, si_color: CanonicalColor, si_shape: CanonicalShape): void {\n\t// const x_draw_x = Math.round(x_center - xr_draw);\n\t// const xl_draw_w = Math.round(xr_draw * 2);\n\n\tconst yp_shape = new Path2D();\n\n\tswitch(si_shape) {\n\t\tcase 'triangle': {\n\t\t\t// solve for side length given area\n\t\t\tconst xl_side = Math.sqrt((x_area) * X_SQRT_3);\n\n\t\t\t// solve for altitude\n\t\t\tconst xl_alt = X_SQRT_3 * 0.5 * xl_side;\n\n\t\t\t// solve for origin height\n\t\t\tconst xl_od = (xl_side * X_SQRT_3) / 6;\n\n\t\t\tconst xl_offset_y = xl_od / 3;\n\n\t\t\t// center tip\n\t\t\typ_shape.moveTo(x_center, x_center - (xl_alt - xl_od) + xl_offset_y);\n\n\t\t\t// bottom right vertex\n\t\t\typ_shape.lineTo(x_center + xl_side / 2, x_center + xl_od + xl_offset_y);\n\n\t\t\t// bottom left vertex\n\t\t\typ_shape.lineTo(x_center - xl_side / 2, x_center + xl_od + xl_offset_y);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'square': {\n\t\t\t// solve for side length given area\n\t\t\tconst xl_side = Math.sqrt(x_area);\n\n\t\t\t// x/y offset\n\t\t\tconst x_draw_x = x_center - (xl_side * 0.5);\n\n\t\t\t// draw\n\t\t\typ_shape.moveTo(x_draw_x, x_draw_x);\n\t\t\typ_shape.lineTo(x_draw_x + xl_side, x_draw_x);\n\t\t\typ_shape.lineTo(x_draw_x + xl_side, x_draw_x + xl_side);\n\t\t\typ_shape.lineTo(x_draw_x, x_draw_x + xl_side);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'circle': {\n\t\t\tconst xr_circle = Math.sqrt(x_area / X_PI);\n\n\t\t\typ_shape.ellipse(x_center, x_center, xr_circle, xr_circle, 0, 0, X_2PI);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'star': {\n\t\t\tconst x_pi_5 = X_PI / 5;\n\n\t\t\tconst xr_star = Math.sqrt((2 * x_area) / (5 * Math.sin(x_pi_5)));\n\n\t\t\tlet xa_spike = -1.5 * x_pi_5;\n\n\t\t\typ_shape.moveTo(x_center, x_center - xr_star);\n\t\t\tfor(let i_spike=0; i_spike<9; i_spike++) {\n\t\t\t\tconst xr_spike = xr_star * (((i_spike % 2) + 1) / 2);\n\n\t\t\t\typ_shape.lineTo(\n\t\t\t\t\tx_center + (xr_spike * Math.cos(xa_spike)),\n\t\t\t\t\tx_center + (xr_spike * Math.sin(xa_spike))\n\t\t\t\t);\n\n\t\t\t\txa_spike += x_pi_5;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\typ_shape.closePath();\n\n\td_ctx.fillStyle = H_COLORS[si_color].color;\n\td_ctx.fill(yp_shape);\n\n\td_ctx.globalAlpha = 1;\n\td_ctx.strokeStyle = 'black';\n\td_ctx.lineWidth = Math.round(Math.sqrt(x_area) / 50);\n\td_ctx.stroke(yp_shape);\n\n\t// d_ctx.restore()\n}","<script context=\"module\" lang=\"ts\">\n\texport interface SceneHelper {\n\t\tanimate_chip_entry(si_color: CanonicalColor, si_shape: CanonicalShape): Promise<void>;\n\t\tanimate_chip_exit(): Promise<void>;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tonMount,\n\t} from 'svelte';\n\n\timport {\n\t\tchip,\n\t} from '#/util/three';\n\n\timport {\n\t\tAmbientLight,\n\t\tScene,\n\t\tPerspectiveCamera,\n\t\tWebGLRenderer,\n\t\tVector3,\n\t\tLineBasicMaterial,\n\t\tBufferGeometry,\n\t\tMeshBasicMaterial,\n\t\tMesh,\n\t\tBoxGeometry,\n\t\tPointLightHelper,\n\t\tLine,\n\t\tPointLight,\n\t\tTexture,\n\t\tTextureLoader,\n\t\tSpotLight,\n\t\tVectorKeyframeTrack,\n\t\tAnimationClip,\n\t\tAnimationMixer,\n\t\tLoopOnce,\n\t\tClock,\n\t\tEuler,\n\t\tCanvasTexture,\n\t\tMeshPhongMaterial,\n\t} from 'three';\n\n\timport {\n\t\tTween,\n\t\tEasing,\n\t\tupdate as updateTween,\n\t} from '@tweenjs/tween.js';\n\n\timport { timeout } from '#/util/belt';\n\timport { dd, qs } from '#/util/dom';\n\n\timport type {\n\t\tCanonicalColor,\n\t\tCanonicalShape,\n\t} from '#/intl/game';\n\n\timport { draw_shape } from '#/util/draw';\n\n\n\tconst X_PI = Math.PI;\n\tconst X_2PI = X_PI * 2;\n\tconst X_SQRT_3 = Math.sqrt(3);\n\n\texport const k_scene: SceneHelper = {\n\t\tanimate_chip_entry,\n\t\tanimate_chip_exit,\n\t};;\n\n\tlet dm_container: HTMLDivElement;\n\n\tasync function load_textures(h_assets: Record<string, string>): Promise<Record<string, Texture>> {\n\t\tconst h_textures = {} as Record<string, Texture>;\n\n\t\tconst y_loader = new TextureLoader();\n\n\t\tfor(const si_asset in h_assets) {\n\t\t\tconst p_asset = h_assets[si_asset];\n\t\t\th_textures[si_asset] = await new Promise((fk_load) => {\n\t\t\t\ty_loader.load(p_asset, (y_texture: Texture) => {\n\t\t\t\t\tfk_load(y_texture);\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\n\t\treturn h_textures;\n\t}\n\n\n\tfunction canvas_from_tex(y_tex: Texture): [HTMLCanvasElement, CanvasRenderingContext2D, HTMLImageElement] {\n\t\t// ref texture's image\n\t\tconst dm_img = y_tex.image as HTMLImageElement;\n\n\t\t// create canvas element\n\t\tconst dm_canvas = dd('canvas', {\n\t\t\twidth: dm_img.width,\n\t\t\theight: dm_img.height,\n\t\t}) as HTMLCanvasElement;\n\n\t\t// fetch 2d rendering context\n\t\tconst d_ctx = dm_canvas.getContext('2d')!;\n\n\t\t// return tuple\n\t\treturn [dm_canvas, d_ctx, dm_img];\n\t}\n\n\tlet h_textures: Record<string, Texture>;\n\n\n\t// player chip\n\tlet ym_chip: Mesh;\n\n\tlet yt_chip: Texture;\n\tlet yt_bump: Texture;\n\t\n\t// create scene\n\tconst y_scene = new Scene();;\n\n\n\tfunction create_chip(si_color: CanonicalColor, si_shape: CanonicalShape) {\n\t\t// canvas, context and image from texture\n\t\tconst [dm_canvas, d_ctx, dm_img] = canvas_from_tex(h_textures.chip);\n\n\t\tconst xl_width = dm_img.width;\n\t\tconst xl_height = dm_img.height;\n\n\t\t// draw image to canvas\n\t\td_ctx.drawImage(dm_img, 0, 0);\n\n\t\tconst x_center_x = (xl_width / 2)\n\n\t\t// radius of inner \n\t\tconst xr_draw = x_center_x * (2 / 9);\n\n\t\t// desired area\n\t\tconst x_area = Math.pow(x_center_x * (2 / 9), 2) * X_PI;\n\n\t\t// draw shape\n\t\tdraw_shape(d_ctx, x_center_x, x_area, si_color, si_shape);\n\n\t\t// use canvas texture\n\t\tyt_chip = new CanvasTexture(dm_canvas);\n\n\t\t// create chip mesh\n\t\tym_chip = chip(yt_chip, yt_bump);\n\n\t\t// (ym_chip.material as MeshPhongMaterial).map = yt_chip;\n\n\t\t// add chip to scene\n\t\ty_scene.add(ym_chip);\n\t}\n\n\tasync function animate_chip_entry(si_color: CanonicalColor, si_shape: CanonicalShape): Promise<void> {\n\t\tcreate_chip(si_color, si_shape);\n\t\t\n\t\t// put it way out there\n\t\tym_chip.position.y = 800000;\n\n\t\t// show chip\n\t\tym_chip.visible = true;\n\n\t\tconst y_tween_pos = new Tween(new Vector3(-780, -2450, -3000))\n\t\t\t.to(new Vector3(0, 0, 0), 4000)\n\t\t\t.easing(Easing.Cubic.Out)\n\t\t\t.onUpdate((yv_pos) => {\n\t\t\t\t// ym_chip.position.copy(yv_pos);\n\t\t\t\tym_chip.position.setX(yv_pos.x);\n\t\t\t\tym_chip.position.setZ(yv_pos.z);\n\t\t\t});\n\t\t\n\t\ty_tween_pos.start();\n\n\n\t\tconst y_tween_y = new Tween({y: 750})\n\t\t\t.to({y: 0}, 4000)\n\t\t\t.easing(Easing.Back.Out)\n\t\t\t.onUpdate(({y:x_y}) => {\n\t\t\t\tym_chip.position.setY(x_y);\n\t\t\t});\n\t\t\n\t\ty_tween_y.start();\n\n\t\tconst y_tween_rot = new Tween(new Euler(0, 0, 0))\n\t\t\t.to(new Euler(0, X_PI / 2, (X_PI / 2) - (X_PI / 6)), 4000)\n\t\t\t.easing(Easing.Cubic.Out)\n\t\t\t.onUpdate((yv_rot) => {\n\t\t\t\tym_chip.rotation.set(yv_rot.x, yv_rot.y, yv_rot.z);\n\t\t\t});\n\t\t\n\t\ty_tween_rot.start();\n\n\t};\n\n\tasync function animate_chip_exit(): Promise<void> {\n\t\tconst y_tween_pos = new Tween(new Vector3(0, 0, 0))\n\t\t\t.to(new Vector3(-780, -2450, -3000), 4000)\n\t\t\t.easing(Easing.Cubic.Out)\n\t\t\t.onUpdate((yv_pos) => {\n\t\t\t\t// ym_chip.position.copy(yv_pos);\n\t\t\t\tym_chip.position.setX(yv_pos.x);\n\t\t\t\tym_chip.position.setZ(yv_pos.z);\n\t\t\t});\n\t\t\n\t\ty_tween_pos.start();\n\n\n\t\tconst y_tween_y = new Tween({y: 0})\n\t\t\t.to({y: 750}, 4000)\n\t\t\t.easing(Easing.Back.Out)\n\t\t\t.onUpdate(({y:x_y}) => {\n\t\t\t\tym_chip.position.setY(x_y);\n\t\t\t});\n\t\t\n\t\ty_tween_y.start();\n\n\t\tconst y_tween_rot = new Tween(new Euler(0, X_PI / 2, (X_PI / 2) - (X_PI / 6)))\n\t\t\t.to(new Euler(0, 0, 0), 4000)\n\t\t\t.easing(Easing.Cubic.Out)\n\t\t\t.onUpdate((yv_rot) => {\n\t\t\t\tym_chip.rotation.set(yv_rot.x, yv_rot.y, yv_rot.z);\n\t\t\t});\n\t\t\n\t\ty_tween_rot.start();\n\n\t\tawait timeout(4e3);\n\n\t\t// hide chip\n\t\tym_chip.visible = true;\n\t}\n\n\tonMount(async() => {\n\t\th_textures = await load_textures({\n\t\t\tchip: '/asset/chip.png',\n\t\t\tchip_displace: '/asset/chip-displacement.png',\n\t\t\tscuffs: '/asset/scuffs.png',\n\t\t});\n\n\t\t// chip texture\n\t\tyt_chip = h_textures.chip;\n\t\t// {\n\t\t// \t// canvas, context and image from texture\n\t\t// \tconst [dm_canvas, d_ctx, dm_img] = canvas_from_tex(h_textures.chip);\n\n\t\t// \tconst xl_width = dm_img.width;\n\t\t// \tconst xl_height = dm_img.height;\n\n\t\t// \t// draw image to canvas\n\t\t// \td_ctx.drawImage(dm_img, 0, 0);\n\n\t\t// \tconst x_center_x = (xl_width / 2)\n\n\t\t// \t// radius of inner \n\t\t// \tconst xr_draw = x_center_x * (2 / 9);\n\n\t\t// \t// desired area\n\t\t// \tconst x_area = Math.pow(x_center_x * (2 / 9), 2) * X_PI;\n\n\t\t// \t// draw shape\n\t\t// \tdraw_shape(d_ctx, x_center_x, x_area, 'green', 'circle');\n\n\t\t// \t// use canvas texture\n\t\t// \tyt_chip = new CanvasTexture(dm_canvas);\n\t\t// }\n\n\t\t// chip bump\n\t\tyt_bump = h_textures.scuffs;\n\t\t{\n\t\t\t// canvas, context and image from texture\n\t\t\tconst [dm_canvas, d_ctx, dm_img] = canvas_from_tex(h_textures.scuffs);\n\n\t\t\tconst xl_w = dm_canvas.width;\n\t\t\tconst xl_h = dm_canvas.height;\n\n\t\t\tconst xr_rot = Math.random() * X_2PI;\n\n\t\t\t// // clear canvas\n\t\t\t// d_ctx.fillStyle = '#ff0000';\n\t\t\t// d_ctx.fillRect(0, 0, xl_w, xl_h);\n\n\t\t\t// save pre-transformation matrix\n\t\t\td_ctx.save();\n\n\t\t\t// computer canvas center\n\t\t\tconst xl_half_w = xl_w / 2;\n\t\t\tconst xl_half_h = xl_h / 2;\n\n\t\t\t// rotate canvas by some random amount using center as origin\n\t\t\td_ctx.translate(xl_half_w, xl_half_h);\n\t\t\td_ctx.rotate(xr_rot);\n\n\t\t\t// inscribed square\n\t\t\td_ctx.scale(Math.SQRT2, Math.SQRT2);\n\n\t\t\t// draw image\n\t\t\td_ctx.drawImage(dm_img, -xl_half_w, -xl_half_h);\n\n\t\t\t// restore pre-transformation matrix\n\t\t\td_ctx.restore();\n\n\t\t\t// take largest square\n\n\t\t\t\n\t\t\t// d_ctx.fillStyle = 'green';\n\t\t\t// const x_x = a_lft[0];\n\t\t\t// const x_y = a_top[0];\n\t\t\t// d_ctx.fillRect(x_x, x_y, a_rgt[0]-x_x, a_btm[0]-x_y);\n\n\t\t\t// document.body.append(dm_canvas);\n\n\t\t\t// use canvas texture\n\t\t\tyt_bump = new CanvasTexture(dm_canvas);\n\t\t}\n\n\t\tconst y_renderer = new WebGLRenderer({\n\t\t\tantialias: true,\n\t\t});\n\n\t\tconst g_rect = qs(document.body, '.msg-panel').getBoundingClientRect();\n\t\tconst xl_width = window.innerWidth;\n\t\tconst xl_height = Math.max(400, Math.min(800, window.innerHeight - g_rect.bottom));\n\t\ty_renderer.setSize(xl_width, xl_height);\n\n\t\t// wtf is this about?\n\t\tif(!dm_container) return;\n\n\t\tdm_container.appendChild(y_renderer.domElement);\n\n\t\tconst xr_aspect = xl_width / xl_height;\n\n\t\t// camera\n\t\tconst y_camera = new PerspectiveCamera(45, xr_aspect, 1, 5000);\n\t\t{\n\t\t\ty_camera.position.set(0, 0, 140);\n\t\t\ty_camera.lookAt(0, 0, 0);\n\t\t}\n\n\t\t// const ym_chip = chip(yt_chip, yt_bump);\n\t\t// {\n\t\t// \t// hide chip until ready to animate\n\t\t// \tym_chip.visible = false;\n\n\t\t// \t// add chip to scene\n\t\t// \ty_scene.add(ym_chip);\n\t\t// }\n\t\t\n\t\t// ambient light\n\t\t{\n\t\t\tconst yl_ambient = new AmbientLight(0x303030);\n\t\t\ty_scene.add(yl_ambient);\n\t\t}\n\n\t\t// player's chip spot light\n\t\t{\n\t\t\tconst yl_spot = new SpotLight();\n\t\t\tyl_spot.position.set(0, 100, 50);\n\t\t\tyl_spot.decay = 2.5;\n\t\t\t// yl_spot.castShadoow = true;\n\t\t\tyl_spot.angle = Math.PI / 9;\n\t\t\tyl_spot.penumbra = 0.9;\n\n\t\t\ty_scene.add(yl_spot);\n\t\t}\n\n\t\tlet y_clock: Clock;\n\n\t\t// render\n\t\tfunction render() {\n\t\t\ty_renderer.render(y_scene, y_camera);\n\t\t}\n\n\t\ty_renderer.setAnimationLoop(() => {\n\t\t\trender();\n\t\t\tupdateTween();\n\t\t});\n\t});\n</script>\n\n<style lang=\"less\">\n\t\n</style>\n\n<div bind:this={dm_container}>\n</div>\n","<script context=\"module\" lang=\"ts\">\n\texport type Belief = 'trust' | 'distrust' | 'ignore';\n\n\texport interface PremiseHelper {\n\t\tapply(k_deduction: Deduction): Deduction;\n\t}\n</script>\n\n<script type=\"ts\">\n\timport {\n\t\tcreateEventDispatcher,\n\t} from 'svelte';\n\n\timport Fa from 'svelte-fa';\n\n\timport type {\n\t\tIconDefinition,\n\t} from '@fortawesome/fontawesome-common-types';\n\n\timport {\n\t\tfaCheckCircle,\n\t\tfaTimesCircle,\n\t\tfaQuestionCircle,\n\t\tfaDotCircle,\n\t\tfaMinusCircle,\n\t\tfaTooth,\n\t\tfaEgg,\n\t\tfaCheck,\n\t} from '@fortawesome/free-solid-svg-icons';\n\n\timport {\n\t\tode, proper,\n\t} from '#/util/belt';\n\n\timport type {\n\t\tDeduction,\n\t\tSemanticQuality,\n\t} from '#/util/logic';\n\n\tinterface Opt {\n\t\tlabel: string;\n\t\ticon: IconDefinition;\n\t}\n\n\tconst H_OPTS: Record<Belief, Opt> = {\n\t\tignore: {\n\t\t\tlabel: 'Ignore',\n\t\t\ticon: faDotCircle,\n\t\t},\n\t\ttrust: {\n\t\t\tlabel: 'Trust',\n\t\t\ticon: faCheckCircle,\n\t\t},\n\t\tdistrust: {\n\t\t\tlabel: 'Distrust',\n\t\t\ticon: faTimesCircle,\n\t\t},\n\t};\n\n\tlet a_opts = ode(H_OPTS);\n\n\t$: nl_opts = a_opts.length;\n\n\texport let b_mode_nobody: boolean;\n\texport let si_assertion: SemanticQuality;\n\texport let si_known: 'undeniable' | 'true' | 'verified' | '';\n\n\t$: {\n\t\tif(si_known) {\n\t\t\ta_opts = ode({\n\t\t\t\tignore: {\n\t\t\t\t\tlabel: proper(si_known),\n\t\t\t\t\ticon: ({\n\t\t\t\t\t\tundeniable: faEgg,\n\t\t\t\t\t\ttrue: faCheck,\n\t\t\t\t\t\tverified: faCheck,\n\t\t\t\t\t})[si_known],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\texport const k_premise: PremiseHelper = {\n\t\tapply(k_deduction: Deduction): Deduction {\n\t\t\treturn f_apply(k_deduction);\n\t\t},\n\t};\n\n\tlet f_apply: (k_deduction: Deduction) => Deduction = k => k;\n\n\tlet si_belief: Belief = 'ignore';\n\n\tlet dm_truth!: HTMLElement;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction select_opt(si_opt: Belief) {\n\t\t// no change\n\t\tif(si_belief === si_opt) return;\n\n\t\t// update belief\n\t\tsi_belief = si_opt;\n\n\t\t// set apply function\n\t\tif(b_mode_nobody) {\n\t\t\tf_apply = (k_deduction: Deduction): Deduction => {\n\t\t\t\tif('trust' === si_belief) {\n\t\t\t\t\treturn k_deduction.nobody(si_assertion);\n\t\t\t\t}\n\t\t\t\telse if('distrust' === si_belief) {\n\t\t\t\t\treturn k_deduction.opponent(si_assertion, true);\n\t\t\t\t}\n\n\t\t\t\treturn k_deduction;\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tf_apply = (k_deduction: Deduction): Deduction => {\n\t\t\t\tif('trust' === si_belief) {\n\t\t\t\t\treturn k_deduction.opponent(si_assertion, true);\n\t\t\t\t}\n\t\t\t\telse if('distrust' === si_belief) {\n\t\t\t\t\treturn k_deduction.opponent(si_assertion, false);\n\t\t\t\t}\n\n\t\t\t\treturn k_deduction;\n\t\t\t};\n\t\t}\n\n\t\t// emit event\n\t\tdispatch('change', si_opt);\n\t}\n</script>\n\n<style lang=\"less\">\n\t.truth {\n\t\tdisplay: inline-flex;\n\t\tmargin-left: 1.5em;\n\t\twidth: 350px;\n\t\tposition: absolute;\n\t\tmargin-top: -5px;\n\n\t\t&.known {\n\t\t\twidth: 130px;\n\n\t\t\t.truth-opt.selected {\n\t\t\t\t:global(&.undeniable[data-opt=\"ignore\"] svg) {\n\t\t\t\t\tcolor: gold;\n\t\t\t\t}\n\t\t\t\t:global(&.true[data-opt=\"ignore\"] svg) {\n\t\t\t\t\tcolor: limegreen;\n\t\t\t\t}\n\t\t\t\t:global(&.verified[data-opt=\"ignore\"] svg) {\n\t\t\t\t\tcolor: skyblue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.truth-opt {\n\t\t\tflex: 1;\n\t\t\ttext-align: center;\n\n\t\t\tpadding: 4px;\n\t\t\tborder-style: solid;\n\t\t\tborder-width: 1px 0;\n\t\t\tborder-color: fade(white, 20%);\n\t\t\tborder-radius: 0;\n\n\t\t\tcursor: pointer;\n\n\t\t\t:global(svg) {\n\t\t\t\tcolor: fade(white, 50%);\n\t\t\t}\n\n\t\t\t// .truth-opt-icon {\n\t\t\t// \tmargin-right: -1.5em;\n\t\t\t// }\n\n\t\t\t&:hover {\n\t\t\t\tbackground-color: fade(white, 5%);\n\t\t\t}\n\n\t\t\t&.selected {\n\t\t\t\tbackground-color: fade(black, 30%);\n\n\t\t\t\t.truth-opt-text {\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t\t:global(&[data-opt=\"trust\"] svg) {\n\t\t\t\t\tcolor: limegreen;\n\t\t\t\t}\n\t\t\t\t:global(&[data-opt=\"distrust\"] svg) {\n\t\t\t\t\tcolor: orangered;\n\t\t\t\t}\n\t\t\t\t:global(&[data-opt=\"ignore\"] svg) {\n\t\t\t\t\tcolor: lightskyblue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.truth-opt-text {\n\t\t\t\tcolor: fade(white, 70%);\n\t\t\t}\n\t\t}\n\n\t\t.opt-lft {\n\t\t\tborder-left-width: 1px;\n\t\t\tborder-top-left-radius: 5px;\n\t\t\tborder-bottom-left-radius: 5px;\n\t\t}\n\n\t\t.opt-rgt {\n\t\t\tborder-right-width: 1px;\n\t\t\tborder-top-right-radius: 5px;\n\t\t\tborder-bottom-right-radius: 5px;\n\t\t}\n\t}\n</style>\n\n<span class=\"truth\" bind:this={dm_truth} class:known={!!si_known}>\n\t{#each a_opts as [si_opt, g_opt], i_opt}\n\t\t<span\n\t\t\tclass=\"truth-opt {0 === i_opt? 'opt-lft': ''} {nl_opts-1 === i_opt? 'opt-rgt': ''}\"\n\t\t\tdata-opt=\"{si_opt}\"\n\t\t\ton:click={() => select_opt(si_opt)}\n\t\t\tclass:selected={si_opt === si_belief}\n\t\t\tclass:undeniable={'undeniable' === si_known}\n\t\t\tclass:true={'true' === si_known}\n\t\t\tclass:verified={'verified' === si_known}\n\t\t>\n\t\t\t<span class=\"truth-opt-icon\">\n\t\t\t\t<Fa icon={g_opt.icon}/>\n\t\t\t</span>\n\t\t\t<span class=\"truth-opt-text\">\n\t\t\t\t{g_opt.label}\n\t\t\t</span>\n\t\t</span>\n\t{/each}\n</span>\n","<script context=\"module\" lang=\"ts\">\n\texport interface DecisionHelper {\n\t\tshow(): Promise<void>;\n\t\thide(): void;\n\t}\n\n\texport class Opt {\n\t\tprotected _si_color: SemanticColorQuality;\n\t\tprotected _si_shape: SemanticShapeQuality;\n\n\t\tconstructor(si_color: SemanticColorQuality, si_shape: SemanticShapeQuality) {\n\t\t\tthis._si_color = si_color;\n\t\t\tthis._si_shape = si_shape;\n\t\t}\n\n\t\tget color() {\n\t\t\treturn this._si_color;\n\t\t}\n\n\t\tget shape() {\n\t\t\treturn this._si_shape;\n\t\t}\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tgetContext,\n\t\tcreateEventDispatcher,\n\t} from 'svelte';\n\n\timport {\n\t\tfade,\n\t} from 'svelte/transition';\n\n\timport {\n\t\tcircOut, expoOut, quadInOut, sineOut,\n\t} from 'svelte/easing';\n\n\timport {\n\t\tproper,\n\t} from '#/util/belt';\n\n\timport {\n\t\tdd,\n\t} from '#/util/dom';\n\n\timport type {\n\t\tCanonicalGuessOption,\n\t\tDeduction,\n\t\tGuessOption,\n\t\tSemanticColorQuality,\n\t\tSemanticQuality,\n\t\tSemanticShapeQuality,\n\t} from '#/util/logic';\n\n\timport type {\n\t\tCanonicalBasis,\n\t\tCanonicalTarget,\n\t} from '#/intl/game';\n\n\timport type {\n\t\tGameContext,\n\t} from './App.svelte';\n\n\timport { draw_shape } from '#/util/draw';\n\n\texport const k_decision = {\n\t\tshow,\n\t\thide,\n\t} as DecisionHelper;\n\n\texport let k_deduced: Deduction;\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst g_game = (getContext('game') as GameContext);\n\n\t$: a_opts_arb = k_deduced.enumerate('bag');\n\t$: a_opts_opp = k_deduced.enumerate('opponent');\n\n\t// reset selection whenever a deduction is changed\n\t$: g_opt_selected = null, k_deduced;\n\n\tlet yw_lang = g_game.language;\n\n\tlet b_visible = false;\n\n\tasync function show(): Promise<void> {\n\t\tb_visible = true;\n\t}\n\n\tfunction hide(): void {\n\t\tb_visible = false;\n\t}\n\n\tconst g_opt_abstain: GuessOption = {\n\t\ttarget: 'abstain',\n\t\tcolor: null,\n\t\tshape: null,\n\t};\n\n\tlet g_opt_selected: GuessOption | null = null;\n\n\tfunction stage_decision(si_target: CanonicalTarget, g_opt: GuessOption) {\n\t\tif(g_opt_selected !== g_opt) {\n\t\t\tg_opt_selected = g_opt;\n\n\t\t\tdispatch('change', g_opt);\n\t\t}\n\t}\n\n\tfunction stage_abstain() {\n\t\tg_opt_selected = g_opt_abstain;\n\n\t\tdispatch('abstain');\n\t}\n\n\t// create canvas element\n\tconst dm_canvas = dd('canvas', {\n\t\twidth: 100,\n\t\theight: 100,\n\t}) as HTMLCanvasElement;\n\n\t// fetch 2d rendering context\n\tconst d_ctx = dm_canvas.getContext('2d')!;\n\n\tfunction render_icon(k_opt: CanonicalGuessOption): string {\n\t\td_ctx.clearRect(0, 0, 100, 100);\n\n\t\td_ctx.stroke();\n\t\td_ctx.globalAlpha = 0.8;\n\t\tdraw_shape(d_ctx, 50, Math.pow(35, 2), k_opt.color,  k_opt.shape);\n\t\tconst p_data = dm_canvas.toDataURL();\n\n\t\treturn dd('span', {\n\n\t\t}, [\n\t\t\tdd('span', {\n\t\t\t\tclass: 'decision-opt-label',\n\t\t\t}, [\n\t\t\t\t`${proper(k_opt.color)} ${proper(k_opt.shape)}`,\n\t\t\t]),\n\t\t\tdd('img', {\n\t\t\t\tsrc: p_data,\n\t\t\t}),\n\t\t]).innerHTML;\n\t}\n</script>\n\n<style lang=\"less\">\n\t@import './common.less';\n\n\t.fade-edge(@side) {\n\t\tcontent: \" \";\n\t\tposition: absolute;\n\t\tbackground: linear-gradient(to @side, rgba(0,0,0,0), rgba(0,0,0,1) 100%);\n\t\tbackground: linear-gradient(\n\t\t\tto @side,\n\t\t\trgba(0, 0, 0, 0%) 0%,\n\t\t\trgba(0, 0, 0, 0.0182) 8.1%,\n\t\t\trgba(0, 0, 0, 0.0646) 15.5%,\n\t\t\trgba(0, 0, 0, 0.1108) 22.5%,\n\t\t\trgba(0, 0, 0, 0.1687) 29%,\n\t\t\trgba(0, 0, 0, 0.2407) 35.3%,\n\t\t\trgba(0, 0, 0, 0.3245) 41.2%,\n\t\t\trgba(0, 0, 0, 0.4175) 47.1%,\n\t\t\trgba(0, 0, 0, 0.5161) 52.9%,\n\t\t\trgba(0, 0, 0, 0.6163) 58.8%,\n\t\t\trgba(0, 0, 0, 0.714) 64.7%,\n\t\t\trgba(0, 0, 0, 0.8045) 71%,\n\t\t\trgba(0, 0, 0, 0.8831) 77.5%,\n\t\t\trgba(0, 0, 0, 0.945) 84.5%,\n\t\t\trgba(0, 0, 0, 0.9855) 91.9%,\n\t\t\trgba(0, 0, 0, 1) 100%\n\t\t);\n\t\twidth: 70px;\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\ttop: 0;\n\t\tpointer-events: none;\n\t\t@{side}: if(@side = left, 149px, 0px);\n\t}\n\n\t.decision {\n\t\tbackground-color: fade(black, 70%);\n\t\twidth: 800px;\n\t\tposition: fixed;\n\t\tbottom: 50px;\n\t\tleft: calc(50% - 400px);\n\t\tbox-sizing: border-box;\n\t\tpadding: 10px 0 0px 20px;\n\t\tborder: 1px solid fade(white, 20%);\n\n\t\t&:after {\n\t\t\t.fade-edge(right);\n\t\t}\n\n\t\t&:before {\n\t\t\t.fade-edge(left);\n\t\t}\n\n\t\t&.staged {\n\t\t\t.decision-opt:not(.selected) {\n\t\t\t\topacity: 0.5;\n\t\t\t}\n\t\t}\n\n\t\t.decision-opts {\n\t\t\t.decision-abstain {\n\t\t\t\ttext-align: center;\n\t\t\t\tborder-bottom: 1px solid fade(white, 20%);\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 2;\n\t\t\t\tmargin-bottom: 6px;\n\n\t\t\t\t&.selected {\n\t\t\t\t\t:global(button) {\n\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbutton {\n\t\t\t\t\twidth: 200px;\n\t\t\t\t\tleft: calc(50% - 100px);\n\t\t\t\t\tbackground-color: fade(black, 80%);\n\t\t\t\t\tcolor: fade(white, 80%);\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.decision-opts-row {\n\t\t\t\t&>* {\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t}\n\n\t\t\t\twhite-space: nowrap;\n\n\t\t\t\t.decision-opts-row-title {\n\t\t\t\t\twidth: 125px;\n\t\t\t\t\tvertical-align: top;\n\t\t\t\t\tpadding-top: 5px;\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\ttext-align: right;\n\t\t\t\t}\n\n\t\t\t\t.decision-opts-row-view {\n\t\t\t\t\twidth: calc(100% - (125px + 5px));\n\t\t\t\t\toverflow: scroll;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\tpadding-left: 20px;\n\t\t\t\t\tpadding-right: 20px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.decision-opt {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 0 10px;\n\t\t\tcursor: pointer;\n\t\t\ttransition: opacity 0.5s ease-out;\n\n\t\t\t:global(&>*) {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t:global(.decision-opt-label) {\n\t\tpadding: 6px 10px;\n\t\t// background-color: rgba(255, 255, 255, 0.1);\n\t\tbackground-color: fade(black, 70%);\n\t\tmax-width: 100px;\n\t\ttext-align: center;\n\t\tfont-size: 14px;\n\t\tcolor: #eee;\n\t\tborder: 1px solid fade(white, 20%);\n\t\tmargin-bottom: -24px;\n\t\tposition: relative;\n\t\tborder-radius: 0 0 10px 10px;\n\t\tposition: relative;\n\t\tbox-shadow: 0px 0px 6px black;\n\n\t\ttransition: background-color 0.5s ease-in-out, border-color 1s ease-in-out;\n\t}\n\n\t:global(.decision-opt:hover .decision-opt-label,.decision-opt.selected .decision-opt-label) {\n\t\tbackground-color: fade(black, 90%);\n\t\tborder-color: white;\n\t}\n\n\t:global(.decision-opt img) {\n\t\tbackground: #aaa;\n\t\tbackground: linear-gradient(45deg, #aaa 0%, #fff 100%);\n\t\tbackground: linear-gradient(\n\t\t\t225deg,\n\t\t\thsl(0, 0%, 100%) 0%,\n\t\t\thsl(0, 0%, 99.4%) 8.1%,\n\t\t\thsl(0, 0%, 97.7%) 15.8%,\n\t\t\thsl(0, 0%, 95.1%) 23%,\n\t\t\thsl(0, 0%, 91.76%) 29.8%,\n\t\t\thsl(0, 0%, 87.87%) 36.4%,\n\t\t\thsl(0, 0%, 83.6%) 42.7%,\n\t\t\thsl(0, 0%, 79.14%) 48.8%,\n\t\t\thsl(0, 0%, 74.64%) 54.9%,\n\t\t\thsl(0, 0%, 70.27%) 60.9%,\n\t\t\thsl(0, 0%, 66.18%) 67%,\n\t\t\thsl(0, 0%, 62.52%) 73.1%,\n\t\t\thsl(0, 0%, 59.44%) 79.4%,\n\t\t\thsl(0, 0%, 57.07%) 86%,\n\t\t\thsl(0, 0%, 55.54%) 92.8%,\n\t\t\thsl(0, 0%, 55%) 100%\n\t\t);\n\n\t\tborder-radius: 100px;\n\t\tborder: 4px solid mediumpurple;\n\t\ttransition: border-color 2s ease-in-out, box-shadow 1s ease-in-out;\n\t\tbox-shadow: 0 0 0px white;\n\t\tmargin-bottom: 10px;\n\t}\n\n\t:global([data-target=\"bag\"] img) {\n\t\tborder-color: @arbiter-color;\n\t}\n\n\t:global([data-target=\"opponent\"] img) {\n\t\tborder-color: @opponent-color;\n\t}\n\n\n\t:global([data-target=\"bag\"] .decision-opt:hover .decision-opt-label,[data-target=\"bag\"] .decision-opt.selected .decision-opt-label) {\n\t\tborder-color: @arbiter-color;\n\t}\n\n\t:global([data-target=\"opponent\"] .decision-opt:hover .decision-opt-label,[data-target=\"opponent\"] .decision-opt.selected .decision-opt-label) {\n\t\tborder-color: @opponent-color;\n\t}\n\n\t:global(.decision-opt:hover img,.decision-opt.selected img) {\n\t\tborder-color: white;\n\t\tbox-shadow: 0 0 10px white;\n\t}\n</style>\n\n{#if b_visible}\n\t<div class=\"decision\" transition:fade={{duration:3600, easing:quadInOut}} class:staged={!!g_opt_selected}>\n\t\t<!-- <div class=\"debug\" style=\"white-space:pre;\">\n\t\t\t{k_deduced.explain()}\n\t\t</div> -->\n\t\t<div class=\"decision-opts\">\n\t\t\t<div class=\"decision-abstain\" class:selected={g_opt_abstain === g_opt_selected}>\n\t\t\t\t<button on:click={() => stage_abstain()}>\n\t\t\t\t\tAbstain\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"decision-opts-row\" data-target=\"bag\">\n\t\t\t\t<span class=\"decision-opts-row-title\">\n\t\t\t\t\tArbiter's bag:\n\t\t\t\t</span>\n\t\t\t\t<span class=\"decision-opts-row-view\">\n\t\t\t\t\t<span class=\"decision-opts-row-view-data\">\n\t\t\t\t\t\t{#each a_opts_arb as k_opt}\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclass=\"decision-opt\"\n\t\t\t\t\t\t\t\tclass:selected={k_opt === g_opt_selected}\n\t\t\t\t\t\t\t\ton:click={() => stage_decision('bag', k_opt)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{@html render_icon(k_opt)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"decision-opts-row\" data-target=\"opponent\">\n\t\t\t\t<span class=\"decision-opts-row-title\">\n\t\t\t\t\tOpponent's chip:\n\t\t\t\t</span>\n\t\t\t\t<span class=\"decision-opts-row-view\">\n\t\t\t\t\t<span class=\"decision-opts-row-view-data\">\n\t\t\t\t\t\t{#each a_opts_opp as k_opt}\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclass=\"decision-opt\"\n\t\t\t\t\t\t\t\tclass:selected={k_opt === g_opt_selected}\n\t\t\t\t\t\t\t\ton:click={() => stage_decision('opponent', k_opt)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{@html render_icon(k_opt)}\n\t\t\t\t\t\t\t\t<img style=\"display:none\" alt=\"hidden\" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/if}\n","<script context=\"module\" lang=\"ts\">\n\t// export interface PremiseHelper {\n\t// \tapply(k_deduction: Deduction): Deduction;\n\t// }\n</script>\n\n<script type=\"ts\">\n\timport {\n\t\tcreateEventDispatcher,\n\t} from 'svelte';\n\n\timport Fa from 'svelte-fa';\n\n\timport type {\n\t\tIconDefinition,\n\t} from '@fortawesome/fontawesome-common-types';\n\n\timport {\n\t\tfaCheckCircle,\n\t\tfaTimesCircle,\n\t\tfaQuestionCircle,\n\t\tfaDotCircle,\n\t\tfaMinusCircle,\n\t} from '@fortawesome/free-solid-svg-icons';\n\n\timport {\n\t\tode,\n\t} from '#/util/belt';\n\n\timport type {\n\t\tDeduction,\n\t\tSemanticQuality,\n\t} from '#/util/logic';\n\n\tinterface Opt {\n\t\tlabel: string;\n\t\ticon: IconDefinition;\n\t}\n\n\tconst H_OPTS: Record<string, Opt> = {\n\t\tyes: {\n\t\t\tlabel: 'Yes',\n\t\t\ticon: faCheckCircle,\n\t\t},\n\t};\n\n\tconst NL_OPTS = ode(H_OPTS).length;\n\n\tlet f_apply: (k_deduction: Deduction) => Deduction = k => k;\n\n\texport let si_selected: string = 'none';\n\n\tlet dm_action!: HTMLElement;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction select_opt(si_opt: string) {\n\t\t// no change\n\t\tif(si_selected === si_opt) return;\n\n\t\t// update selected\n\t\tsi_selected = si_opt;\n\n\t\t// emit event\n\t\tdispatch('change', si_opt);\n\t}\n</script>\n\n<style lang=\"less\">\n\t.action {\n\t\tdisplay: inline-flex;\n\t\tmargin-left: 1.5em;\n\t\twidth: 350px;\n\t\tposition: absolute;\n\t\tmargin-top: -5px;\n\n\t\t.action-opt {\n\t\t\tflex: 1;\n\t\t\ttext-align: center;\n\n\t\t\tpadding: 4px;\n\t\t\tborder-style: solid;\n\t\t\tborder-width: 1px 0;\n\t\t\tborder-color: fade(white, 20%);\n\t\t\tborder-radius: 0;\n\n\t\t\tcursor: pointer;\n\n\t\t\t:global(svg) {\n\t\t\t\tcolor: fade(white, 50%);\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\tbackground-color: fade(white, 5%);\n\t\t\t}\n\n\t\t\t&.selected {\n\t\t\t\tbackground-color: fade(black, 30%);\n\n\t\t\t\t.action-opt-text {\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t\t:global(&[data-opt=\"yes\"] svg) {\n\t\t\t\t\tcolor: limegreen;\n\t\t\t\t}\n\t\t\t\t:global(&[data-opt=\"no\"] svg) {\n\t\t\t\t\tcolor: orangered;\n\t\t\t\t}\n\t\t\t\t:global(&[data-opt=\"ignore\"] svg) {\n\t\t\t\t\tcolor: lightskyblue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.action-opt-text {\n\t\t\t\tcolor: fade(white, 70%);\n\t\t\t}\n\t\t}\n\n\t\t.opt-lft {\n\t\t\tborder-left-width: 1px;\n\t\t\tborder-top-left-radius: 5px;\n\t\t\tborder-bottom-left-radius: 5px;\n\t\t}\n\n\t\t.opt-rgt {\n\t\t\tborder-right-width: 1px;\n\t\t\tborder-top-right-radius: 5px;\n\t\t\tborder-bottom-right-radius: 5px;\n\t\t}\n\t}\n</style>\n\n<span class=\"action\" style=\"width:{100 * NL_OPTS}px;\" bind:this={dm_action}>\n\t{#each ode(H_OPTS) as [si_opt, g_opt], i_opt}\n\t\t<span class=\"action-opt {0 === i_opt? 'opt-lft': ''} {NL_OPTS-1 === i_opt? 'opt-rgt': 'opt-mid'}\" data-opt=\"{si_opt}\" on:click={() => select_opt(si_opt)} class:selected={si_opt === si_selected}>\n\t\t\t<span class=\"action-opt-icon\">\n\t\t\t\t<Fa icon={g_opt.icon}/>\n\t\t\t</span>\n\t\t\t<span class=\"action-opt-text\">\n\t\t\t\t{g_opt.label}\n\t\t\t</span>\n\t\t</span>\n\t{/each}\n</span>\n","<script context=\"module\" lang=\"ts\">\n\texport interface PickHelper {\n\t\tshow(): Promise<void>;\n\t\thide(): void;\n\t}\n</script>\n\n<script type=\"ts\">\n\timport {\n\t\tcreateEventDispatcher,\n\t} from 'svelte';\n\n\timport {\n\t\tfade,\n\t\tblur\n\t} from 'svelte/transition';\n\t\n\timport Fa from 'svelte-fa';\n\t\n\timport type {\n\t\tIconDefinition,\n\t} from '@fortawesome/fontawesome-common-types';\n\t\n\timport {\n\t\tfaCoins,\n\t\tfaTrophy,\n\t} from '@fortawesome/free-solid-svg-icons';\n\t\n\timport {\n\t\tode,\n\t} from '#/util/belt';\n\t\n\timport type {\n\t\tDeduction,\n\t\tSemanticQuality,\n\t} from '#/util/logic';\n\n\timport type {\n\t\tPickOption,\n\t} from '#/intl/game';\n\t\n\tinterface PickInfo {\n\t\ticon: IconDefinition;\n\t\tlabel: string;\n\t\tdescription: string;\n\t}\n\n\tconst H_PICKS = {\n\t\tjackpot: {\n\t\t\ticon: faCoins,\n\t\t\tlabel: 'Jackpot',\n\t\t\tdescription: 'A pile of SCRT accrued from lost wagers. The exact amount you will receive is a secret.',\n\t\t},\n\t\tnft: {\n\t\t\ticon: faTrophy,\n\t\t\tlabel: 'Power-up NFT',\n\t\t\tdescription: 'A unique NFT that gives the owner some special power when used during gameplay. The type of power-up you will receive is a secret.',\n\t\t},\n\t} as {\n\t\t[K in PickOption]: PickInfo;\n\t};\n\n\n\tlet b_visible = false;\n\n\tlet si_pick_selected: PickOption | null = null;\n\n\texport const k_pick = {\n\t\tshow,\n\t\thide,\n\t};\n\n\tfunction show() {\n\t\tb_visible = true;\n\t}\n\n\tfunction hide() {\n\t\tb_visible = false;\n\t}\n\n\tconst dispatch = createEventDispatcher();\n\n\n\tfunction pick(si_pick: string) {\n\t\tsi_pick_selected = si_pick as PickOption;\n\t\tdispatch('pick', si_pick_selected);\n\t}\n</script>\n\n<style lang=\"less\">\n\t.pick {\n\t\tposition: absolute;\n\t\twidth: 800px;\n\t\tleft: calc(50% - 400px);\n\t\tdisplay: flex;\n\t\ttext-align: center;\n\n\t\t&.picked {\n\t\t\t.pick-opt:not(.selected) {\n\t\t\t\topacity: 0.3;\n\t\t\t}\n\t\t}\n\n\t\t.pick-opt {\n\t\t\tflex: 1;\n\t\t\tpadding: 0.8em;\n\t\t\tmargin: 0.5em;\n\t\t\tborder: 1px solid fade(white, 20%);\n\t\t\tcursor: pointer;\n\t\t\ttransition: opacity 1s ease-in-out;\n\t\t\tborder-radius: 6px;\n\t\t}\n\t\t\n\t\t.pick-label {\n\t\t\tbackground-color: fade(white, 10%);\n\t\t\tborder-radius: 6px;\n\t\t\tpadding: 12px;\n\t\t\tfont-family: 'Roboto Mono';\n\t\t\tfont-size: 20px;\n\t\t}\n\n\t\t.pick-icon {\n\t\t\tfont-size: 200px;\n\t\t\tcolor: goldenrod;\n\t\t}\n\n\t\t.pick-description {\n\t\t\tcolor: fade(white, 80%);\n\t\t\ttext-align: left;\n\t\t\tpadding: 0 1em;\n\t\t\tmargin-bottom: 1em;\n\t\t}\n\t}\n</style>\n\n{#if b_visible}\n\t<div class=\"pick\" transition:blur={{duration:2500}} class:picked={!!si_pick_selected}>\n\t\t{#each ode(H_PICKS) as [si_pick, g_pick]}\n\t\t\t<span class=\"pick-opt\" data-pick={si_pick} on:click={() => pick(si_pick)} class:selected={si_pick_selected === si_pick}>\n\t\t\t\t<div class=\"pick-label\">\n\t\t\t\t\t{g_pick.label}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pick-icon\">\n\t\t\t\t\t<Fa icon={g_pick.icon} />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pick-description\">\n\t\t\t\t\t{g_pick.description}\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t{/each}\n\t</div>\n{/if}","import {\n\tAES,\n\tenc,\n} from 'crypto-js';\n\nimport type {\n\tlib as CryptoJS_lib,\n} from 'crypto-js';\n\nimport type {\n\tJsonValue,\n} from '#/util/types';\nimport type { JsonObject } from 'secretjs/types/types';\n\ntype CipherParams = CryptoJS_lib.CipherParams;\ntype WordArray = CryptoJS_lib.WordArray;\n\nexport class EncryptedLocalStorage {\n\tprotected _si_namespace: string;\n\t#_s_secret: string;\n\n\tstatic includes(r_test: RegExp): boolean {\n\t\tfor(let i_key=localStorage.length; i_key>=0; i_key--) {\n\t\t\tconst si_key = localStorage.key(i_key);\n\t\t\tif(si_key && r_test.test(si_key)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconstructor(si_namespace: string, s_secret: string, g_network?: JsonObject) {\n\t\tconst s_qualifier = window.btoa(JSON.stringify(g_network || {}));\n\t\tthis._si_namespace = `${si_namespace}.${s_qualifier}`;\n\t\tthis.#_s_secret = s_secret;\n\t}\n\n\tset(si_key: string, w_value: JsonValue) {\n\t\tlet sx_store: string;\n\t\ttry {\n\t\t\tsx_store = JSON.stringify(w_value);\n\t\t}\n\t\tcatch(e_stringify) {\n\t\t\tthrow new Error('Unable to stringify value');\n\t\t}\n\n\t\tlet s_encrypted: string;\n\t\ttry {\n\t\t\ts_encrypted = AES.encrypt(sx_store, this.#_s_secret).toString();\n\t\t}\n\t\tcatch(e_encryptt) {\n\t\t\tthrow new Error('Unable to encrypt message');\n\t\t}\n\n\t\treturn localStorage.setItem(`${this._si_namespace}.${si_key}`, s_encrypted);\n\t}\n\n\tget<T extends JsonValue>(si_key: string): T | null {\n\t\tconst s_encrypted = localStorage.getItem(`${this._si_namespace}.${si_key}`);\n\n\t\tif(null === s_encrypted) return s_encrypted;\n\n\t\tlet sx_store: string;\n\t\ttry {\n\t\t\tsx_store = AES.decrypt(s_encrypted, this.#_s_secret).toString(enc.Utf8);\n\t\t}\n\t\tcatch(e_decrypt) {\n\t\t\tthrow new Error('Failed to decrypt value using provided secret');\n\t\t}\n\n\t\tlet w_value: JsonValue;\n\t\ttry {\n\t\t\tw_value = JSON.parse(sx_store);\n\t\t}\n\t\tcatch(e_parse) {\n\t\t\tthrow new Error('Failed to parse decrypted text');\n\t\t}\n\n\t\treturn w_value as T;\n\t}\n\n\tclear() {\n\t\tconst si_prefix = `${this._si_namespace}.`;\n\t\tfor(let i_key=localStorage.length; i_key>=0; i_key--) {\n\t\t\tconst si_key = localStorage.key(i_key);\n\t\t\tif(si_key?.startsWith(si_prefix)) {\n\t\t\t\tlocalStorage.removeItem(si_key);\n\t\t\t}\n\t\t}\n\t}\n\n\tremove(si_key: string) {\n\t\treturn localStorage.removeItem(`${this._si_namespace}.${si_key}`);\n\t}\n}\n","<script context=\"module\" lang=\"ts\">\n\texport interface NftCardHelper {\n\t\thide(): void;\n\t}\n\n\texport interface CardInfo {\n\t\ttoken_id: string;\n\t\text: NftMetadata;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tgetContext,\n\t\tcreateEventDispatcher,\n\t} from 'svelte';\n\n\timport {\n\t\tfade,\n\t} from 'svelte/transition';\n\n\timport Fa from 'svelte-fa';\n\n\timport {\n\t\tcircOut, expoOut, quadInOut, sineOut,\n\t} from 'svelte/easing';\n\n\timport {\n\t\tfaAward,\n\t\tfaCarCrash,\n\t} from '@fortawesome/free-solid-svg-icons';\n\n\timport type {\n\t\tNftInfoResponse, NftMetadata,\n\t} from '#/network/contract';\n\n\timport type { IconDefinition } from '@fortawesome/fontawesome-common-types';\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let si_token: string;\n\texport let g_nft: NftInfoResponse | null;\n\texport let i_card: number;\n\n\t$: g_ext = g_nft?.private_metadata.extension;\n\n\t$: sx_bg = g_ext?.background_color\n\t\t? `#${g_ext?.background_color}`\n\t\t: `\n\t\t\tbackground: rgb(212,212,212);\n\t\t\tbackground: linear-gradient(326deg, rgba(212,212,212,1) 0%, rgba(240,240,240,1) 50%, rgba(175,175,175,1) 100%);\n\t\t`.trim().split(/\\n+/g).map(s => s.trim()).join(' ');\n\n\tlet s_class = 'Loading...';\n\t$: {\n\t\tswitch(g_ext?.description) {\n\t\t\tcase 'simple': {\n\t\t\t\ty_icon = faAward;\n\t\t\t\ts_class = 'Badge';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'insurance': {\n\t\t\t\ty_icon = faCarCrash;\n\t\t\t\ts_class = 'Insurance';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet y_icon: IconDefinition;\n\n\tfunction click_card() {\n\t\tdispatch('click_card', {\n\t\t\ttoken_id: si_token,\n\t\t\text: g_ext,\n\t\t} as CardInfo);\n\t}\n\n</script>\n\n<style lang=\"less\">\n\t.card {\n\t\tmargin-top: 30px;\n\t\tcursor: pointer;\n\n\t\t* {\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t\n\t\t.card-preview {\n\t\t\twidth: 80px;\n\t\t\theight: 80px;\n\t\t\tborder-radius: 1em;\n\n\t\t\tbox-shadow: inset -2px -4px 12px 1px rgba(0,0,0,0.6);\n\t\t\tbox-shadow: 0px 0px 12px white;\n\n\t\t\t.card-overlay {\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 17px;\n\t\t\t\tbackground-color: fade(white, 40%);\n\t\t\t}\n\n\t\t}\n\n\t\t.card-icon {\n\t\t\tfont-size: 30px;\n\t\t\tcolor: #F4B70C;\n\t\t\tfilter: drop-shadow(0px 2px 2px rgba(0,0,0,0.6));\n\t\t}\n\n\t\t.card-title {\n\t\t\twidth: 100%;\n\t\t\tfont-size: 10px;\n\t\t\tmargin-top: 5px;\n\t\t\tcolor: #ccc;\n\t\t}\n\n\t\t.card-class {\n\t\t\tcolor: black;\n\t\t\ttext-align: center;\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\twidth: 80%;\n\t\t}\n\n\t\t.card-title {\n\n\t\t}\n\t}\n</style>\n\n<div class=\"card\" on:click={() => click_card()} transition:fade={{delay:i_card*800}}>\n\t<div class=\"card-preview\" style=\"background:{sx_bg}\">\n\t\t<div class=\"card-overlay\">\n\t\t\t{#if y_icon}\n\t\t\t\t<div class=\"card-icon\">\n\t\t\t\t\t<Fa icon={y_icon} />\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<div class=\"card-class\">\n\t\t\t\t{s_class}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"card-title\">\n\t\t{si_token}\n\t</div>\n</div>\n","<script context=\"module\" lang=\"ts\">\n\texport interface GameContext {\n\t\tlanguage: Writable<SupportedLanguage>;\n\t};\n</script>\n\n<script lang=\"ts\">\n\timport {\n\t\tonMount,\n\t\tsetContext,\n\t} from 'svelte';\n\n\timport {\n\t\tWritable,\n\t\twritable,\n\t} from 'svelte/store';\n\n\timport {\n\t\tblur,\n\t\tfade,\n\t} from 'svelte/transition';\n\n\timport {\n\t\tquadInOut,\n\t\texpoOut,\n\t} from 'svelte/easing';\n\n\timport Fa from 'svelte-fa';\n\n\timport {\n\t\tfaClock,\n\t\tfaVolumeUp,\n\t\tfaVolumeMute,\n\t\tfaFire,\n\t\tfaFaucet,\n\t} from '@fortawesome/free-solid-svg-icons';\n\n\timport fingerprintjs from '@fingerprintjs/fingerprintjs';\n\n\timport {\n\t\tSupportedLanguage,\n\t\tH_LANGUAGES,\n\t\tH_COLORS,\n\t\tH_SHAPES,\n\t\tCanonicalColor,\n\t\tCanonicalShape,\n\t\tA_BASES,\n\t\tCanonicalBasis,\n\t\tH_BASES,\n\t\tCanonicalTarget,\n\t\tPickOption,\n\t} from '#/intl/game';\n\n\timport {\n\t\tH_MESSAGES,\n\t} from '#/intl/messages';\n\n\timport {\n\t\tSI_CHAIN,\n\t\tS_CHAIN_NAME,\n\t\tP_LCD_REST,\n\t\tP_LCD_RPC,\n\t\tWallet,\n\t\tWalletError,\n\t\tuscrt_to_scrt,\n\t} from '#/network/wallet';\n\t\n\timport {\n\t\tKeplrWallet,\n\t\tEnableKeplrError,\n\t\tOfflineSignerError,\n\t} from '#/network/keplr';\n\n\timport {\n\t\tdd,\n\t\tdelete_cookie,\n\t\tqs,\n\t\tread_cookie,\n\t\tread_cookie_json,\n\t\twrite_cookie,\n\t} from '#/util/dom';\n\n\timport {\n\t\tXTL_SECONDS,\n\t\tXTL_MINUTES,\n\t\tXTL_HOURS,\n\t\tXTL_DAYS,\n\t\tmicrotask,\n\t\tode,\n\t\toder,\n\t\tproper,\n\t\ttimeout,\n\t\trelative_time,\n\t\tKillables,\n\t} from '#/util/belt';\n\n\timport {\n\t\tCanonicalGuessOption,\n\t\tDeduction,\n\t\tGuessOption,\n\t\tSemanticAssertion,\n\t\tuse_assertion_in_sentence,\n\t\tuse_quality_in_sentence,\n\t} from '#/util/logic';\n\t\n\timport type {\n\t\tSemanticColorQuality,\n\t\tSemanticQuality,\n\t\tSemanticShapeQuality,\n\t} from '#/util/logic';\n\n\timport MessagePanel, {MessagePanelHelper, Widgets} from './MessagePanel.svelte';\n\timport Prompt, {PromptHelper} from './Prompt.svelte';\n\timport Assertion, {AssertionHelper} from './Assertion.svelte';\n\timport Scene, {SceneHelper} from './Scene.svelte';\n\timport PremiseWidget, {PremiseHelper} from './PremiseWidget.svelte';\n\timport Decision, {DecisionHelper} from './Decision.svelte';\n\timport ActionWidget from './ActionWidget.svelte';\n\timport Pick, {PickHelper} from './Pick.svelte';\n\t\n\n\timport {\n\t\tPermit,\n\t\tPermitParams,\n\t\tSI_PERMIT,\n\t} from '#/network/permits';\n\n\timport {\n\t\tContractError,\n\t\tContractExecInfo,\n\t\tEtaEstimator,\n\t\tGameContract,\n\t\tGameStateResponse,\n\t\tGuessResponse,\n\t\tJoinResponse,\n\t\tPickRewardResponse,\n\t\tP_CONTRACT_GAME_ADDR,\n\t\tSI_CONTRACT_GAME_CODE_HASH,\n\t\tQueryGameStateResponse,\n\t\tSemanticGuess,\n\t\tSubmitResponse,\n\t\tP_CONTRACT_MINTER_ADDR,\n\t\tSI_CONTRACT_MINTER_CODE_HASH,\n\t\tMinterContract,\n\t} from '#/network/contract';\n\n\timport {\n\t\tEncryptedLocalStorage,\n\t} from '#/util/encrypted-local-storage';\n\timport { Tween } from '@tweenjs/tween.js';\n\timport type { JsonObject } from 'secretjs/types/types';\n\timport NftCard, { CardInfo } from './NftCard.svelte';\n\n\n\tfunction F_IDENTITY<T extends unknown>(w: T): T {\n\t\treturn w;\n\t};\n\n\tconst G_NETWORK_SUMMARY = {\n\t\tchain_name: S_CHAIN_NAME,\n\t\tchain_id: SI_CHAIN,\n\t\tgame_addr: P_CONTRACT_GAME_ADDR,\n\t\tgame_hash: SI_CONTRACT_GAME_CODE_HASH,\n\t\trest: P_LCD_REST,\n\t\trpc: P_LCD_RPC,\n\t\tminter_addr: P_CONTRACT_MINTER_ADDR,\n\t\tminter_hash: SI_CONTRACT_MINTER_CODE_HASH,\n\t};\n\n\t/**\n\t * query permit for game\n\t */\n\tlet g_permit: Permit;\n\n\n\t/**\n\t * default client locale\n\t*/\n\tlet s_lang: SupportedLanguage;\n\n\t// try to adjust to client\n\ttry {\n\t\t// use client's locale\n\t\tconst s_lang_client = new Intl.Locale(navigator.language).language;\n\n\t\t// language is supported\n\t\tif(s_lang_client in H_LANGUAGES) {\n\t\t\ts_lang = s_lang_client;\n\t\t}\n\t}\n\tcatch(e_intl) {}\n\n\t// game context\n\t{\n\t\t// language store\n\t\tconst ys_lang = writable('en');\n\n\t\t// subscribe to updates\n\t\tys_lang.subscribe(s_lang_set => s_lang = s_lang_set as SupportedLanguage);\n\n\t\t// set game context\n\t\tsetContext('game', {\n\t\t\tlanguage: ys_lang,\n\t\t} as GameContext);\n\t}\n\n\t/**\n\t * helper instance for communicating with MessagePanel\n\t */\n\tlet k_panel: MessagePanelHelper;\n\n\t/**\n\t * helper instance for communicating with Scene\n\t */\n\tlet k_scene: SceneHelper;\n\n\t/**\n\t * helper instance for communicating with Assertion\n\t */\n\tlet k_tx: AssertionHelper;\n\n\t/**\n\t * helper instance for communicating with Prompt\n\t */\n\tlet k_prompt: PromptHelper;\n\n\t/**\n\t * decision instance for communicating with Decision\n\t*/\n\tlet k_decision: DecisionHelper;\n\n\t/**\n\t * picker instance for communicatin with Pick\n\t */\n\tlet k_pick: PickHelper;\n\n\t/**\n\t * wallet instance\n\t */\n\tlet k_wallet: Wallet;\n\n\n\t/**\n\t * killables\n\t */\n\tconst k_killables = new Killables();\n\n\n\t// Game states\n\n\n\t/**\n\t * player chip and hint\n\t */\n\tlet si_player_color: CanonicalColor;\n\tlet si_player_shape: CanonicalShape;\n\tlet si_player_hint: SemanticQuality;\n\tlet si_submit_first: SemanticAssertion;\n\n\t/**\n\t * deductions\n\t */\n\tlet k_priori = new Deduction();\n\tlet f_assert_1: (k: Deduction) => Deduction = F_IDENTITY;\n\tlet f_assert_2: (k: Deduction) => Deduction = F_IDENTITY;\n\n\t$: k_deduced = f_assert_2(f_assert_1(k_priori.clone()).clone()).clone();\n\n\n\tfunction quiet_fade(y_audio: HTMLAudioElement) {\n\t\tlet x_progress = 0;\n\t\tconst XTL_REFRESH = 50;\n\t\tconst x_increment = XTL_REFRESH / 5e3;\n\t\tconst i_fading = window.setInterval(() => {\n\t\t\tx_progress += x_increment;\n\t\t\tif(x_progress >= 1) {\n\t\t\t\twindow.clearInterval(i_fading);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty_audio.volume = 1 - expoOut(x_progress);\n\t\t\t}\n\t\t}, XTL_REFRESH);\n\t}\n\n\n\t// preload images\n\t// {\n\t\tconst d_img_monster = new Image();\n\t\td_img_monster.src = '/asset/monster.png';\n\n\t\tconst d_img_smile = new Image()\n\t\td_img_smile.src = '/asset/smile.png';\n\t// }\n\n\tasync function reveal_prepared(si_which: string) {\n\t\t// loading messages\n\t\tfor(const g_msg of H_MESSAGES[si_which]) {\n\t\t\tif(g_msg.delay) await timeout(g_msg.delay);\n\t\t\tawait k_panel.reveal_text(g_msg.labels[s_lang], g_msg.interval, g_msg.pause);\n\t\t}\n\t}\n\n\tasync function introduction(): Promise<void> {\n\t\t// take a beat to apreciate the blank, dark page\n\t\tawait timeout(2000);\n\n\t\t// grab user attention\n\t\tawait reveal_prepared('attention');\n\n\t\t// beat\n\t\tawait timeout(1800);\n\n\t\t// clear\n\t\tawait k_panel.reveal_text('');\n\n\t\t// beat\n\t\tawait timeout(1200);\n\t}\n\n\tasync function welcome_back(): Promise<void> {\n\t\t// welcome back message\n\t\tawait k_panel.reveal_text(`good luck! ;)`);\n\n\t\t// beat\n\t\tawait timeout(800);\n\n\t\t// welcome back message\n\t\tawait k_panel.reveal_text('');\n\t}\n\n\tasync function reload(): Promise<never> {\n\t\t// button to reload the page\n\t\tawait k_prompt.ok('Reload');\n\n\t\t// reload page\n\t\twindow.location.reload();\n\n\t\t// wait forever\n\t\treturn new Promise(() => {});\n\t}\n\n\tasync function fatal(s_text: string, h_widgets?: Widgets): Promise<never> {\n\t\t// kill all pending intervals and timeouts\n\t\tk_killables.killAll();\n\n\t\t// clear console message\n\t\tk_panel.reveal_text('');\n\n\t\t// show error\n\t\tawait err(s_text, true, h_widgets);\n\n\t\t// show button to reload\n\t\treturn reload();\n\t}\n\n\tasync function surprise(s_surprise: string) {\n\t\t// play transition\n\t\tlet s_suspense = '';\n\t\tif(!s_surprise) {\n\t\t\ts_suspense = '                                 ';\n\t\t\tawait k_panel.reveal_text(s_suspense);\n\t\t}\n\n\t\tH_AUDIO.epic_transition.play();\n\t\t\n\t\tif(!s_suspense) {\n\t\t\tvoid k_panel.reveal_text(s_suspense+'  ', 250);\n\t\t}\n\n\t\tdm_surprise.classList.add('triggered')\n\t\tawait timeout(160);\n\t\tdm_surprise.style.opacity = '0.0';\n\n\t\t// disable surprise display\n\t\tsetTimeout(() => {\n\t\t\tdm_surprise.style.display = 'none';\n\t\t}, 6e3);\n\n\t\tif(!s_surprise) {\n\t\t\twrite_cookie({\n\t\t\t\tsurprise: 'bypass',\n\t\t\t}, 12*XTL_DAYS);\n\t\t}\n\n\t\t// allow surprise to settle\n\t\tawait timeout(2000);\n\t}\n\n\tasync function connect_wallet(n_retries=0): Promise<void> {\n\t\t// \n\t\tawait k_panel.warn(`\n\t\t\tThis game stores encrypted query permit data in local storage.\n\t\t\t\n\t\t\tIn order to protect this data, you must provide a passphrase each time the page is loaded.\n\n\t\t\t${EncryptedLocalStorage.includes(/\\.permits$/)\n\t\t\t\t? `Enter the same passphrase to restore a previous permit, or enter a different one to sign a new permit.`\n\t\t\t\t: ''}\n\t\t`);\n\n\t\tasync function enter_passphrase(c_retries=0): Promise<string> {\n\t\t\t// whether it was clicked (before instruction)\n\t\t\tlet b_clicked = false;\n\n\t\t\t// first attempt\n\t\t\tif(!c_retries) {\n\t\t\t\t// wait for button to fade in a little\n\t\t\t\tk_killables.addTimeout(() => {\n\t\t\t\t\tif(!b_clicked) {\n\t\t\t\t\t\t// show text\n\t\t\t\t\t\tvoid k_panel.reveal_text('↓↓ click below to enter passphrase ↓↓');  // ▼\n\t\t\t\t\t}\n\t\t\t\t}, 6500);\n\t\t\t}\n\t\t\t\n\t\t\t// show button\n\t\t\tawait k_prompt.ok('Provide passphrase');\n\n\t\t\t// clicked\n\t\t\tb_clicked = true;\n\n\t\t\t// prompt for passphrase and save to local field\n\t\t\tconst atu8_seed = new Uint8Array(32); // 33 - 126\n\t\t\tcrypto.getRandomValues(atu8_seed);\n\t\t\tconst s_prompt_default = [...atu8_seed].map(x => String.fromCharCode((x % 93)+33)).join('');\n\t\t\tconst s_passphrase = window.prompt('Enter a passphrase to encrypt/decrypt query permits', s_prompt_default);\n\n\t\t\t// blank\n\t\t\tif(!s_passphrase) {\n\t\t\t\tconst a_retries = [\n\t\t\t\t\t`null key encryption, eh? try again you silly goose`,\n\t\t\t\t\t`i can do this all day, can you?`,\n\t\t\t\t\t`there are only so many responses i have...`,\n\t\t\t\t\t`...and you're starting to piss me off`,\n\t\t\t\t\t`i'm serious dood -- don't make me`,\n\t\t\t\t];\n\n\t\t\t\tif(c_retries < a_retries.length) {\n\t\t\t\t\tk_panel.reveal_text(a_retries[c_retries], 40);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.location.href = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ';\n\t\t\t\t}\n\n\t\t\t\t// retry\n\t\t\t\treturn enter_passphrase(c_retries+1);\n\t\t\t}\n\t\t\t// too weak\n\t\t\telse if(s_passphrase.length < 5) {\n\t\t\t\tk_panel.reveal_text('passphrase must be at least 5 characters');\n\n\t\t\t\t// retry\n\t\t\t\treturn enter_passphrase(c_retries+1);\n\t\t\t}\n\t\t\t// valid\n\t\t\telse {\n\t\t\t\treturn s_passphrase;\n\t\t\t}\n\t\t}\n\n\t\t// use fingerprint\n\t\tconst y_agent = await fingerprintjs.load();\n\t\tconst g_result = y_agent.get();\n\t\tconst p_fingerprint = (await g_result).visitorId;\n\n\t\t// get passphrase\n\t\tconst s_passphrase = await enter_passphrase();\n\n\t\t// clear text\n\t\tk_panel.reveal_text('');\n\n\t\t// wallet not yet connected\n\t\tif(!k_wallet) {\n\t\t\t// prepare for wallet connection\n\t\t\tawait warn(`\n\t\t\t\tThis is a multiplayer, online game that uses smart contracts on the Secret Network to ensure fairness for all players.\n\n\t\t\t\tInteracting with the game requires submitting transactions to the blockchain via a web wallet such as Keplr (or a local wallet for testnet only).\n\t\t\t`);\n\n\t\t\t// pause for effect\n\t\t\tawait timeout(600);\n\n\t\t\t// wait for response\n\t\t\tconst si_opt = await k_prompt.opts({\n\t\t\t\tkeplr: KeplrWallet.isAvailable()? {\n\t\t\t\t\tlabel: 'Connect Keplr',\n\t\t\t\t\talt: `Connect a wallet using the Keplr extension for Chrome`,\n\t\t\t\t}: {\n\t\t\t\t\tlabel: 'Install Keplr',\n\t\t\t\t\talt: `Keplr was not detected. Please install it first in order to use this option`,\n\t\t\t\t},\n\t\t\t\t// local: {\n\t\t\t\t// \tlabel: 'Use Local Storage',\n\t\t\t\t// \talt: `Creates a wallet in your browser's local storage for a better user experience on testnet`,\n\t\t\t\t// },\n\t\t\t});\n\n\t\t\t// connect to wallet\n\t\t\tswitch(si_opt) {\n\t\t\t\t// use keplr\n\t\t\t\tcase 'keplr': {\n\t\t\t\t\t// try to instantiate\n\t\t\t\t\ttry {\n\t\t\t\t\t\tk_wallet = KeplrWallet.fromWindow();\n\t\t\t\t\t}\n\t\t\t\t\t// could keplr is not installed\n\t\t\t\t\tcatch(e_keplr) {\n\t\t\t\t\t\t// open keplr in new tab\n\t\t\t\t\t\twindow.open('https://www.keplr.app/', '_blank');\n\n\t\t\t\t\t\t// show button to reload\n\t\t\t\t\t\treturn await reload();\n\t\t\t\t\t}\n\n\t\t\t\t\t// save\n\t\t\t\t\twrite_cookie({\n\t\t\t\t\t\twallet: 'keplr',\n\t\t\t\t\t}, 30*XTL_DAYS);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// local storage\n\t\t\t\tcase 'local': {\n\t\t\t\t\treturn fatal(`Local storage wallet not yet implemented`);\n\n\t\t\t\t\t// // save\n\t\t\t\t\t// write_cookie({\n\t\t\t\t\t// \twallet: 'local',\n\t\t\t\t\t// }, 30*XTL_DAYS);\n\t\t\t\t}\n\n\t\t\t\t// other\n\t\t\t\tdefault: {\n\t\t\t\t\treturn fatal(`Unhandled response option: '${si_opt}'`);\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\t\t// if the chain was added in response to the suggestion\n\t\tlet b_added = false;\n\n\t\t// keep track of how long it takes to enable\n\t\tconst xt_suggest = Date.now();\n\n\t\t// enable chain\n\t\ttry {\n\t\t\tb_added = await k_wallet.enable({\n\t\t\t\tchainId: SI_CHAIN,\n\t\t\t\tchainName: S_CHAIN_NAME,\n\t\t\t\trest: P_LCD_REST,\n\t\t\t\trpc: P_LCD_RPC,\n\t\t\t}, () => {\n\t\t\t\t// disable wallett\n\t\t\t\tk_wallet.disable();\n\n\t\t\t\t// terminate session\n\t\t\t\treturn fatal(`Account was changed in wallet. Session terminated.`);\n\t\t\t});\n\t\t}\n\t\t// something went wrong\n\t\tcatch(e_enable: unknown) {\n\t\t\tdebugger;\n\t\t\t// user did not enable\n\t\t\tif(e_enable instanceof EnableKeplrError) {\n\t\t\t\tif(n_retries >= 3) {\n\t\t\t\t\treturn fatal(`Keplr connection request rejected too many times`);\n\t\t\t\t}\n\n\t\t\t\t// pause\n\t\t\t\tawait timeout(2000);\n\n\t\t\t\t// retry\n\t\t\t\treturn await connect_wallet(n_retries+1);\n\t\t\t}\n\t\t\t// offline signer unavailable\n\t\t\telse if(e_enable instanceof OfflineSignerError) {\n\t\t\t\treturn fatal(e_enable.stack!);\n\t\t\t}\n\t\t\t// other\n\t\t\telse if(e_enable instanceof Error) {\n\t\t\t\treturn fatal(e_enable.stack!);\n\t\t\t}\n\t\t\t// unknown\n\t\t\telse {\n\t\t\t\treturn fatal(`Fatal unknown error`);\n\t\t\t}\n\t\t}\n\n\t\t// user rejected chain\n\t\tif(!b_added) {\n\t\t\treturn fatal(`Chain suggestion was denied. Unable to proceed.`);\n\t\t}\n\n\t\t// get key store\n\t\tconst g_key = k_wallet.key;\n\n\t\t// ref signer address\n\t\tconst p_signer = g_key.bech32Address;\n\n\t\t// set wallet info\n\t\tk_panel.wallet({\n\t\t\tname: g_key.name,\n\t\t\taddr: p_signer,\n\t\t\tledger: g_key.isNanoLedger,\n\t\t});\n\n\t\t// create encrypted local storage instance\n\t\tconst k_ls = new EncryptedLocalStorage(p_signer, [p_fingerprint, s_passphrase, 'salt'].join('|'), G_NETWORK_SUMMARY);\n\n\t\t// try to fetch any existing permits\n\t\tlet h_permits: Record<string, Permit> | null = null;\n\t\ttry {\n\t\t\th_permits = k_ls.get<Record<string, Permit>>('permits');\n\t\t}\n\t\tcatch(e_decrypt: unknown) {\n\t\t\tawait warn('Change in passphrase detected. Clearing old query perrmits.');\n\t\t\tk_ls.clear();\n\t\t}\n\n\t\tawait timeout(1000);\n\n\t\tlet b_restored_permit = false;\n\n\t\t// permit exists for this contract\n\t\tif(h_permits && h_permits[P_CONTRACT_GAME_ADDR]) {\n\t\t\tg_permit = h_permits[P_CONTRACT_GAME_ADDR];\n\n\t\t\t// restored permit\n\t\t\tb_restored_permit = true;\n\t\t}\n\t\t// permit does not exist for this contract\n\t\telse {\n\t\t\t// \n\t\t\tawait warn(`\n\t\t\t\tQuery permits allow you to read encrypted data from the blockchain without needing to write anything extra to the chain.\n\n\t\t\t\tSigning a query permit happens offline and does not require any gas.\n\t\t\t`);\n\n\t\t\tawait timeout(1800);\n\n\t\t\t// await k_panel.reveal_text('ready to sign?');\n\n\t\t\tawait k_prompt.ok('Sign permit');\n\t\t\t\n\t\t\ttry {\n\t\t\t\t// build permit\n\t\t\t\tg_permit = {\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tchain_id: k_wallet.chain,\n\t\t\t\t\t\tallowed_tokens: [\n\t\t\t\t\t\t\tP_CONTRACT_GAME_ADDR,\n\t\t\t\t\t\t\tP_CONTRACT_MINTER_ADDR,\n\t\t\t\t\t\t],\n\t\t\t\t\t\tpermit_name: SI_PERMIT,\n\t\t\t\t\t\tpermissions: ['owner'],\n\t\t\t\t\t} as PermitParams,\n\t\t\t\t\tsignature: await k_wallet.signQueryPermit(),\n\t\t\t\t};\n\n\t\t\t\t// append\n\t\t\t\tk_ls.set('permits', {\n\t\t\t\t\t...(h_permits || {}),\n\t\t\t\t\t[P_CONTRACT_GAME_ADDR]: g_permit,\n\t\t\t\t\t[P_CONTRACT_MINTER_ADDR]: g_permit,\n\t\t\t\t});\n\t\t\t}\n\t\t\tcatch(e_sign_set: any) {\n\t\t\t\treturn fatal(e_sign_set.stack);\n\t\t\t}\n\t\t}\n\n\t\tk_panel.permit(g_permit.params, b_restored_permit);\n\n\t\tawait timeout(1200);\n\n\t\tawait k_panel.reveal_text(``);\n\n\t\t// wait for animation to complete\n\t\tawait timeout(1100);\n\t}\n\n\tasync function wait_for_other_player(b_resume=false): Promise<GameStateResponse> {\n\t\tlet yw_checked = writable('');\n\n\t\tif(b_resume) {\n\t\t\twarn(`Still waiting for another player... {last_check}`, {\n\t\t\t\tlast_check: yw_checked,\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// TODO: notifications and bell sound\n\t\t\twarn(`Created a new game. Now waiting for another player... {last_check}`, {\n\t\t\t\tlast_check: yw_checked,\n\t\t\t});\n\t\t}\n\n\t\tlet b_notifications_enabled = window.Notification && 'granted' === Notification.permission;\n\t\tlet b_notifications_requested = false;\n\t\tlet b_notification_notice = false;\n\n\t\tfunction enable_notifications() {\n\t\t\tif(b_notifications_enabled) {\n\t\t\t\twarn(`You will receive a notification once another player has joined.`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst dm_approve = dd('span');\n\t\t\t\tconst yc_action = new ActionWidget({\n\t\t\t\t\ttarget: dm_approve,\n\t\t\t\t});\n\n\t\t\t\tyc_action.$on('change', async() => {\n\t\t\t\t\tconst xt_prompted = Date.now();\n\n\t\t\t\t\tconst s_status = await Notification.requestPermission();\n\n\t\t\t\t\tif('denied' === s_status) {\n\t\t\t\t\t\tyc_action.$set({\n\t\t\t\t\t\t\tsi_selected: 'none',\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif(Date.now() - xt_prompted < 0.5*XTL_SECONDS) {\n\t\t\t\t\t\t\twarn(`User previously denied request for notifications. Need to reset in browser settings.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\twarn(`User denied request for notification permission.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twarn(`Confirmed. Notification will be sent when another player joins.`);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// prompt for notifications\n\t\t\t\twarn(`Would you like to receive a notification once another player has joined? {approve}`, {\n\t\t\t\t\tapprove: dm_approve,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet xt_checked = Date.now();\n\t\tlet i_checking = k_killables.addInterval(() => {\n\t\t\tif(xt_checked) {\n\t\t\t\tyw_checked.set(`Last checked ${relative_time(xt_checked)}`);\n\t\t\t}\n\n\t\t\tif(!b_notification_notice) {\n\t\t\t\tb_notification_notice = true;\n\t\t\t\tenable_notifications();\n\t\t\t}\n\t\t}, 1000);\n\n\t\t// start querying for game state\n\t\tlet g_game_query: GameStateResponse;\n\t\tlet xt_prev: number;\n\t\tfor(;;) {\n\t\t\txt_prev = Date.now();\n\t\t\ttry {\n\t\t\t\tg_game_query = (await k_game.queryGameState());\n\t\t\t}\n\t\t\tcatch(e_query: unknown) {\n\t\t\t\tif(e_query instanceof ContractError) {\n\t\t\t\t\treturn fatal(e_query.message);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn fatal(e_query+'');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(0 !== g_game_query.round) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\txt_checked = Date.now();\n\t\t\t\n\t\t\t// wait at least 2 seconds after last response\n\t\t\tawait timeout(2e3);\n\n\t\t\t// query at most every 5 seconds\n\t\t\tconst xtl_diff = Date.now() - xt_prev;\n\t\t\tif(xtl_diff < 5*XTL_SECONDS) {\n\t\t\t\tawait timeout(xtl_diff);\n\t\t\t}\n\t\t}\n\n\t\t// stop checking\n\t\tk_killables.delInterval(i_checking);\n\n\t\t// clear last checked widget text\n\t\tyw_checked.set('');\n\n\t\t// start alarm\n\t\t{\n\t\t\tfunction clear() {\n\t\t\t\twindow.removeEventListener('focus', quieten);\n\t\t\t}\n\n\t\t\tfunction quieten() {\n\t\t\t\tclear();\n\t\t\t\tquiet_fade(y_alarm);\n\t\t\t};\n\t\t\t\n\t\t\tconst y_alarm = H_AUDIO.retro_game_alarm;\n\t\t\ty_alarm.play();\n\n\t\t\t// document has focus already\n\t\t\tif(document.hasFocus()) {\n\t\t\t\t// let alarm play for a few seconds before fading uot\n\t\t\t\tawait timeout(1800);\n\n\t\t\t\tquiet_fade(y_alarm);\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener('focus', quieten);\n\t\t\t}\n\t\t}\n\n\t\treturn g_game_query;\n\t}\n\n\t// audio\n\tconst H_AUDIO_SRC = {\n\t\tepic_transition: 'epic-transition.wav',\n\t\tcoin: 'coin.wav',\n\t\tdeath: 'death.wav',\n\t\tmenu_1a: 'menu-1a.wav',\n\t\tmenu_1b: 'menu-1b.wav',\n\t\trise: 'rise.wav',\n\t\tcoin_win: 'coin-win.wav',\n\t\tretro_game_alarm: 'retro-game-alarm.wav',\n\t\tretro_game_notif: 'retro-game-notif.wav',\n\t\ttrumpet_fanfare: 'trumpet-fanfare.wav',\n\t} as const;\n\n\tconst H_AUDIO = Object.fromEntries(ode(H_AUDIO_SRC).map(([si_key, sr_asset]) => [si_key, new Audio(`/asset/audio/${sr_asset}`)])) as Record<keyof typeof H_AUDIO_SRC, HTMLAudioElement>;\n\n\t// muted\n\tlet b_muted = false;\n\n\t// read cookie\n\tlet h_cookie = read_cookie();\n\n\t// game and minter\n\tlet k_minter: MinterContract;\n\tlet k_game: GameContract;\n\n\n\t$: {\n\t\tif(h_cookie) {\n\t\t\t// set audio\n\t\t\tObject.values(H_AUDIO).forEach(d => d.muted = b_muted);\n\n\t\t\t// save setting\n\t\t\twrite_cookie({\n\t\t\t\tmuted: b_muted? '1': '0',\n\t\t\t}, 30*XTL_DAYS);\n\t\t}\n\t}\n\n\tasync function force_endgame() {\n\t\tawait arbiter(`\n\t\t\tYour opponent is taking too long. Since you have already fulfilled your duty, I will allow you to end the game and get a refund.\n\n\t\t\tWould you like to end the game?\n\t\t`);\n\n\t\tawait k_panel.reveal_text('yes, give me my money back');\n\n\t\tk_panel.submittable(async() => {\n\t\t\tk_panel.submittable(null);\n\t\t\t\n\t\t\tconst g_game = await safe_exec({\n\t\t\t\tasync exec(): Promise<GameStateResponse> {\n\t\t\t\t\treturn (await k_game.forceEndgame()).data.force_endgame!.game_state!\n\t\t\t\t},\n\t\t\t\tcheck(g: GameStateResponse): boolean {\n\t\t\t\t\treturn null !== g.finished;\n\t\t\t\t},\n\t\t\t\tquery_fail() {\n\t\t\t\t\tvoid force_endgame();\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t\tpersist_reveal: true,\n\t\t\t});\n\n\t\t\tif(!g_game) return;\n\n\t\t\tawait k_panel.commit();\n\n\t\t\tk_panel.unsubmittable();\n\n\t\t\tawait arbiter(`I have refunded you ${uscrt_to_scrt(BigInt(g_game.wager!))}.`);\n\n\t\t\tawait H_AUDIO.coin.play();\n\n\t\t\treturn game_over();\n\t\t});\n\t}\n\n\tinterface CountdownConfig {\n\t\teta: EtaEstimator;\n\t\tkill_text?: string;\n\t\tterminate?: VoidFunction;\n\t}\n\n\tinterface CountdownInfo {\n\t\tinterval: number;\n\t\tclock: HTMLElement,\n\t\tstore: Writable<string>,\n\t}\n\n\tclass Countdown implements CountdownInfo {\n\t\tprotected _yw_time: Writable<string>;\n\t\tprotected _dm_clock: HTMLElement;\n\t\tprotected _i_interval: number;\n\t\tprotected _s_kill: string;\n\t\tprotected _k_eta: EtaEstimator;\n\t\tprotected _s_expired = 'run out of time';\n\n\t\tconstructor(gc_countdown: CountdownConfig) {\n\t\t\tconst f_terminate = gc_countdown.terminate;\n\n\t\t\tthis._s_kill = gc_countdown.kill_text || '';\n\n\t\t\tthis._k_eta = gc_countdown.eta;\n\n\t\t\tthis._yw_time = writable('(estimating...)');\n\n\t\t\t// kickoff estimation\n\t\t\tvoid this._k_eta.eta;\n\n\t\t\tthis._i_interval = k_killables.addInterval(() => {\n\t\t\t\tconst k_eta = this._k_eta;\n\n\t\t\t\t// eta not ready; stop\n\t\t\t\tif(!k_eta.ready) return;\n\n\t\t\t\t// countdown expired\n\t\t\t\tif(k_eta.expired) {\n\t\t\t\t\t// update store\n\t\t\t\t\tthis._yw_time.set(this._s_expired);\n\n\t\t\t\t\t// clear interval\n\t\t\t\t\tk_killables.delInterval(this._i_interval);\n\t\t\t\t\tthis._i_interval = 0;\n\n\t\t\t\t\t// remove clock\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis._dm_clock.remove();\n\t\t\t\t\t}\n\t\t\t\t\tcatch(e_remove: unknown) {}\n\n\t\t\t\t\t// termination\n\t\t\t\t\tif(f_terminate) f_terminate();\n\n\t\t\t\t\t// stop\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst xtl_diff = k_eta.remaining;\n\t\t\t\tconst n_secs = Math.max(0, Math.floor(xtl_diff / XTL_SECONDS));\n\t\t\t\tconst n_mins = Math.floor(n_secs / 60);\n\n\t\t\t\tif(!n_mins) {\n\t\t\t\t\tif(n_secs <= 10) {\n\t\t\t\t\t\tthis._yw_time.set('less than 10 seconds remaining');\n\t\t\t\t\t}\n\t\t\t\t\telse if(n_secs <= 31) {\n\t\t\t\t\t\tthis._yw_time.set('less than 30 seconds remaining');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._yw_time.set('less than 60 seconds remaining');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(n_mins < 2) {\n\t\t\t\t\tthis._yw_time.set('less than 2 minutes remaining');\n\t\t\t\t}\n\t\t\t\telse if(n_mins < 5) {\n\t\t\t\t\tthis._yw_time.set('less than 5 minutes remaining');\n\t\t\t\t}\n\t\t\t\telse if(n_mins < 10) {\n\t\t\t\t\tthis._yw_time.set('less than 10 minutes remaining');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._yw_time.set('a little more than 10 minutes remaining');\n\t\t\t\t}\n\n\t\t\t\t// this._yw_time.set(`${n_mins}m ${(''+(n_secs % 60)).padStart(2, '0')}s remaining`)\n\t\t\t}, 100);\n\n\t\t\t// render clock icon\n\t\t\tconst dm_clock = this._dm_clock = dd('span');\n\t\t\tObject.assign(dm_clock.style, {\n\t\t\t\tpaddingRight: '2px',\n\t\t\t});\n\n\t\t\t// create icon\n\t\t\tnew Fa({\n\t\t\t\ttarget: dm_clock,\n\t\t\t\tprops: {\n\t\t\t\t\ticon: faClock,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tget interval() {\n\t\t\treturn this._i_interval;\n\t\t}\n\n\t\tget clock() {\n\t\t\treturn this._dm_clock;\n\t\t}\n\n\t\tget store() {\n\t\t\treturn this._yw_time;\n\t\t}\n\n\t\tkill(s_text=''): void {\n\t\t\t// not yet killed\n\t\t\tif(this._i_interval) {\n\t\t\t\t// del interval\n\t\t\t\tk_killables.delInterval(this._i_interval);\n\n\t\t\t\t// now it is killed\n\t\t\t\tthis._i_interval = 0;\n\n\t\t\t\t// remove clock icon\n\t\t\t\tthis._dm_clock.remove();\n\n\t\t\t\t// update store\n\t\t\t\tthis._yw_time.set(s_text || this._s_kill);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function game_over(): Promise<void> {\n\t\t// delete game cookie\n\t\tdelete_cookie('game');\n\n\t\t// exit\n\t\treturn fatal('Game over. Reload to play again.')\n\t}\n\n\tasync function try_resume_game(): Promise<boolean> {\n\t\tlet b_waiting = true;\n\t\tk_panel.reveal_text('checking for active game...').then(() => b_waiting && k_panel.spinning(true));\n\n\t\t// check for active game\n\t\tlet g_game!: GameStateResponse | undefined;\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tg_game = await k_game.queryGameState();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t// no longer waiting\n\t\t\t\tb_waiting = false;\n\n\t\t\t\t// clear text and stop spinning\n\t\t\t\tk_panel.reveal_text('');\n\t\t\t}\n\t\t}\n\t\tcatch(e_query) {\n\t\t\tdebugger;\n\t\t}\n\n\t\t// continue game\n\t\tif(g_game) {\n\t\t\tconsole.log('Resuming:', g_game);\n\n\t\t\t// round exists\n\t\t\tif(null !== g_game.round) {\n\t\t\t\tif(g_game.finished) {\n\t\t\t\t\twarn(`Fast-forwarding through finished game so you can see the results.`);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twarn(`Successfully resumed active game.`);\n\t\t\t\t}\n\n\t\t\t\tif(0 === g_game.round) {\n\t\t\t\t\tg_game = await wait_for_other_player(true);\n\t\t\t\t}\n\n\t\t\t\t// start/resume round 1\n\t\t\t\tif(1 === g_game.round) {\n\t\t\t\t\t// start at round 1a, it will skip to appropriate sub-round\n\t\t\t\t\tvoid round_1a(g_game, true);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// resume round 3\n\t\t\t\tif(3 === g_game.round) {\n\t\t\t\t\tvoid round_3a(g_game, true);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tawait err(`Unrecognized game state round: ${g_game.round}`);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\tlet b_surprise = false;\n\tlet dm_surprise: HTMLElement;\n\n\tconst clone_audio = (y_audio: HTMLAudioElement) => y_audio.cloneNode() as HTMLAudioElement;\n\n\tasync function play_menu_1a() {\n\t\tif(b_muted) return;\n\t\tconst y_menu = clone_audio(H_AUDIO.menu_1a);\n\t\ty_menu.volume = 0.4;\n\n\t\ttry {\n\t\t\tawait y_menu.play();\n\t\t} catch(e_play: unknown) {}\n\t}\n\n\tasync function play_menu_1b() {\n\t\tif(b_muted) return;\n\t\tconst y_menu = clone_audio(H_AUDIO.menu_1b);\n\t\ty_menu.volume = 0.4;\n\t\ttry {\n\t\t\tawait y_menu.play();\n\t\t} catch(e_play: unknown) {}\n\t}\n\n\tasync function play_notif() {\n\t\ttry {\n\t\t\tawait H_AUDIO.rise.play();\n\t\t} catch(e_play: unknown) {}\n\t}\n\n\tasync function play_coin() {\n\t\tconst y_coin = clone_audio(H_AUDIO.coin);\n\t\ty_coin.volume = (Math.random()*0.35) + 0.1;\n\t\ttry {\n\t\t\tawait y_coin.play();\n\t\t} catch(e_play: unknown) {}\n\t}\n\n\tasync function play_jackpot() {\n\t\tif(b_muted) return;\n\n\t\tfor(let i_coin=0; i_coin<10; i_coin++) {\n\t\t\tvoid play_coin();\n\t\t\tawait timeout(Math.random() < 0.35? 150: 250);\n\t\t}\n\t}\n\n\tasync function play_death() {\n\t\tconst y_death = clone_audio(H_AUDIO.death);\n\t\ttry {\n\t\t\tawait y_death.play();\n\t\t} catch(e_play: unknown) {}\n\t}\n\n\tasync function warn(...a_args: any[]): Promise<void> {\n\t\tplay_menu_1b();\n\t\t// @ts-expect-error spread\n\t\treturn k_panel.warn(...a_args);\n\t}\n\n\tasync function err(...a_args: any[]): Promise<void> {\n\t\tplay_menu_1b();\n\t\t// @ts-expect-error spread\n\t\treturn k_panel.error(...a_args);\n\t}\n\n\tasync function arbiter(...a_args: any[]): Promise<void> {\n\t\tplay_menu_1a();\n\t\t// @ts-expect-error spread\n\t\treturn k_panel.arbiter(...a_args);\n\t}\n\n\n\tlet dm_gallery: HTMLElement;\n\n\n\tasync function display_nfts() {\n\t\tconst g_res = await k_minter.queryListNfts();\n\n\t\tif(!g_res?.token_list?.tokens) return;\n\n\t\tconst a_tokens = g_res.token_list.tokens;\n\n\t\tconst a_cards: NftCard[] = [];\n\n\t\tconst A_CONGRATS = [\n\t\t\t'Well done that game.',\n\t\t\t'Good job!',\n\t\t\t'Yep, I remember that game.',\n\t\t\t'Nice!',\n\t\t\t'Beautiful.',\n\t\t];\n\n\t\tlet i_congrat = 0;\n\n\t\tconst h_clicks: Record<string, number> = {};\n\n\t\tlet i_card = 0;\n\t\tfor(const si_token of a_tokens) {\n\t\t\th_clicks[si_token] = 0;\n\n\t\t\ta_cards.push(new NftCard({\n\t\t\t\ttarget: dm_gallery,\n\t\t\t\tprops: {\n\t\t\t\t\tsi_token,\n\t\t\t\t\tg_nft: null,\n\t\t\t\t\ti_card: i_card++,\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\n\t\n\t\tfor(let i_nft=0, nl_nfts=a_tokens.length; i_nft<nl_nfts; i_nft++) {\n\t\t\tconst g_nft = await k_minter.queryNftInfo(a_tokens[i_nft]);\n\n\t\t\tconst yc_card = a_cards[i_nft];\n\t\t\tyc_card.$set({\n\t\t\t\tg_nft,\n\t\t\t});\n\t\t\tyc_card.$on('click_card', async(g_evt: CustomEvent<CardInfo>) => {\n\t\t\t\tconst {\n\t\t\t\t\ttoken_id: si_token,\n\t\t\t\t\text: g_ext,\n\t\t\t\t} = g_evt.detail;\n\n\t\t\t\tif(h_clicks[si_token]) return;\n\t\t\t\th_clicks[si_token] += 1;\n\n\t\t\t\tswitch(g_ext.description) {\n\t\t\t\t\tcase 'simple': {\n\t\t\t\t\t\tif(i_congrat >= A_CONGRATS.length) {\n\t\t\t\t\t\t\tawait arbiter(`Ok, i'm over this...`);\n\t\t\t\t\t\t\ti_congrat = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i_congrat >= 0) {\n\t\t\t\t\t\t\tawait arbiter(A_CONGRATS[i_congrat++]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'insurance': {\n\t\t\t\t\t\tawait arbiter('Insurance will protect you in the event that you are eliminated. Your wager will be returned and your opponent will not see any gains.');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tonMount(async() => {\n\t\t// debugging info\n\t\tconsole.log(G_NETWORK_SUMMARY);\n\n\t\t// ref last seen value\n\t\tconst s_last_seen = h_cookie.last_seen;\n\t\tconst xt_last_seen = +s_last_seen;\n\n\t\t// user has been seen before\n\t\tif(s_last_seen) {\n\t\t\t// update muted value\n\t\t\tb_muted = !!(+h_cookie.muted);\n\t\t}\n\n\t\t// wallet was previously connected\n\t\tif('keplr' === h_cookie.wallet) {\n\t\t\t// try to instantiate\n\t\t\ttry {\n\t\t\t\tk_wallet = KeplrWallet.fromWindow();\n\t\t\t}\n\t\t\t// could keplr is not installed\n\t\t\tcatch(e_keplr) {\n\t\t\t\t// clear setting\n\t\t\t\tdelete_cookie('wallet');\n\t\t\t}\n\t\t}\n\n\t\t// set last seen value, expires in 30 days\n\t\twrite_cookie({\n\t\t\tlast_seen: ''+Date.now(),\n\t\t}, 30*XTL_DAYS);\n\n\t\t// re-read cookie\n\t\th_cookie = read_cookie();\n\n\t\t// connect wallet\n\t\tawait connect_wallet();\n\n\t\t// instantiate minter contract\n\t\tk_minter = new MinterContract(k_wallet, P_CONTRACT_MINTER_ADDR, g_permit);\n\n\t\t// check for existing NFTs\n\t\tvoid display_nfts();\n\n\t\t// instantiate game contract\n\t\tk_game = new GameContract(k_wallet, P_CONTRACT_GAME_ADDR, g_permit);\n\n\t\t// a game was started\n\t\tconst g_active = read_cookie_json<Record<string, string>>('game');\n\t\tif(g_active && g_active[k_wallet.publicAddress]) {\n\t\t\tconst b_exit = await try_resume_game();\n\t\t\t\n\t\t\tif(b_exit) return;\n\n\t\t\t// no active game\n\t\t\twrite_cookie({\n\t\t\t\tgame: {\n\t\t\t\t\t...(read_cookie_json<JsonObject>('game') || {}),\n\t\t\t\t\t[k_wallet.publicAddress]: '',\n\t\t\t\t},\n\t\t\t}, 30*XTL_DAYS);\n\t\t}\n\n\t\t// new user or late returning\n\t\tconst s_surprise = h_cookie.surprise;\n\t\tif('bypass' !== s_surprise) {\n\t\t\t// surprise >:)\n\t\t\tawait surprise(s_surprise);\n\n\t\t\t// run introduction\n\t\t\tawait introduction();\n\t\t}\n\t\t// returning; welcome back\n\t\telse {\n\t\t\tawait welcome_back();\n\t\t}\n\n\t\t// gameplay explanation                                                                                    |\n\t\tawait arbiter(`\n\t\t\tWelcome${s_last_seen? ' back': ''} to my game of secrets. In a moment, you will be matched with another player.\n\n\t\t\tI will give each of you a chip with a colored shape on it. There are only four colors (red, green, blue, black), and four shapes (triangle, square, circle, star).\n\n\t\t\tYour opponent will not be able to see your chip and vice versa. I will also take a third chip and hide it in a bag. Each chip will have a unique color and a unique shape. For example, if the chip in my bag is a red triangle, then nobody else has red, and nobody else has a triangle.\n\n\t\t\tThe rules are simple. You and your opponent must exchange a message with each other. Cooperate to deduce what is in my bag and you both will advance to the next round. Betray your opponent by correctly guessing which chip they have and win their wager. Guess wrong and lose.\n\t\t`);\n\n\t\t// beat\n\t\tawait timeout(s_last_seen? 800: 4.6e3);\n\n\t\treturn try_join();\n\t});\n\n\tinterface ExecStruct {\n\t\treveal?: string | null;\n\t\texec: () => Promise<GameStateResponse>;\n\t\tquery_fail?: (e_fail?: unknown) => Promise<GameStateResponse | null> | null;\n\t\tcheck: (g_game: GameStateResponse) => boolean;\n\t\trejected?: (e_fail?: unknown) => Promise<GameStateResponse | null> | null;\n\t\tcondition?: (e_fail?: unknown) => Promise<GameStateResponse | null> | null;\n\t\tpersist_reveal?: boolean;\n\t}\n\n\tclass GameStateError extends Error {}\n\n\tasync function safe_exec(gc_exec: ExecStruct): Promise<GameStateResponse | null> {\n\t\t// wait for transaction is verified\n\t\tlet b_waiting = true;\n\t\tconst s_reveal = gc_exec.reveal;\n\t\tif('string' === typeof s_reveal) {\n\t\t\tk_panel.reveal_text(s_reveal).then(() => b_waiting && k_panel.spinning(true));\n\t\t}\n\t\telse {\n\t\t\tk_panel.spinning(true);\n\t\t}\n\n\t\tconst f_check = gc_exec.check;\n\t\tconst f_condition = gc_exec.condition || gc_exec.query_fail;\n\t\tconst f_rejected = gc_exec.rejected || gc_exec.query_fail;\n\t\t\n\t\tlet g_game: GameStateResponse | null;\n\n\t\t// attempt executioon\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tg_game = await gc_exec.exec();\n\t\t\t\t\n\t\t\t\tif(!f_check(g_game)) {\n\t\t\t\t\tg_game = null;\n\t\t\t\t\tthrow new GameStateError();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t// no longer waiting\n\t\t\t\tb_waiting = false;\n\n\t\t\t\t// clear text and stop spinning\n\t\t\t\tif(!gc_exec.persist_reveal) {\n\t\t\t\t\tk_panel.reveal_text('');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// failed\n\t\tcatch(e_exec: unknown) {\n\t\t\tconsole.error(e_exec);\n\n\t\t\t// error\n\t\t\tif(e_exec instanceof Error) {\n\t\t\t\tconst se_exec = e_exec.message;\n\n\t\t\t\t// no scrt\n\t\t\t\tif(/Account does not exist/.test(se_exec)) {\n\t\t\t\t\tconst dm_icon = dd('span');\n\n\t\t\t\t\tnew Fa({\n\t\t\t\t\t\ttarget: dm_icon,\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\ticon: faFaucet,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tconst dm_a = dd('a', {\n\t\t\t\t\t\thref: 'https://faucet.secrettestnet.io/',\n\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t}, [\n\t\t\t\t\t\t'from the faucet',\n\t\t\t\t\t]);\n\n\t\t\t\t\tObject.assign(dm_a.style, {\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t});\n\n\t\t\t\t\tdm_icon.append(dm_a);\n\n\t\t\t\t\tconst yw_faucet = writable('from the faucet');\n\n\t\t\t\t\treturn fatal(`Looks like your wallet is empty. Make sure to acquire some SCRT tokens {faucet} so that you can pay the gas fees for transactions.`, {\n\t\t\t\t\t\tfaucet: dm_icon,\n\t\t\t\t\t\t// faucet: yw_faucet,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// already in active game\n\t\t\t\telse if(/must finish current game/.test(se_exec)) {;\n\t\t\t\t\twrite_cookie({\n\t\t\t\t\t\tgame: {\n\t\t\t\t\t\t\t...(read_cookie_json<JsonObject>('game') || {}),\n\t\t\t\t\t\t\t[k_wallet.publicAddress]: 'active',\n\t\t\t\t\t\t},\n\t\t\t\t\t}, 12*XTL_HOURS);\n\n\t\t\t\t\t// retry\n\t\t\t\t\tif(await try_resume_game()) return null;\n\n\t\t\t\t\t// fail\n\t\t\t\t\treturn fatal(`Looks like you changed browsers or cleared cache since you last joined a game with this account. Please reload and the game will attempt to resume.`);\n\t\t\t\t}\n\t\t\t\t// contract not found\n\t\t\t\telse if(/contract not found/i.test(se_exec)) {\n\t\t\t\t\treturn fatal(`Contract not found! Are you on the right network?`);\n\t\t\t\t}\n\t\t\t\t// game is finished\n\t\t\t\telse if(/Game is finished/i.test(se_exec)) {\n\t\t\t\t\tvoid game_over();\n\t\t\t\t\treturn new Promise(() => {});\n\t\t\t\t}\n\t\t\t\t// contract condition exception\n\t\t\t\telse if(/execute contract failed/.test(se_exec)) {\n\t\t\t\t\terr(`Contract error: ${se_exec}`);\n\t\t\t\t\tvoid f_condition!(e_exec);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t// user rejected request\n\t\t\t\telse if(/Request rejected/.test(se_exec)) {\n\t\t\t\t\terr(`Transaction rejected`);\n\t\t\t\t\tvoid f_rejected!(e_exec);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t// timeout\n\t\t\t\telse if(/timed out/.test(se_exec)) {\n\t\t\t\t\tconst yw_retries = writable('');\n\n\t\t\t\t\tawait warn(`There was a timeout error while waiting for the transaction to be included. Waiting to see if it gets included... {retries}`, {\n\t\t\t\t\t\tretries: yw_retries,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst g_game_retry = await (async function retry(n_retries=1): Promise<GameStateResponse | null> {\n\t\t\t\t\t\tawait timeout(5000);\n\n\t\t\t\t\t\tlet g_query: GameStateResponse | null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tg_query = await k_game.queryGameState();\n\n\t\t\t\t\t\t\tif(!f_check(g_query)) {\n\t\t\t\t\t\t\t\tconsole.warn(`query permit check failed on game state`, g_query);\n\n\t\t\t\t\t\t\t\t// game is finished?\n\t\t\t\t\t\t\t\tif(g_query.finished) {\n\t\t\t\t\t\t\t\t\tawait arbiter(`Your opponent ended the game because you took too long to respond.`)\n\t\t\t\t\t\t\t\t\tawait game_over();\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tg_query = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e_query: unknown) {\n\t\t\t\t\t\t\tif(!(e_query instanceof GameStateError)) {\n\t\t\t\t\t\t\t\tawait err([`Timeout error. Please try again with higher gas fee.`, se_exec]);\n\n\t\t\t\t\t\t\t\t// tx failed; allow user to retry\n\t\t\t\t\t\t\t\tif(gc_exec.query_fail) {\n\t\t\t\t\t\t\t\t\treturn await gc_exec.query_fail(e_query);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// fail\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// retry\n\t\t\t\t\t\tif(!g_query!) {\n\t\t\t\t\t\t\t// give up\n\t\t\t\t\t\t\tif(n_retries >= 5) {\n\t\t\t\t\t\t\t\tawait err(`Reached maximum retries. Seems like your transaction failed. Try again with higher gas fee?`);\n\n\t\t\t\t\t\t\t\t// tx failed; allow user to retry\n\t\t\t\t\t\t\t\tif(gc_exec.query_fail) {\n\t\t\t\t\t\t\t\t\treturn await gc_exec.query_fail(new GameStateError());\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// fail\n\t\t\t\t\t\t\t\treturn fatal('Unhandled query failure path.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// info and retry\n\t\t\t\t\t\t\tyw_retries.set(`Retried ${1 === n_retries? 'once': `${n_retries} times`} so far...`);\n\t\t\t\t\t\t\treturn await retry(n_retries+1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// worked!\n\t\t\t\t\t\treturn g_query;\n\t\t\t\t\t})();\n\n\t\t\t\t\t// fail\n\t\t\t\t\tif(!g_game_retry) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\t// success\n\t\t\t\t\telse {\n\t\t\t\t\t\tg_game = g_game_retry;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// unhandled\n\t\t\t\telse {\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn fatal(`Unhandled error: ${e_exec.stack}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// unknown\n\t\t\telse {\n\t\t\t\treturn fatal(`Unknown error: ${e_exec}`);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(g_game);\n\n\t\t// // clear prompt\n\t\t// k_panel.reveal_text('');\n\n\t\t// // destructure join results\n\t\t// const {\n\t\t// \tjoin: g_res_join,\n\t\t// \terror: se_join,\n\t\t// } = g_exec.data;\n\n\t\t// // error\n\t\t// if(se_join) {\n\t\t// \treturn fatal(se_join);\n\t\t// }\n\n\t\t// // \n\t\t// const g_game_join = g_res_join?.game_state!;\n\n\t\treturn g_game;\n\t}\n\n\tasync function try_join(): Promise<void> {\n\t\t// ask if ready to join\n\t\tawait k_panel.reveal_text('ready to play?');\n\n\t\t// join a game\n\t\tawait k_prompt.ok('Join a game');\n\n\t\tconst g_game_join = await safe_exec({\n\t\t\treveal: 'waiting for transaction to be verified... ',\n\t\t\tasync exec(): Promise<GameStateResponse> {\n\t\t\t\treturn (await k_game.joinGame()).data.join!.game_state!;\n\t\t\t},\n\t\t\tcheck(g: GameStateResponse): boolean {\n\t\t\t\treturn null !== g.round;\n\t\t\t},\n\t\t\tquery_fail() {\n\t\t\t\tvoid try_join();\n\t\t\t\treturn null;\n\t\t\t},\n\t\t});\n\n\t\tif(!g_game_join) return;\n\n\t\tlet g_game = g_game_join;\n\n\t\t// must wait for another player\n\t\tif(0 === g_game_join.round) {\n\t\t\t// record that a game was started\n\t\t\twrite_cookie({\n\t\t\t\tgame: {\n\t\t\t\t\t...(read_cookie_json<JsonObject>('game') || {}),\n\t\t\t\t\t[k_wallet.publicAddress]: 'active',\n\t\t\t\t},\n\t\t\t}, 12*XTL_HOURS);\n\n\t\t\t// wait for other player\n\t\t\tg_game = await wait_for_other_player();\n\t\t}\n\n\t\t// ready to play round 1\n\t\tif(1 === g_game.round) {\n\t\t\treturn round_1a(g_game);\n\t\t}\n\t\t// resume round 3\n\t\telse if(3 === g_game.round) {\n\t\t\treturn round_1a(g_game);\n\t\t}\n\t\telse {\n\t\t\tconsole.error(g_game);\n\n\t\t\t// record that a game was started\n\t\t\twrite_cookie({\n\t\t\t\tgame: {\n\t\t\t\t\t...(read_cookie_json<JsonObject>('game') || {}),\n\t\t\t\t\t[k_wallet.publicAddress]: 'active',\n\t\t\t\t},\n\t\t\t}, 12*XTL_HOURS);\n\n\t\t\treturn fatal('Failed to join game while waiting for transaction. You can try once more by reloading this page.');\n\t\t}\n\t}\n\n\tfunction update_player_state(g_game: GameStateResponse) {\n\t\tsi_player_color = g_game.chip_color!.split(':')[1] as CanonicalColor;\n\t\tsi_player_shape = g_game.chip_shape!.split(':')[1] as CanonicalShape;\n\t\tsi_player_hint = g_game.hint?.split('|')[1] as SemanticQuality;\n\t\tsi_submit_first = g_game.first_submit as SemanticAssertion;\n\n\t\t// create a priori deduction\n\t\tk_priori = new Deduction();\n\t\tk_priori.nobody(`color:${si_player_color}`);\n\t\tk_priori.nobody(`shape:${si_player_shape}`);\n\t\tk_priori.nobody(si_player_hint);\n\t}\n\n\tlet si_assert_basis: CanonicalBasis = A_BASES[0];\n\tlet si_assert_quality: SemanticQuality | '' = '';\n\n\tasync function reveal_tx(): Promise<void> {\n\t\tconst s_what = si_assert_quality? use_quality_in_sentence(si_assert_quality): '';\n\n\t\tconst s_reveal = H_BASES[si_assert_basis].describe[s_lang](s_what);\n\n\t\tawait k_panel.reveal_text(s_reveal);\n\t}\n\n\tfunction select_basis(g_evt: CustomEvent<CanonicalBasis>) {\n\t\tk_panel.submittable(null);\n\n\t\tsi_assert_basis = g_evt.detail;\n\n\t\tsi_assert_quality = '';\n\n\t\treveal_tx();\n\t}\n\n\tlet b_force_rejected = false;\n\tfunction force_reject(g_evt: CustomEvent<[CanonicalBasis, CanonicalBasis]>) {\n\t\tif(b_force_rejected) return;\n\t\tb_force_rejected = true;\n\t\tconst [si_prev, si_force] = g_evt.detail;\n\t\tarbiter(`You already used \"${H_BASES[si_prev].describe[s_lang]('')}\" last turn. Now you must use \"${H_BASES[si_force].describe[s_lang]('')}\".`);\n\t}\n\n\t// reset transmission controls after recovering from an error\n\tfunction reset_tx() {\n\t\t// reset quality\n\t\tsi_assert_quality = '';\n\n\t\t// show submit button\n\t\tk_panel.submittable(null);\n\n\t\t// show transmission controls\n\t\tk_tx.show();\n\n\t\t// reveal basis\n\t\treveal_tx();\n\t}\n\n\tasync function select_quality(g_evt: CustomEvent<SemanticQuality>) {\n\t\tk_panel.submittable(null);\n\n\t\tsi_assert_quality = g_evt.detail;\n\n\t\t// 2nd assertion\n\t\tif(si_submit_first) {\n\t\t\tconst [, si_quality_first] = si_submit_first.split('|');\n\t\t\tif(si_quality_first === si_assert_quality) {\n\t\t\t\tsi_assert_quality = '';\n\n\t\t\t\tawait arbiter(`You cannot submit a message that would contradict your previous assertion.`);\n\t\t\t}\n\t\t}\n\n\t\tconst [si_attr, s_value] = si_assert_quality.split(':');\n\n\t\t// create evaluation tag\n\t\tlet s_tag = 'Unknowable';\n\t\tif('nobody_has' === si_assert_basis) {\n\t\t\tif(si_player_hint === si_assert_quality) {\n\t\t\t\ts_tag = 'Truth';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(('color' === si_attr && s_value === si_player_color)\n\t\t\t\t\t|| ('shape' === si_attr && s_value === si_player_shape)\n\t\t\t\t) {\n\t\t\t\t\ts_tag = 'Lie';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(('color' === si_attr && s_value === si_player_color)\n\t\t\t\t|| ('shape' === si_attr && s_value === si_player_shape)\n\t\t\t) {\n\t\t\t\ts_tag = 'Truth';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ts_tag = 'Lie';\n\t\t\t}\n\t\t}\n\n\t\t// display assertion\n\t\tawait reveal_tx();\n\n\t\t// enable option to submit\n\t\tk_panel.submittable(async() => {\n\t\t\t// hide transmission controls\n\t\t\tk_tx.hide();\n\n\t\t\t// lock submit button\n\t\t\tk_panel.submittable(null);\n\n\t\t\tconst g_game = await safe_exec({\n\t\t\t\tasync exec(): Promise<GameStateResponse> {\n\t\t\t\t\treturn (await k_game.submitAssertion(si_assert_basis, si_assert_quality as SemanticQuality)).data.submit!.game_state!;\n\t\t\t\t},\n\t\t\t\tcheck(g: GameStateResponse): boolean {\n\t\t\t\t\treturn si_submit_first? null !== g.second_submit: null !== g.first_submit;\n\t\t\t\t},\n\t\t\t\tquery_fail() {\n\t\t\t\t\t// reset tx\n\t\t\t\t\treset_tx();\n\n\t\t\t\t\tvoid select_quality(g_evt);\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t\tpersist_reveal: true,\n\t\t\t});\n\n\t\t\tif(!g_game) return;\n\n\t\t\t// commit text to message history\n\t\t\tawait k_panel.commit();\n\t\t\tk_panel.spinning(false);\n\n\t\t\t// success\n\t\t\tif(k_countdown_1a) k_countdown_1a.kill();\n\t\t\tif(k_countdown_1b) k_countdown_1b.kill();\n\n\t\t\t// remove submission button\n\t\t\tk_panel.unsubmittable();\n\n\t\t\t// player just submitted 2nd assertion\n\t\t\tif(g_game.second_submit) {\n\t\t\t\tround_1c(g_game);\n\t\t\t}\n\t\t\t// player just submitted 1st assertion\n\t\t\telse {\n\t\t\t\tround_1b(g_game);\n\t\t\t}\n\t\t}, s_tag);\n\t}\n\n\n\n\tlet k_countdown_1a: Countdown;\n\n\tasync function round_1a(g_game: GameStateResponse, b_resumed=false): Promise<void> {\n\t\tupdate_player_state(g_game);\n\n\t\t// clear\n\t\tawait k_panel.reveal_text('');\n\n\t\t// give chip\n\t\tawait arbiter(`Here is your chip, player...`);\n\n\t\t// animate chip\n\t\tawait k_scene.animate_chip_entry(si_player_color, si_player_shape);\n\n\t\tif(!b_resumed) await timeout(5e3);\n\n\t\tlet b_hint_color = si_player_hint.startsWith('color:');\n\n\t\tawait arbiter(`\n\t\t\tRound 1: I've given you the ${si_player_color} ${si_player_shape} this round, and a hint that nobody has ${b_hint_color? '': 'a '}${si_player_hint.replace(/^[^:]+:/, '')}.\n\n\t\t\tI've also given your opponent a hint. Theirs is that nobody has a certain ${b_hint_color? 'shape': 'color'}.\n\t\t`);\n\n\t\t// player already submitted 1st assertion\n\t\tif(g_game.first_submit) {\n\t\t\tawait k_panel.user(use_assertion_in_sentence(g_game.first_submit));\n\n\t\t\t// already beyond round 1a; skip ahead\n\t\t\treturn round_1b(g_game, b_resumed);\n\t\t}\n\t\t// not resumed\n\t\telse if(!b_resumed) {\n\t\t\tawait timeout(4.1e3);\n\t\t}\n\n\t\t// countdown timer\n\t\t{\n\t\t\tk_countdown_1a = new Countdown({\n\t\t\t\teta: new EtaEstimator(g_game.first_round_start_block+''),\n\t\t\t\tkill_text: 'successfully submitted',\n\t\t\t});\n\n\t\t\t// final instructions\n\t\t\tawait arbiter([\n\t\t\t\t'Now you must choose what to tell the other player. I will reveal both of your messages simultaneously once they both have been submitted. You have {clock_icon}{time_remaining}.',\n\t\t\t], {\n\t\t\t\tclock_icon: k_countdown_1a.clock,\n\t\t\t\ttime_remaining: k_countdown_1a.store,\n\t\t\t});\n\t\t}\n\n\t\t// show transmission controls\n\t\tawait k_tx.show();\n\n\t\tif(!b_resumed) await timeout(4e3);\n\n\t\t// reveal transmission buttons\n\t\treveal_tx();\n\t}\n\n\n\tlet b_notif_1b_waiting = false;\n\tlet k_countdown_1a2: Countdown;\n\tlet k_countdown_1b: Countdown;\n\n\tasync function round_1b(g_game: GameStateResponse, b_resumed=false): Promise<void> {\n\t\t// update player's local state\n\t\tupdate_player_state(g_game);\n\n\t\t// \n\t\tconst {\n\t\t\topponent_first_submit: si_opponent_assertion,\n\t\t\tfirst_extra_secret: si_opponent_secret,\n\t\t} = g_game;\n\n\t\t// still waiting on the player\n\t\tif(!si_opponent_assertion && !si_opponent_secret) {\n\t\t\tif(!b_notif_1b_waiting) {\n\t\t\t\tb_notif_1b_waiting = true;\n\n\t\t\t\t// clear 1a\n\t\t\t\tif(k_countdown_1a) k_countdown_1a.kill('already submittted');\n\n\t\t\t\t// opponent's time remaining\n\t\t\t\tk_countdown_1a2 = new Countdown({\n\t\t\t\t\teta: new EtaEstimator(g_game.first_round_start_block+''),\n\t\t\t\t\tkill_text: 'also submitted theirs',\n\t\t\t\t\tterminate: force_endgame,\n\t\t\t\t});\n\n\t\t\t\t// inform\n\t\t\t\tawait arbiter([\n\t\t\t\t\t'Your submission has been received. Your opponent has {clock_icon}{time_remaining}.',\n\t\t\t\t], {\n\t\t\t\t\tclock_icon: k_countdown_1a2.clock,\n\t\t\t\t\ttime_remaining: k_countdown_1a2.store,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// pause\n\t\t\tawait timeout(5000);\n\n\t\t\t// retry\n\t\t\treturn round_1b(await k_game.queryGameState());\n\t\t}\n\n\t\t// clear 1b\n\t\tif(k_countdown_1a2) k_countdown_1a2.kill();\n\t\t\n\t\t// not resuming\n\t\tif(!b_resumed) play_notif();\n\n\t\t// premise dom\n\t\tconst dm_premise = dd('span');\n\n\t\t// opponent submitted provably false assertion (lie)\n\t\tif(si_opponent_secret) {\n\t\t\tconst [si_basis, si_quality] = si_opponent_secret.split('|') as [CanonicalBasis, SemanticQuality];\n\n\t\t\tconst yw_secret = writable('');\n\n\t\t\t// opponent's hint\n\t\t\tif('nobody_has' === si_basis) {\n\t\t\t\t// enhance deduction\n\t\t\t\tk_priori.nobody(si_quality);\n\n\t\t\t\t// set widget value\n\t\t\t\tyw_secret.set(`Your opponent has the hint that \"nobody has ${use_quality_in_sentence(si_quality)}\".`);\n\t\t\t}\n\t\t\t// opponent's chip\n\t\t\telse {\n\t\t\t\t// enhance deduction\n\t\t\t\tk_priori.opponent(si_quality, true);\n\n\t\t\t\t// set widget value\n\t\t\t\tyw_secret.set(`Your opponent has ${use_quality_in_sentence(si_quality)}.`);\n\t\t\t}\n\n\t\t\t// render premise widget\n\t\t\tnew PremiseWidget({\n\t\t\t\ttarget: dm_premise,\n\t\t\t\tprops: {\n\t\t\t\t\tb_mode_nobody: false,  // phony\n\t\t\t\t\tsi_assertion: si_quality,  // phony\n\t\t\t\t\tsi_known: 'true',  // all that matters is that this statement is true\n\t\t\t\t},\n\t\t\t});\n\t\t\n\t\t\t// inform user\n\t\t\tawait arbiter(`\n\t\t\t\tThe other player tried to deceive you by submitting a false assertion. You would have known it's false given what you know about your chip and your hint.\n\t\t\t\t\n\t\t\t\tInstead, I will now reveal to you one of their secrets. They will not know that I have done any of this.\n\n\t\t\t\t{secret} {premise}\n\t\t\t`, {\n\t\t\t\tsecret: yw_secret,\n\t\t\t\tpremise: dm_premise,\n\t\t\t});\n\t\t}\n\t\t// opponent submitted reasonable assertion\n\t\telse if(si_opponent_assertion) {\n\t\t\tconst [si_basis, si_quality] = si_opponent_assertion.split('|') as [CanonicalBasis, SemanticQuality];\n\n\t\t\t// prepare opp1 deduction\n\t\t\tlet k_opp1 = k_priori.clone();\n\n\t\t\t// already known?\n\t\t\tconst b_known = 'nobody_has' === si_basis && si_quality === si_player_hint;\n\n\t\t\t// render premise widget\n\t\t\tconst yc_premise = new PremiseWidget({\n\t\t\t\ttarget: dm_premise,\n\t\t\t\tprops: {\n\t\t\t\t\tb_mode_nobody: 'nobody_has' === si_basis,\n\t\t\t\t\tsi_assertion: si_quality,\n\t\t\t\t\tsi_known: b_known? 'undeniable': '',\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// premise helper\n\t\t\tconst k_premise = yc_premise.k_premise;\n\n\t\t\t// listen for change to premise\n\t\t\tyc_premise.$on('change', () => {\n\t\t\t\tf_assert_1 = k_premise.apply;\n\n\t\t\t\t// k_opp1 = k_premise.apply(k_priori.clone());\n\n\t\t\t\tconsole.log(`Priori: ${k_priori.explain()}`);\n\t\t\t\tconsole.log(`Opp1: ${k_opp1.explain()}`);\n\t\t\t\t// debugger;\n\t\t\t\tconsole.log([k_priori, k_opp1]);\n\t\t\t});\n\n\t\t\t// make statement\n\t\t\tawait k_panel.opponent([\n\t\t\t\t`${proper(use_assertion_in_sentence(si_opponent_assertion))} {premise}`,\n\t\t\t], {\n\t\t\t\tpremise: dm_premise,\n\t\t\t});\n\t\t}\n\t\t// assert bad\n\t\telse {\n\t\t\treturn fatal(`Fatal system error: unable to parse game state`);\n\t\t}\n\n\t\t// user has already submitted 2nd assertioon\n\t\tif(g_game.second_submit) {\n\t\t\tawait k_panel.user(use_assertion_in_sentence(g_game.second_submit));\n\n\t\t\treturn round_1c(g_game, b_resumed);\n\t\t}\n\t\t// not resumed\n\t\telse if(!b_resumed) {\n\t\t\tawait timeout(4.1e3);\n\t\t}\n\n\t\tk_countdown_1b = new Countdown({\n\t\t\teta: new EtaEstimator(g_game.second_submit_turn_start_block+''),\n\t\t\tkill_text: 'already submitted',\n\t\t});\n\n\t\t// final instructions\n\t\tconst si_basis_force = 'nobody_has' === g_game.first_submit?.split('|')[0]? 'i_have': 'nobody_has';\n\t\tawait arbiter([\n\t\t\t`Both of you must now exchange one more message with each other. This time, I'm requiring you to submit a message about ${'nobody_has' === si_basis_force? 'what \"nobody has\"': 'your chip'}. You have {clock_icon}{time_remaining}.`,\n\t\t], {\n\t\t\tclock_icon: k_countdown_1b.clock,\n\t\t\ttime_remaining: k_countdown_1b.store,\n\t\t});\n\n\t\t// show transmission controls\n\t\tawait k_tx.show(si_basis_force);\n\n\t\t// reveal transmission buttons\n\t\treveal_tx();\n\t}\n\n\t\n\tlet b_notif_1c_waiting = false;\n\tlet k_countdown_1b2: Countdown;\n\tlet k_countdown_1c: Countdown;\n\n\tlet k_countdown_1c2: Countdown;\n\n\tasync function round_1c(g_game: GameStateResponse, b_resumed=false): Promise<void> {\n\t\t// \n\t\tconst {\n\t\t\topponent_second_submit: si_opponent_assertion,\n\t\t\tsecond_extra_secret: si_opponent_secret,\n\t\t} = g_game;\n\n\t\t// still waiting on the player\n\t\tif(!si_opponent_assertion && !si_opponent_secret) {\n\t\t\tif(!b_notif_1c_waiting) {\n\t\t\t\tb_notif_1c_waiting = true;\n\n\t\t\t\t// clear 1b2\n\t\t\t\tif(k_countdown_1b2) k_countdown_1b2.kill();\n\t\t\t\t\n\t\t\t\t// opponent's time remaining\n\t\t\t\tk_countdown_1c = new Countdown({\n\t\t\t\t\teta: new EtaEstimator(g_game.second_submit_turn_start_block+''),\n\t\t\t\t\tkill_text: 'also submitted theirs',\n\t\t\t\t\tterminate: force_endgame,\n\t\t\t\t});\n\n\t\t\t\t// inform\n\t\t\t\tawait arbiter([\n\t\t\t\t\t'Your 2nd submission has been received. Your opponent has {clock_icon}{time_remaining}.',\n\t\t\t\t], {\n\t\t\t\t\tclock_icon: k_countdown_1c.clock,\n\t\t\t\t\ttime_remaining: k_countdown_1c.store,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// pause\n\t\t\tawait timeout(5000);\n\n\t\t\t// retry\n\t\t\treturn round_1c(await k_game.queryGameState());\n\t\t}\n\n\t\t// not resuming\n\t\tif(!b_resumed) play_notif();\n\n\t\t// premise dom\n\t\tconst dm_premise = dd('span');\n\n\t\t// opponent submitted provably false assertion (lie)\n\t\tif(si_opponent_secret) {\n\t\t\tconst [si_basis, si_quality] = si_opponent_secret.split('|') as [CanonicalBasis, SemanticQuality];\n\n\t\t\tconst yw_secret = writable('');\n\n\t\t\t// opponent's hint\n\t\t\tif('nobody_has' === si_basis) {\n\t\t\t\t// enhance deduction\n\t\t\t\tf_assert_2 = k => k.nobody(si_quality);\n\n\t\t\t\t// set widget value\n\t\t\t\tyw_secret.set(`Your opponent has the hint that \"nobody has ${use_quality_in_sentence(si_quality)}\".`);\n\t\t\t}\n\t\t\t// opponent's chip\n\t\t\telse {\n\t\t\t\t// enhance deduction\n\t\t\t\tf_assert_2 = k => k.opponent(si_quality, true);\n\n\t\t\t\t// set widget value\n\t\t\t\tyw_secret.set(`Your opponent has ${use_quality_in_sentence(si_quality)}.`);\n\t\t\t}\n\n\t\t\t// render premise widget\n\t\t\tnew PremiseWidget({\n\t\t\t\ttarget: dm_premise,\n\t\t\t\tprops: {\n\t\t\t\t\tb_mode_nobody: false,  // phony\n\t\t\t\t\tsi_assertion: si_quality,  // phony\n\t\t\t\t\tsi_known: 'true',  // all that matters is that this statement is true\n\t\t\t\t},\n\t\t\t});\n\t\t\n\t\t\t// inform user\n\t\t\tawait arbiter(`\n\t\t\t\tThe other player tried to deceive you by submitting a false assertion. You would have known it's false given what you know about your chip and your hint.\n\t\t\t\t\n\t\t\t\tInstead, I will now reveal to you one of their secrets. They will not know that I have done any of this.\n\n\t\t\t\t{secret} {premise}\n\t\t\t`, {\n\t\t\t\tsecret: yw_secret,\n\t\t\t\tpremise: dm_premise,\n\t\t\t});\n\t\t}\n\t\t// opponent submitted reasonable assertion\n\t\telse if(si_opponent_assertion) {\n\t\t\t// clear 1c\n\t\t\tif(k_countdown_1c) k_countdown_1c.kill();\n\n\t\t\tconst [si_basis, si_quality] = si_opponent_assertion.split('|') as [CanonicalBasis, SemanticQuality];\n\n\t\t\t// already known?\n\t\t\tconst b_known = 'nobody_has' === si_basis && si_quality === si_player_hint;\n\n\t\t\t// render premise widget\n\t\t\tconst yc_premise = new PremiseWidget({\n\t\t\t\ttarget: dm_premise,\n\t\t\t\tprops: {\n\t\t\t\t\tb_mode_nobody: 'nobody_has' === si_basis,\n\t\t\t\t\tsi_assertion: si_quality,\n\t\t\t\t\tsi_known: b_known? 'undeniable': '',\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// premise helper\n\t\t\tconst k_premise = yc_premise.k_premise;\n\n\t\t\t// listen for change to premise\n\t\t\tyc_premise.$on('change', () => {\n\t\t\t\tf_assert_2 = k_premise.apply;\n\t\t\t});\n\n\t\t\t// make statement\n\t\t\tawait k_panel.opponent([\n\t\t\t\t`${proper(use_assertion_in_sentence(si_opponent_assertion))} {premise}`,\n\t\t\t], {\n\t\t\t\tpremise: dm_premise,\n\t\t\t});\n\t\t}\n\t\t// assert bad\n\t\telse {\n\t\t\treturn fatal(`Fatal system error: unable to parse game state`);\n\t\t}\n\n\t\t// user has already submitted guess\n\t\tif(g_game.guess) {\n\t\t\tawait k_panel.user(use_guess_in_sentence(g_game.guess));\n\n\t\t\t// proceed too next stage\n\t\t\treturn round_1d(g_game, b_resumed);\n\t\t}\n\n\t\tk_countdown_1c2 = new Countdown({\n\t\t\teta: new EtaEstimator(g_game.guess_turn_start_block+''),\n\t\t\tkill_text: 'successfully submitted',\n\t\t});\n\n\t\t// instruction\n\t\tawait arbiter(`\n\t\t\tThe time has come for you to surmise my secrets. You may either guess what is in my bag, what your opponent has, or abstain completely. You have {clock_icon}{time_remaining}.\n\n\t\t\tThe precedence for winning is as follows:\n\t\t\t- [Guess wrong] < [Abstain] < [Correctly guess arbiter's bag] < [Corrrectly guess opponent's chip]\n\n\t\t\tUse the inline widgets next to each assertion above to logically reduce your option space.\n\t\t`, {\n\t\t\tclock_icon: k_countdown_1c2.clock,\n\t\t\ttime_remaining: k_countdown_1c2.store,\n\t\t});\n\n\t\t// accept guess\n\t\tawait k_decision.show();\n\n\t\tconsole.log(g_game);\n\t}\n\n\tasync function prepare_guess(g_opt: GuessOption): Promise<void> {\n\t\tk_panel.submittable(null);\n\n\t\tawait k_panel.reveal_text(use_guess_in_sentence(g_opt), 30);\n\n\t\tk_panel.submittable(async () => {\n\t\t\t// lock submit button\n\t\t\tk_panel.submittable(null);\n\n\t\t\t// hide decision ui\n\t\t\tk_decision.hide();\n\n\t\t\tconst g_game = await safe_exec({\n\t\t\t\tasync exec(): Promise<GameStateResponse> {\n\t\t\t\t\treturn (await k_game.submitGuess(g_opt)).data.guess!.game_state!;\n\t\t\t\t},\n\t\t\t\tcheck(g: GameStateResponse): boolean {\n\t\t\t\t\treturn null !== g.guess;\n\t\t\t\t},\n\t\t\t\tquery_fail() {\n\t\t\t\t\tk_decision.show();\n\t\t\t\t\tvoid prepare_guess(g_opt);\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t\tpersist_reveal: true,\n\t\t\t});\n\n\t\t\tif(!g_game) return;\n\n\t\t\tawait k_panel.commit();\n\n\t\t\t// remove submit button\n\t\t\tk_panel.unsubmittable();\n\n\t\t\t// stop countdown for guess submissioin\n\t\t\tk_countdown_1c2.kill();\n\n\t\t\t// proceed to final stage\n\t\t\tvoid round_1d(g_game);\n\t\t});\n\t}\n\n\tlet b_notif_1d_result = false;\n\tlet b_notif_1d_waiting = false;\n\tlet k_countdown_1d: Countdown;\n\n\tasync function round_1d(g_game: GameStateResponse, b_resumed=false): Promise<void> {\n\t\tconst {\n\t\t\tround_result: si_round,\n\t\t\tround: i_round,\n\t\t\tresult: si_outcome,\n\t\t} = g_game;\n\n\t\tlet b_wrong = false;\n\t\t\n\n\t\t// notify user about the correctness of their guess\n\t\tif(si_round && !b_notif_1d_result) {\n\t\t\tb_notif_1d_result = true;\n\n\t\t\tconst [si_target, si_correctness] = si_round!.split('|') as [CanonicalTarget, 'correct' | 'wrong'];\n\n\t\t\tif('abstain' === si_target) {\n\t\t\t\tawait arbiter(`\n\t\t\t\t\tVery brave to abstain, player.\n\t\t\t\t`);\n\t\t\t}\n\t\t\telse if('wrong' === si_correctness) {\n\t\t\t\tvoid H_AUDIO.death.play();\n\n\t\t\t\tawait arbiter(`\n\t\t\t\t\tSorry, your guess about ${'opponent' === si_target? `your opponent's chip`: `my bag`} was wrong.\n\t\t\t\t\t\n\t\t\t\t\tGuessing wrong is the worst because you automatically lose your wager. Consider abstaining next time if you're unsure.\n\t\t\t\t`);\n\n\t\t\t\tb_wrong = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait arbiter(`Nicely done, your guess about ${'opponent' === si_target? `your opponent's chip`: `my bag`} was correct!`);\n\t\t\t}\n\t\t}\n\n\t\t// still waiting on other player\n\t\tif(!g_game.opponent_guess) {\n\t\t\tif(!b_notif_1d_waiting) {\n\t\t\t\tb_notif_1d_waiting = true;\n\n\t\t\t\tk_countdown_1d = new Countdown({\n\t\t\t\t\teta: new EtaEstimator(g_game.guess_turn_start_block+''),\n\t\t\t\t\tkill_text: 'now submitted',\n\t\t\t\t\tterminate: force_endgame,\n\t\t\t\t});\n\n\t\t\t\tawait arbiter(`${b_wrong? 'Even though you lost': 'However'}, I am still waiting for a guess from your opponent. They have {clock_icon}{time_remaining}.`, {\n\t\t\t\t\tclock_icon: k_countdown_1d.clock,\n\t\t\t\t\ttime_remaining: k_countdown_1d.store,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// pause\n\t\t\tawait timeout(5000);\n\n\t\t\t// retry\n\t\t\treturn round_1d(await k_game.queryGameState());\n\t\t}\n\n\t\t// kill countdowns\n\t\tif(k_countdown_1d) k_countdown_1d.kill();\n\n\t\t// remove chip ui\n\t\tsi_player_hint = '' as SemanticQuality;\n\t\tvoid k_scene.animate_chip_exit();\n\n\t\t// debug\n\t\tconsole.log('round_1d#over', g_game);\n\n\t\t// game is over\n\t\tif(g_game.finished) {\n\t\t\t// opponent guess\n\t\t\tif(g_game.opponent_round_result) {\n\t\t\t\t// summarize opponent's action\n\t\t\t\tconst {\n\t\t\t\t\topponent_round_result: si_opp_round,\n\t\t\t\t\topponent_guess: si_opp_guess,\n\t\t\t\t} = g_game;\n\n\t\t\t\tconst [si_opp_guess_target, si_opp_guess_color, si_opp_guess_shape] = si_opp_guess!.split(/\\|/g);\n\t\t\t\tconst [, si_opp_correctness] = si_opp_round!.split('|');\n\n\t\t\t\tlet s_opp_summary = '';\n\t\t\t\tlet b_opp_wrong = false;\n\t\t\t\tif('abstain' === si_opp_guess_target) {\n\t\t\t\t\ts_opp_summary = 'abstained from guessing';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst si_color = si_opp_guess_color.split(':')[1] as CanonicalColor;\n\t\t\t\t\tconst si_shape = si_opp_guess_shape.split(':')[1] as CanonicalShape;\n\n\t\t\t\t\tconst s_guess = H_COLORS[si_color].labels[s_lang]+' '+H_SHAPES[si_shape].labels[s_lang];\n\t\t\t\t\t\n\t\t\t\t\tb_opp_wrong = 'correct' !== si_opp_correctness;\n\n\t\t\t\t\ts_opp_summary = `${b_opp_wrong? 'wrongly': 'correctly'} guessed that ${'bag' === si_opp_guess_target? 'my bag': 'your chip'} is the ${s_guess}`;\n\t\t\t\t}\n\n\t\t\t\tif('you lost wager' === si_outcome) {\n\t\t\t\t\tconst s_opponent_prelude = b_opp_wrong\n\t\t\t\t\t\t? `But you'll be happy to know that your opponent`\n\t\t\t\t\t\t: 'Your opponent';\n\n\t\t\t\t\tawait arbiter([\n\t\t\t\t\t\t`${b_wrong? 'As you already know': 'Bad news'}, you lost your wager. ${s_opponent_prelude} ${s_opp_summary}, so they ${b_opp_wrong? 'also lost their wager': 'won the game and gained your lost wager'}.`,\n\t\t\t\t\t]);\n\t\t\t\t\t\t\n\t\t\t\t\tvoid H_AUDIO.death.play();\n\n\t\t\t\t\tawait timeout(9e3);\n\n\t\t\t\t\treturn game_over();\n\t\t\t\t}\n\t\t\t\telse if('you won wager' === si_outcome) {\n\t\t\t\t\tconst xg_wager = BigInt(g_game.wager!);\n\t\t\t\t\tconst s_wager = uscrt_to_scrt(xg_wager);\n\t\t\t\t\tconst s_total = uscrt_to_scrt(xg_wager * 2n);\n\n\t\t\t\t\tawait arbiter(`\n\t\t\t\t\t\tCongratulations, you won! Your opponent ${s_opp_summary}, so they lost their wager.\n\t\t\t\t\t\t\n\t\t\t\t\t\tI have refunded you your original ${s_wager} plus an extra ${s_wager} from your opponent's wager for a total of ${s_total}.\n\t\t\t\t\t`);\n\n\t\t\t\t\tawait H_AUDIO.coin.play();\n\n\t\t\t\t\tawait timeout(9e3);\n\n\t\t\t\t\treturn game_over();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tawait arbiter([\n\t\t\t\t\t\t`Well done. You and your opponent have tied, so you both can claim a reward. They ${s_opp_summary}.`,\n\t\t\t\t\t]);\n\n\t\t\t\t\tif(!b_resumed) await timeout(4e3);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// early exit\n\t\t\telse {\n\t\t\t\treturn fatal(`Somebody terminated the game.`);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(3 === g_game.round) {\n\t\t\t\tvoid round_3a(g_game, b_resumed);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn fatal(`Game is not finished but round is ${g_game.round}.`);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tlet b_notif_3a_waiting = false;\n\tlet k_countdown_3a: Countdown;\n\n\tasync function round_3a(g_game: GameStateResponse, b_resumed=false): Promise<void> {\n\t\tk_countdown_3a = new Countdown({\n\t\t\teta: new EtaEstimator(g_game.pick_reward_round_start_block!+''),\n\t\t\tkill_text: 'made your decision'\n\t\t});\n\n\t\tawait H_AUDIO.trumpet_fanfare.play();\n\n\t\tawait timeout(1500);\n\n\t\tawait arbiter(`\n\t\t\tCongratulations on passing round 1 together! I have two rewards to choose from, a jackpot of SCRT, or an NFT that can be used to give you special powers next time you play.\n\n\t\t\tHowever, if you both attempt to claim the same prize, then neither of you will take it. You will only be able to take a reward if you and your opponent claim different things.\n\n\t\t\tYou have {clock_icon}{time_remaining}.\n\t\t`, {\n\t\t\tclock_icon: k_countdown_3a.clock,\n\t\t\ttime_remaining: k_countdown_3a.store,\n\t\t});\n\n\t\t// user already picked\n\t\tif(g_game.pick) {\n\t\t\treturn round_3b(g_game, true);\n\t\t}\n\n\t\t// show pick options\n\t\tk_pick.show();\n\t}\n\n\tasync function select_pick(g_evt: CustomEvent<PickOption>) {\n\t\tconst {detail:si_pick} = g_evt;\n\n\t\tk_panel.submittable(null);\n\n\t\tawait k_panel.reveal_text(`i pick the ${si_pick}`);\n\n\t\tk_panel.submittable(async() => {\n\t\t\t// disable submission\n\t\t\tk_panel.submittable(null);\n\n\t\t\t// hide pick ui\n\t\t\tk_pick.hide();\n\n\t\t\tconst g_game = await safe_exec({\n\t\t\t\tasync exec(): Promise<GameStateResponse> {\n\t\t\t\t\treturn (await k_game.pickReward(si_pick)).data.pick_reward!.game_state!\n\t\t\t\t},\n\t\t\t\tcheck(g: GameStateResponse): boolean {\n\t\t\t\t\treturn null !== g.pick;\n\t\t\t\t},\n\t\t\t\tquery_fail() {\n\t\t\t\t\tk_pick.show();\n\t\t\t\t\tvoid select_pick(g_evt);\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t\tpersist_reveal: true,\n\t\t\t});\n\n\t\t\tif(!g_game) return;\n\n\t\t\t// commit\n\t\t\tawait k_panel.commit();\n\n\t\t\t// remove submission\n\t\t\tk_panel.unsubmittable();\n\n\t\t\tround_3b(g_game);\n\t\t});\n\t}\n\t\n\tlet k_countdown_3b: Countdown;\n\tlet b_notif_3b_waiting = false;\n\t\n\tasync function round_3b(g_game: GameStateResponse, b_resumed=false): Promise<void> {\n\t\t// clear 3a\n\t\tif(k_countdown_3a) k_countdown_3a.kill();\n\n\t\t// \n\t\tconst {\n\t\t\tresult: si_outcome,\n\t\t} = g_game;\n\n\t\t// still waiting on the player\n\t\tif(!si_outcome) {\n\t\t\tif(!b_notif_3b_waiting) {\n\t\t\t\tb_notif_3b_waiting = true;\n\t\t\t\t\n\t\t\t\t// opponent's time remaining\n\t\t\t\tk_countdown_3b = new Countdown({\n\t\t\t\t\teta: new EtaEstimator(g_game.pick_reward_round_start_block+''),\n\t\t\t\t\tkill_text: 'also picked theirs',\n\t\t\t\t\tterminate: force_endgame,\n\t\t\t\t});\n\n\t\t\t\t// inform\n\t\t\t\tawait arbiter([\n\t\t\t\t\t'Your pick has been noted. Your opponent has {clock_icon}{time_remaining}.',\n\t\t\t\t], {\n\t\t\t\t\tclock_icon: k_countdown_3b.clock,\n\t\t\t\t\ttime_remaining: k_countdown_3b.store,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// pause\n\t\t\tawait timeout(5000);\n\n\t\t\t// retry\n\t\t\treturn round_3b(await k_game.queryGameState());\n\t\t}\n\t\t// results\n\t\telse {\n\t\t\tswitch(si_outcome) {\n\t\t\t\tcase 'you won jackpot': {\n\t\t\t\t\tvoid play_jackpot();\n\n\t\t\t\t\tawait arbiter(`\n\t\t\t\t\t\tFortune favors the bold! Your opponent picked the NFT, and you have successfully claimed the jackpot of ${uscrt_to_scrt(BigInt(g_game.jackpot_reward || '0'))}!\n\t\t\t\t\t`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'you won nft': {\n\t\t\t\t\tvoid play_death();\n\n\t\t\t\t\tawait arbiter(`\n\t\t\t\t\t\tWise move. While your opponent chose the short-term gain, you see the long-term potential. You have successfully claimed an NFT.\n\t\t\t\t\t`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'you lost reward': {\n\t\t\t\t\tvoid play_death();\n\n\t\t\t\t\t// both players tried to pick jackpot\n\t\t\t\t\tif('jackpot' === g_game.pick) {\n\t\t\t\t\t\tawait arbiter(`\n\t\t\t\t\t\t\tGreed has spoiled your riches. Both players attempted to claim the jackpot, so you both shall leave empty-handed.\n\t\t\t\t\t\t`);\n\t\t\t\t\t}\n\t\t\t\t\t// both tried to pick nft\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait arbiter(`\n\t\t\t\t\t\t\tAn unlucky pick. Both players attempted to claim the NFT, so you both shall leave empty-handed.\n\t\t\t\t\t\t`);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait timeout(9e3);\n\n\t\t\treturn game_over();\n\t\t}\n\n\t}\n\n\n\tfunction use_guess_in_sentence(z_opt: GuessOption | SemanticGuess): string {\n\t\tlet g_opt: GuessOption;\n\n\t\tif('string' === typeof z_opt) {\n\t\t\tg_opt = Object.fromEntries(z_opt.split(/\\|/g).map(si => si.split(':')));\n\t\t}\n\t\telse {\n\t\t\tg_opt = z_opt;\n\t\t}\n\n\t\tif('abstain' === g_opt.target) {\n\t\t\treturn `i abstain from guessing this round`;\n\t\t}\n\t\telse {\n\t\t\tlet s_guess = '';\n\t\t\tif('bag' === g_opt.target) {\n\t\t\t\ts_guess += `the arbiter's bag is: a `;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ts_guess += `my opponent's chip is: a `;\n\t\t\t}\n\n\t\t\treturn s_guess+H_COLORS[g_opt.color].labels[s_lang]+' '+H_SHAPES[g_opt.shape].labels[s_lang];\n\t\t}\n\t}\n\n\n\tasync function select_abstain() {\n\t\tprepare_guess({\n\t\t\ttarget: 'abstain',\n\t\t\tcolor: null,\n\t\t\tshape: null,\n\t\t});\n\t}\n\n\tasync function select_decision({detail:g_opt}: CustomEvent<CanonicalGuessOption>) {\n\t\tprepare_guess(g_opt);\n\t}\n\n\n\tlet b_burn_clicked = false;\n\tfunction burn() {\n\t\tif(!b_burn_clicked) {\n\t\t\tb_burn_clicked = true;\n\t\t\terr(`The button you just clicked will remove all cookies and cache that the game previously created and then disable the current UI. If you agree to this, click the burn icon again.`);\n\t\t}\n\t\telse {\n\t\t\tObject.keys(read_cookie()).forEach(si => delete_cookie(si));\n\t\t\tlocalStorage.clear();\n\t\t\tk_panel.reveal_text('');\n\t\t\treturn fatal(`Cache burned`);\n\t\t}\n\t}\n</script>\n\n<style lang=\"less\">\n\t@import './common.less';\n\n\t.container {\n\t\tposition: relative;\n\t}\n\n\t.mine {\n\t\tposition: absolute;\n\t\twidth: 400px;\n\t\ttext-align: center;\n\t\tbackground-color: fade(white, 5%);\n\t\tpadding: 7px 22px;\n\t\tfont-family: 'Roboto Mono';\n\t\tborder-radius: 5px;\n\t\tleft: calc(50% - 200px);\n\t\tbox-sizing: border-box;\n\t\ttop: 105px;\n\t\tcolor: white;\n\t\tfont-size: 15px;\n\n\t\t.chip {\n\t\t\tfont-size: 1.6em;\n\t\t\ttransform: scaleY(0.85);\n\t\t\tletter-spacing: -2.5px;\n\t\t}\n\n\t\t.hint {\n\t\t\t.hint-prefix {\n\t\t\t\tcolor: fade(white, 90%);\n\t\t\t}\n\t\t}\n\t}\n\n\t.system-controls {\n\t\tmax-width: 800px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmargin-top: 4px;\n\t\tcolor: fade(white, 70%);\n\n\t\t&>* {\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t&>*:nth-child(n+2) {\n\t\t\tmargin-left: 0.5em;\n\t\t}\n\t}\n\n\t@keyframes surprise {\n\t\t0% {\n\t\t\tvisibility: visible;\n\t\t}\n\t\t33% {\n\t\t\tvisibility: hidden;\n\t\t}\n\t\t66% {\n\t\t\tvisibility: hidden;\n\t\t}\n\t\t100% {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n\n\t.surprise {\n\t\twidth: 100%;\n\t\tmargin-top: -300px;\n\t\tposition: fixed;\n\t\tz-index: 2;\n\t\tvisibility: visible;\n\t\ttransition: opacity 3s @ease-out-expo;\n\t\topacity: 1.0;\n\t\tpointer-events: none;\n\n\t\timg {\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t&:not(.triggered) {\n\t\t\tvisibility: hidden;\n\t\t}\n\t}\n\n\t:global(.triggered) {\n\t\tanimation: surprise 100ms steps(4, jump-none) 2;\n\t}\n\n\t.gallery {\n\t\tposition: fixed;\n\t\tleft: calc(50% - 400px - 150px);\n\t\ttop: 0;\n\t\twidth: 120px;\n\t\theight: 100%;\n\t\tbackground-color: fade(white, 5%);\n\t}\n</style>\n\n<div class=\"system-controls\">\n\t<span class=\"system-controls-audio\" alt=\"audio\" on:click={() => b_muted = !b_muted}>\n\t\t<Fa icon={b_muted? faVolumeMute: faVolumeUp} />\n\t</span>\n\t<span class=\"system-controls-faucet\" alt=\"faucet\" on:click={() => window.open('https://faucet.secrettestnet.io/', '_blank')}>\n\t\t<Fa icon={faFaucet} />\n\t</span>\n\t{#if (h_cookie && Object.keys(h_cookie).length) || localStorage.length}\n\t\t<span class=\"system-controls-burn\" alt=\"destroy cookies and cache\" on:click={() => burn()} transition:fade={{duration:1e3}}>\n\t\t\t<Fa icon={faFire} />\n\t\t</span>\n\t{/if}\n</div>\n\n<MessagePanel bind:k_panel {k_killables} />\n\n\n<div class=\"surprise\" bind:this={dm_surprise}>\n\t<img src=\"/asset/smile.png\" alt=\"evil smile\" />\n</div>\n\n<div class=\"container\">\n\t<Prompt bind:k_prompt />\n\n\t<Assertion bind:k_tx on:basis={select_basis} on:quality={select_quality} on:force_reject={force_reject} />\n\n\t<Decision bind:k_decision {k_deduced} on:abstain={select_abstain} on:change={select_decision} />\n\n\t{#if si_player_hint}\n\t\t<div class=\"mine\" in:blur={{duration:2.4e3, easing:quadInOut, delay:4.5e3}} out:blur={{duration:2.4e3, easing:quadInOut}}>\n\t\t\t<div class=\"chip\">\n\t\t\t\tThe {proper(si_player_color)} {proper(si_player_shape)}\n\t\t\t</div>\n\t\t\t<div class=\"hint\">\n\t\t\t\t<span class=\"hint-prefix\">Hint:</span>\n\t\t\t\t<span class=\"hint-sentence\">\n\t\t\t\t\t{proper(use_assertion_in_sentence(`nobody_has|${si_player_hint}`))}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n\n\t<Pick bind:k_pick on:pick={select_pick} />\n\n\t<Scene bind:k_scene />\n\n\t<div class=\"gallery\" bind:this={dm_gallery}>\n\n\t</div>\n</div>\n","import App from './component/App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {},\n});\n\nexport default app;\n"],"names":["gretch","updateTween","AES","enc"],"mappings":"uvCAAA,KAAM,IAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,UCzCT,IAAc,CAC1B,GAAI,IAmBQ,GAAW,CACvB,IAAK,CACJ,MAAO,UACP,OAAQ,CACP,GAAI,QAGN,MAAO,CACN,MAAO,UACP,OAAQ,CACP,GAAI,UAGN,KAAM,CACL,MAAO,UACP,OAAQ,CACP,GAAI,SAGN,MAAO,CACN,MAAO,UACP,OAAQ,CACP,GAAI,WAOM,GAAW,OAAO,KAAK,IAGvB,GAAW,CACvB,SAAU,CACT,OAAQ,SACR,OAAQ,CACP,GAAI,aAGN,OAAQ,CACP,OAAQ,SACR,OAAQ,CACP,GAAI,WAGN,OAAQ,CACP,OAAQ,SACR,OAAQ,CACP,GAAI,WAGN,KAAM,CACL,OAAQ,SACR,OAAQ,CACP,GAAI,UAOM,GAAW,OAAO,KAAK,IAQvB,GAAU,CACtB,WAAY,CACX,SAAU,CACT,GAAI,AAAC,GAAc,cAAc,GAAK,UAGxC,OAAQ,CACP,SAAU,CACT,GAAI,AAAC,GAAc,cAAc,GAAK,WAO5B,GAAU,OAAO,KAAK,ICrGtB,GAAa,CACzB,UAAW,CAoBV,CACC,OAAQ,CACP,GAAI,+BAKP,QAAS,CACR,CACC,MAAO,IACP,SAAU,IACV,OAAQ,CACP,GAAI,SAGN,CACC,MAAO,IACP,SAAU,IACV,OAAQ,CACP,GAAI,eCnCK,GAAW,WAKX,GAAe,WAKf,GAAa,uCAKb,GAAY,wCAGZ,GAAgB,AAAC,WAA4B,EAAU,QAAU,KAAK,QAAQ,GAAG,QAAQ,SAAU,IAAI,wBAKnF,MAAM,CACtC,YAAY,EAAe,EAAsB,CAE3C,EAII,YAAsB,iBACxB,GAAG,MAAU,EAAW,SAGtB,YAAsB,aACxB,GAAG,MAAU,EAAW,eAIxB,GAAG,0BAZH,SCpCI,IAAc,IACd,GAAc,GAAK,GACnB,GAAY,GAAK,GACjB,GAAW,GAAK,GAChB,GAAY,EAAI,GAChB,GAAa,GAAK,GAClB,GAAY,IAAM,GAIlB,GAAM,OAAO,oBAYxB,EAAoC,EAAsE,OACpG,IAAI,GAAS,OAAO,CAAC,EAAO,CAAC,EAAQ,KAAa,CACxD,GAAG,EACH,EAAS,EAAQ,IACf,eAuBoB,EAAgC,OAChD,IAAI,SAAQ,AAAC,GAAe,YACvB,IAAM,MAEd,kBAIoC,OACjC,IAAI,SAAQ,IAAM,SAWb,IAAS,AAAC,GAAc,EAAE,GAAG,cAAgB,EAAE,MAAM,GAG5D,GAAc,CACnB,CAAE,GAAI,GAAW,QAAS,GAAW,KAAM,QAC3C,CAAE,GAAI,GAAY,QAAS,GAAY,KAAM,SAC7C,CAAE,GAAI,GAAW,QAAS,GAAW,KAAM,QAC3C,CAAE,GAAI,GAAU,QAAS,GAAU,KAAM,OACzC,CAAE,GAAI,GAAW,QAAS,GAAW,KAAM,QAC3C,CAAE,GAAI,GAAa,QAAS,GAAa,KAAM,UAC/C,CAAE,GAAI,GAAa,QAAS,GAAa,KAAM,WAC/C,CAAE,GAAI,EAAG,QAAS,EAAG,KAAM,yBAGE,EAAuB,EAA0B,KAAK,MAAO,EAAM,GAAI,MAAK,mBAAmB,OAAW,CAAC,QAAQ,SAAU,MAEpJ,GAAW,AADF,OAAO,IAAe,SAAW,EAAW,UAAY,GAAI,MAAK,GAAY,kBAC1D,IAAW,SAAW,EAAS,GAAI,MAAK,IAAS,UAC7E,EAAe,KAAK,IAAI,YACnB,KAAc,OACpB,GAAgB,EAAW,GAAI,MAC5B,GAAS,KAAK,MAAM,KAAK,IAAI,GAAY,EAAW,SACpD,EAAW,EAAW,QACrB,GAAW,KAAO,EAAM,OAAO,EAAW,EAAS,CAAC,EAAQ,EAAW,MAAuC,EAAW,cAK5G,CAItB,aAAc,oBAHY,GAAI,uBACL,GAAI,KAM7B,YAAY,EAAyB,EAA8B,MAC5D,GAAW,OAAO,YAAY,EAAW,eAE1C,cAAc,IAAI,GAEhB,EAGR,WAAW,EAAyB,EAA6B,MAC1D,GAAW,OAAO,WAAW,IAAM,MAEnC,WAAW,QAId,eAEE,aAAa,IAAI,GAEf,EAGR,YAAY,EAAwB,QAC5B,cAAc,QAEhB,cAAc,OAAO,GAG3B,WAAW,EAAwB,QAC3B,aAAa,QAEf,aAAa,OAAO,GAG1B,SAAgB,UACL,KAAY,MAAK,mBACrB,YAAY,YAGR,KAAY,MAAK,kBACrB,WAAW,IClHnB,kBACC,EACA,EACA,EAA+B,KACL,IAEvB,iBAAU,OAAQ,IAEjB,EAAO,SAAS,UACZ,IAAI,OAAM,4FAA4F,SAInG,IAAI,GAAI,iBAAgB,EAAS,QAAQ,iBAE5C,GAAS,UAIb,OACI,MAAMA,IAAwB,EAAQ,SACxC,GADwC,CAE5C,OAAQ,EACR,KAAM,OACN,QAAS,IACR,OAAQ,wBACS,IAAI,SAAW,OAE/B,aAGE,QAEC,sBAKP,EACA,EAA+B,KACL,OACnB,IAAmB,MAAO,EAAQ,QC/C5B,IAAuB,gDAKxB,GAA6B,mEAK7B,GAAyB,gDAKzB,GAA+B,mFAET,MAAM,CACxC,YAAY,EAAiB,OACtB,mDAAmD,MAY3D,KAAM,IAAmB,WAEnB,GAAY,GAAI,qBAiKA,CAMrB,YAAY,EAAkB,EAAoB,EAAmB,EAAuB,MACtF,UAAY,OACZ,YAAc,OACd,UAAY,GAAY,UACxB,cAAgB,OAGhB,SAAoC,EAAmB,EAAgB,EAAwB,GAAwC,MACtI,GAAW,KAAM,MAAK,UAAU,QAAQ,KAAK,YAAa,EAAO,EAAQ,EAAO,KAAK,qBAEpF,CACN,QAAS,EAAS,gBAClB,KAAM,KAAK,MAAM,GAAU,OAAO,EAAS,QAI7C,MAAmC,EAAsC,OACrE,MAAK,cACC,CACP,YAAa,CACZ,MAAO,EACP,OAAQ,KAAK,aAKT,KAAK,UAAU,MAAM,KAAK,YAAa,IAKhD,KAAM,IAAc,wBAEc,GAAS,MACpC,iBAA6C,MAC5C,GAAa,KAAM,MAAK,MAA8B,CAC3D,WAAY,QAGV,EAAW,WACP,IAAI,IAAc,EAAW,aAG7B,GAAW,WAKnB,UAAoD,OAC5C,MAAK,QAAsB,CACjC,KAAM,IACJ,CACF,OAAQ,CACP,CACC,OAAQ,QACR,MAAO,UAGT,IAAK,GAAG,IACN,CACF,CACC,MAAO,QACP,OAAQ,MAKX,gBAAgB,EAA0B,EAAwE,MAC3G,CAAC,EAAS,GAAW,EAAW,MAAM,KAEtC,EAAY,IAAA,QAAqB,CAAC,MAAM,GAAU,CAAC,MAAM,SAExD,MAAK,QAAwB,CACnC,OAAQ,IACP,OAAQ,GACL,IAEW,CACf,OAAQ,CACP,CACC,OAAQ,QACR,MAAO,UAGT,IAAK,GAAG,KAIV,YAAY,EAA8D,OAClE,MAAK,QAAuB,CAClC,MAAO,GACO,CACd,OAAQ,CACP,CACC,OAAQ,QACR,MAAO,UAGT,IAAK,GAAG,KAIV,WAAW,EAAoE,OACvE,MAAK,QAA4B,CACvC,YAAa,CACZ,OAAQ,IAEU,CACnB,OAAQ,CACP,CACC,OAAQ,OACR,MAAO,UAGT,IAAK,GAAI,IAAM,KAIjB,cAAgE,OACxD,MAAK,QAA4B,CACvC,cAAe,IACb,CACF,OAAQ,CACP,CACC,OAAQ,QACR,MAAO,UAGT,IAAK,GAAG,sBAiCyB,GAAS,MACtC,gBAAyC,MACxC,GAAa,KAAM,MAAK,MAAsB,CACnD,OAAQ,CACP,MAAO,KAAK,UAAU,oBAIrB,EAAW,WACP,IAAI,IAAc,EAAW,aAG7B,QAGF,cAAa,EAA4C,MACxD,GAAa,KAAM,MAAK,MAAuB,CACpD,iBAAkB,CACjB,SAAU,QAIT,EAAW,WACP,IAAI,IAAc,EAAW,aAG7B,SAGD,WAA6C,MAC7C,GAAS,KAAM,MAAK,yBAEhB,KAAY,GAAO,WAAW,YACjC,MAAM,MAAK,aAAa,IAoJjC,KAAM,IAAiC,CAAC,EAAqB,IAEzD,EAAa,GAAG,GAEV,KAAK,MAAQ,EAAM,YAAe,EAAI,GAKtC,KAAK,MAAQ,EAAM,YAAe,GAAK,GAiG3C,GAAqB,IAC3B,QAAQ,IAAI,mBAAmB,oCAE/B,GAAI,IAAuB,GACvB,GAAoB,GACpB,GAAY,EACZ,GAAiB,EAErB,mBAA+B,IAC3B,KAAK,MAAQ,GAAiB,EAAE,eAI7B,GAAc,GAAI,KAAI,MAChB,SAAW,aAEnB,MACG,GAAQ,KAAM,IAAyC,EAAY,MAEnE,CACL,oBAAqB,EACrB,kBAAmB,GAChB,EAAM,KAAM,OAAO,aAEX,OAAO,MACN,GAAI,MAAK,GAAgB,aACrB,KAAK,sBAKE,CASzB,YAAY,EAAgC,EAAgB,GAAoB,EAAY,GAAgB,gBAPtF,eAGF,mBACI,6BACU,QAG5B,gBAAkB,OAAO,QACzB,eAAiB,KAAK,gBAAkB,OAAO,QAC/C,iBAAmB,IAAM,EAAY,KAAM,KAAK,QAAU,KAAK,YAGrD,mBAAkC,MAC3C,GAAc,GAAI,KAAI,MAChB,SAAW,cAEjB,GAAQ,KAAM,IAAwC,EAAY,KAAM,CAC7E,OAAQ,CACP,OAAQ,KAAK,gBAAgB,WAI1B,UAAa,GAAI,MAAK,EAAM,KAAM,OAAO,MAAM,OAAO,MAAO,eAGnD,WAA4B,IACpB,GAEnB,KAAK,gBACF,MAAK,wBAGN,WAGA,GAAS,OAAO,GAAY,KAAK,oBACpC,EAAS,QAAU,QAEhB,OAA6B,KAAK,WAAa,EAE/C,EAAqB,OAAO,KAAK,eAAiB,IAElD,EAAS,KAAK,YAAc,KAAK,gBAEhB,GAEhB,KAAK,QAAU,EAAS,KAAK,MAAM,EAAqB,MAG5D,cAAsB,OAClB,MAAK,eAIT,mBAA2B,OACvB,MAAK,kBAGT,UAAmB,OACf,KAAa,KAAK,oBAGtB,QAAiB,OACP,MAAK,UAAX,KAGJ,MAAc,OACd,CAAC,KAAK,SAAW,CAAC,IAAwB,KAAK,oBAC5C,KAAK,WAGJ,KAAK,WAGT,YAAoB,OAChB,MAAK,IAAM,KAAK,YCjvBZ,IAAY,kDCqBa,GAAY,CACjD,YAAY,EAAmB,OACxB,mCAAoC,oBAIJ,GAAY,CACnD,YAAY,EAAmB,OACxB,6CAA8C,oBAIhB,GAAY,CACjD,YAAY,EAAmB,OACxB,2CAA4C,YAIT,CAyBhC,YAAY,EAAgB,kBAHd,2BACqC,UAGvD,SAAW,QAzBV,cAAuB,OACtB,CAAC,CAAC,OAAO,YAGV,aAA0B,IAC7B,OAAO,YACF,IAAI,IAAY,OAAO,YAGxB,IAAI,OAAM,oCAmBlB,SAAgB,CAEZ,KAAK,2BACA,oBAAoB,uBAAwB,KAAK,yBAIpD,YAAc,QAGd,QAAO,EAA0B,EAAoD,IACvF,KAAK,kBAAoB,QAEtB,GAAW,KAAK,UAAY,EAAQ,aAErC,WAAa,KAGd,MACG,MAAK,SAAS,yBAAyB,CAC5C,QAAS,EACT,UAAW,EAAQ,UACnB,IAAK,EAAQ,IACb,KAAM,EAAQ,KACd,MAAO,CACN,SAAU,KAEX,SAAU,IACV,cAAe,CACd,UAAW,OACX,iBAAkB,QAClB,aAAc,GAEf,aAAc,CACb,oBAAqB,SACrB,mBAAoB,YACpB,oBAAqB,gBACrB,mBAAoB,mBACpB,qBAAsB,gBACtB,oBAAqB,oBAEtB,WAAY,CACX,CACC,UAAW,OACX,iBAAkB,QAClB,aAAc,IAGhB,cAAe,CACd,CACC,UAAW,OACX,iBAAkB,QAClB,aAAc,IAGhB,aAAc,CACb,IAAK,GACL,QAAS,GACT,KAAM,IAEP,SAAU,CAAC,4BAIL,MAIJ,MACG,MAAK,SAAS,OAAO,SAEtB,QACC,IAAI,IAAiB,MAIxB,MACE,UAAY,OAAO,iBAAkB,SAErC,QACC,IAAI,IAAmB,MAI1B,MACE,UAAY,OAAO,eAAgB,SAEnC,QACC,IAAI,IAAiB,eAIvB,OAAS,KAAM,MAAK,SAAS,OAAO,QAGpC,YAAc,KAAM,MAAK,UAAU,mBAGnC,UAAY,GAAI,IACpB,GACA,KAAK,cACL,KAAK,UACL,KAAK,UACL,CACC,KAAM,CACL,OAAQ,CACP,CACC,OAAQ,QACR,MAAO,UAGT,IAAK,mBAMD,iBAAiB,uBAAwB,KAAK,mBAAqB,SAAW,CAEjF,AADW,MAAM,MAAK,SAAS,OAAO,IAChC,gBAAkB,KAAK,oBAC1B,eAKA,MAGJ,QAAgB,OACZ,MAAK,aAGT,MAAW,OACP,MAAK,UAGT,WAAmC,OAC/B,MAAK,eAGT,iBAA8B,OAC1B,MAAK,SAAS,MAGlB,gBAAwB,OACpB,MAAK,eAAe,aAGtB,kBAAyC,OAC3C,MAAK,YAAoB,WAEd,MAAK,SAAS,UAC3B,KAAK,MACL,KAAK,cACL,CACC,SAAU,KAAK,MACf,eAAgB,IAChB,SAAU,IACV,IAAK,CACJ,OAAQ,CACP,CACC,MAAO,QACP,OAAQ,MAGV,IAAK,KAEN,KAAM,CACL,CACC,KAAM,eACN,MAAO,CACN,YAAa,GACb,eAAgB,CACf,GACA,IAED,YAAa,CAAC,YAIjB,KAAM,IAEP,CACC,eAAgB,GAChB,gBAAiB,MAEhB,UAGJ,QAAQ,EAAoB,EAAmB,EAA0B,EAAgB,EAA+C,IACpI,KAAK,kBAAoB,SAExB,GAAS,MACV,OACQ,UAAU,EAAM,OAExB,GAAU,EAAO,OAAQ,MACrB,GAAS,EAAO,MACZ,aAAa,EAAO,SAAS,EAAO,uBAIxC,MAAK,UAAU,QAAQ,EAAY,EAAO,GAAI,EAAQ,EAAQ,GAAgB,QAGtF,MAAM,EAAoB,EAAmB,EAAuB,EAA4C,OAC5G,MAAK,YAAoB,KAGrB,KAAK,UAAU,mBAAmB,EAAY,EAAO,GAAY,GAAI,GAAgB,cC3OjF,IAAK,CAAmB,EAAmC,IAAmC,EAAQ,cAAc,GAEpH,GAAM,CAAmB,EAAmC,IAAqC,MAAM,UAAU,MAAM,KAAK,EAAQ,iBAAiB,GAAc,eAG/K,EACA,EAAqD,GACrD,EAAmC,GAC/B,MACE,GAAU,SAAS,cAAc,YAE7B,KAAW,KACZ,aAAa,EAAS,EAAQ,GAAS,aAGtC,KAAW,KACZ,OAAO,SAGT,gBAiB8C,OAC9C,UAAS,OAAO,MAAM,KAAK,OAAO,CAAC,EAAO,IAAa,MACvD,GAAU,EAAS,OAAO,MAAM,WAC/B,UACH,GADG,EAEL,EAAQ,IAAK,EAAQ,MAAM,GAAG,KAAK,QAEnC,gBAG4D,EAAmB,MAC5E,GAAW,QAEd,MAAY,UAAkB,SAE7B,MACA,GACO,KAAK,MAAM,EAAS,kBAGtB,MAAM,0DAA0D,SAC1D,SAGR,eAGqB,EAAqC,EAAoB,MAC/E,GAAsC,YAElC,CAAC,EAAQ,IAAY,IAAI,GAClB,MAAO,IAApB,WACU,GAAU,EAEf,IAAA,MAAoB,MAAuB,IAAvB,eACb,KAGF,GAAU,KAAK,UAAU,YAI9B,OAAS,OAAO,QAAQ,SAC7B,GAD6B,CAEhC,UAAW,GAAG,KAEb,IAAI,CAAC,CAAC,EAAQ,KAAa,GAAG,KAAU,KACxC,KAAK,kBAGsB,EAAmB,OACzC,IAAa,EAClB,GAAY,IACX,QCvIS,IAAkB,MAEzB,GAAY,IAEZ,GAAU,+BAEhB,YAAsB,EAA0B,IAC3C,GAAQ,UACJ,GAAU,EAAG,EAAU,EAAG,IAC9B,EAAW,KACP,KAAK,GAAQ,MAGb,KAAK,OAGD,GAAY,QAGjB,IAAI,EAAM,KAAK,QAGvB,YAA4B,EAA8B,EAAa,GAAe,MAC/E,CAAC,EAAY,GAAW,EAAY,MAAM,QAEjC,IAAZ,QAAwB,MACpB,GAAU,GAAS,QAAQ,SACzB,IAAM,EAAI,KAA2B,GAAM,OAE/C,MACE,GAAU,GAAS,QAAQ,SACzB,IAAM,EAAI,KAA2B,IAAM,gBAIb,EAAsC,MACvE,CAAC,EAAS,GAAW,EAAY,MAAM,WAEtC,GAAe,IAAZ,QAAqB,KAAM,KAAK,gBAGD,EAAyC,MAC5E,CAAC,EAAU,GAAc,EAAa,MAAM,WAE3C,GAAG,IAAA,aAA2B,cAAe,gBAAgB,GAAwB,aAetE,CAGtB,YAAY,EAAS,GAAiB,MAChC,WAAa,EAGnB,OAAmB,OACX,IAAI,IAAU,KAAK,YAM3B,OAAO,EAAqC,IACvC,GAAa,GAAmB,aAGrB,GAAc,OAGxB,YAAc,CAAC,EAEb,KAGR,SAAS,EAA+B,EAA0B,IAE9D,EAAW,MACP,GAAS,GAAmB,EAAc,IAG1C,EAAS,CAAC,GAAmB,QAG9B,YAAe,GAAU,EAAK,YAI9B,YAAc,CAAC,GAAmB,SAGjC,MAGR,SAAkB,MACX,GAAS,KAAK,YAAc,EAC5B,EAAS,KAAK,WAAa,UAE1B,CACN,MAAM,GAAa,KACnB,MAAM,GAAa,MAClB,KAAK;AAAA,GAGR,UAAU,EAAoD,IACzD,GAAW,IAAA,MAAqB,KAAK,YAAc,EAAG,KAAK,WAAa,SAEtE,GAA6B,GAC7B,EAA6B,UAC3B,GAAU,EAAG,EAAQ,EAAG,IAC5B,EAAW,KACV,EAAU,IACH,KAAK,GAAS,MAGd,KAAK,GAAS,EAAQ,OAItB,GAAY,OAIlB,GAAgC,YAC5B,KAAY,YACX,KAAY,KACf,KAAK,CACV,OAAQ,EACR,MAAO,EACP,MAAO,UAKH,8ICyrBJ,0FALF,kEAKE,wDAHS,SAAS,oEACR,SAAS,oPASwB,wCAIP,wBAGjC,MAAkB,gHANgD,6EAIrC,sJAJW,KAAW,QAAU,sWAHnE,SACC,OACC,2BACA,qBAED,OACC,2BACA,kFAJsE,qCAA1B,KAAW,QAAU,yBAIhC,MAE7B,MAAkB,mMATgB,SAAS,IAAK,OAAO,mGAArB,SAAS,IAAK,OAAO,gOAanC,MAAkB,gBACpB,MAAkB,kBAElB,MAAkB,kCALF,6HAEO,8hBAH7C,SACC,2BACA,OACC,4BACA,qBACA,cACA,4DAHsB,MAAkB,wCACpB,MAAkB,wCAElB,MAAkB,6EANM,SAAS,4EAAT,SAAS,uPAqBhB,sTANxB,2CAFjB,SAQC,2BACA,uDARU,WAAA,8DAGK,kCACA,2EAHC,uYApCZ,cAUD,cAuBA,qGAnCe,cAAW,WAAQ,gmBALxC,SACC,OACC,gCAED,OACC,mCACA,qIAD8B,4BAAQ,OAEjC,yGAUD,uGAuBA,idAryBJ,SAAU,GACP,GAAW,WAGX,GAGJ,EAAQ,UAAU,GAAc,EAAS,QAG5B,IACZ,cACA,YACA,UACA,WACA,WACA,YACA,QACA,SACA,QACA,UACA,UACA,eACA,sBAMU,iBAKP,EACA,EAEA,EAKA,EAAW,SAEX,EAAe,GAKf,EAAS,GAKT,EAAgB,GAChB,EAAa,GACb,EAAa,GAEb,EAAkB,GAKlB,EAAmB,GACnB,EAAiC,KAEjC,EAEA,EAAS,EAET,EAAa,GACb,EAAc,oBAES,EAAkB,EAAY,GAAI,GAAS,EAAG,GAAS,IAE9E,SACF,EAAY,IACZ,EAAY,YAAY,GACxB,EAAS,EACT,EAAa,OAId,EAAe,IAEX,IACH,GAAc,MAIX,MAAa,EAEb,GAAa,GAAc,SAEzB,IAAU,EAAO,OACjB,GAAY,EAAS,UAEvB,IAAW,OACT,GAAS,KAAK,IAAI,GAAS,KAC7B,EAAO,MAAc,EAAS,IADW,WAIvC,IAAY,EAAI,SACd,IAAS,GAAS,GAAS,GAAU,YAC5C,EAAS,EAAO,MAAM,YAChB,GAAQ,EAAc,IAGzB,IAAW,aAGZ,SAAgB,GAAQ,IAGxB,IAAW,eAER,IAAgB,GAAa,GAAG,SAAS,KAAM,gBAEjD,WAEI,IAAO,GAAU,GAAO,GAAW,QAC1C,GAAc,UAAU,OAAO,iBACzB,GAAQ,IAGX,IAAW,IAEd,IAAc,UAAU,IAAI,gBAE5B,GAAU,EAAS,UAEb,GAAQ,GAGX,IAAW,iBAKV,IAAU,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,oBAC/C,GAAY,GACZ,EAAa,EACb,EAAS,oBACW,MACpB,MACC,AAAM,IAAN,MAOO,oBACR,EAAY,IAAI,EAAO,KAAU,KACjC,GAAU,EAAO,QARlB,UAEM,GAAY,OACZ,GAAY,EAAU,IAAI,EAAO,EAAO,OAAO,GAAG,IAAK,GAAI,EAAG,QACpE,EAAS,GAOT,KACA,EAAa,EAAY,YAAY,GAAM,UAGrC,GAAa,SACpB,EAAY,IACZ,EAAY,YAAY,GACxB,EAAS,EACT,EAAa,2BAKR,GAAY,OAGf,IAAS,oBAEU,MAEnB,eAGI,QACA,GAAQ,UAIT,GAAY,EAAM,YAGlB,GAAQ,KAGR,GAAU,GAAG,OAClB,OACC,iBACI,EAAM,aACT,KAAK,YAEF,EAAM,YACR,EAAM,KAAK,QAAS,UAChB,UAGF,IAAS,YACF,EAAE,GAAQ,EAAE,GAAW,MAAM,KAAU,IAAO,SAAS,6BAE3D,IAAW,EAAU,IAGvB,GASA,MAAW,IAAO,GAAQ,KAAK,GAAO,MAAM,GAAQ,KAGpD,aAAoB,SACtB,GAAQ,KAAK,IAIb,GAAQ,KAAK,GAAG,QACf,oBAAqB,MAAa,SAjBpC,SAAQ,yBAAyB,6CAGjC,GAAQ,KAAK,GAAO,MAAM,GAAQ,GAAO,GAAO,UAoBjD,GAAS,GAAO,GAAO,aAIrB,MAAW,GAAO,QAAQ,GAAQ,KAAK,GAAO,MAAM,KAGvD,GAAQ,KAAK,GAAG,OACf,MAAO,aAID,iBAKE,GAAW,KAAa,IAAI,GAEnC,MAAuB,IAAiB,WAAxC,YAED,GAAiB,UAAW,UAEtB,IAAc,GAAI,kBAAwB,MAAa,eAGnD,MAAW,IACpB,GAAQ,UAAY,UAMlB,IAAa,GAAG,OACrB,MAAO,YAGR,EAAgB,OAAO,IACvB,EAAgB,OAAO,QAEvB,EAAW,UAAY,EAAW,qBAE5B,IAAgB,EAAgB,wBAChC,GAAc,GAAQ,wBAEtB,GAAQ,GAAY,IAAM,GAAc,IACxC,GAAW,GAAY,OAAS,EAEtC,OAAO,OAAO,GAAW,OACxB,OAAQ,OACR,UAAW,OACX,KAAM,MACN,MAAO,cAGF,GAAQ,YAEN,IAAM,EAAG,GAAM,GAAU,IAAO,EACvC,OAAO,OAAO,GAAW,OACxB,OAAQ,GAAQ,OAChB,UAAW,GAAW,cAEjB,GAAQ,KAGf,GAAW,cAGN,IAAmB,GAAsB,MAAM,QAAQ,GAAS,EAAQ,EAAO,OAAO,MAAM,MAAM,IAAI,GAAK,EAAE,0BAE5F,EAAmB,eAC5B,KACZ,KAAM,UACN,SAAU,gBACV,KAAM,GAAgB,GACtB,QAAS,0BAIa,EAAkB,eAC5B,KACZ,KAAM,WACN,SAAU,iBACV,KAAM,EACN,QAAS,0BAIS,EAA2B,eACjC,KACZ,WAAY,IACZ,SAAU,aACV,KAAM,GAAgB,GACtB,QAAS,4BAWV,GAAK,GAAe,OAEpB,EAAS,sBAGW,EAAmB,EAAQ,GAAO,SAChD,KACL,KAAM,SACN,SAAU,qBACV,KAAM,GAAgB,GACtB,QAAS,SAGP,GACF,GAAa,sBAIK,EAAmB,QAChC,KACL,KAAM,SACN,SAAU,oBACV,KAAM,GAAgB,GACtB,QAAS,oBAIK,GACZ,EAAO,UACT,EAAgB,QAChB,EAAa,EAAO,UACpB,EAAa,EAAO,MAEpB,EAAkB,OAAiB,KAAe,QAGlD,EAAgB,OAId,mBACY,EAAwB,QACjC,IAAU,EAAS,eAAe,QAExC,IAAqB,EAAY,WAAY,SAAU,GAAQ,MAAM,EAAG,cAAc,QAAS,GAAQ,eAGpG,IAAkB,sBAErB,cAEM,GAAS,KAAK,MACjB,EAAS,GAAkB,WACvB,2CACA,GAAQ,WACR,KAEN,GAAkB,MAIhB,gBACiB,EAAiC,UACrD,EAAmB,IAGhB,SAEI,IAAS,GAAQ,wBAGvB,OAAO,OAAO,GAAQ,OACrB,SAAU,QACV,OAAQ,GAAO,QACf,QAAS,GAAO,eAIlB,EAAe,IAEZ,GACF,gBAEI,IAAW,GAAQ,MAAM,UAC3B,OAAO,OAAO,GAAQ,OACrB,SAAU,GACV,IAAK,GACL,KAAM,SAIR,EAAe,IACb,SAOJ,EAAY,qBAIZ,EAAmB,QACnB,EAAY,MAGb,QACC,EAAS,iBAAiB,eACzB,YAUE,6BAGG,GAAQ,KACd,GAAU,UAAU,IAAI,kCAIxB,GAAU,MAAM,UAAY,aACtB,GAAQ,KACd,GAAU,UAAU,OAAO,cACrB,GAAQ,UACd,GAAU,MAAM,UAAY,qNA4Se,uDADR,wDAKM,wDAG5B,2DAsCD,2DA/CoB,s8FC3pBzB,oCAAL,oOAAK,6BAAL,gIAAA,wEAAA,sQAMC,MAAM,yIALmB,MAAM,mCAAY,MAAM,KAAO,wCAA1D,wGAKE,MAAM,kDALmB,MAAM,yDAAY,MAAM,KAAO,qEAE/C,SAAS,KAAO,OAAO,mEACtB,SAAS,KAAO,OAAO,qMALhC,yGAD6B,wKAAnC,gDACM,+HAD6B,+PArJrB,IACZ,KACA,OACA,MACA,UAOK,GACL,IAAK,MACL,MAAO,OAGF,GACL,IAAK,KACL,MAAO,MAGF,GACL,EACA,GAGK,SAEA,EAAU,IACf,QAGG,MAEA,EAAY,GAGZ,EAAY,GAEZ,EAAqC,aAEzB,GACf,EAAU,OAEV,EAAY,eAGM,EAAmB,EAA4D,aACtF,SAAS,IACnB,EAAa,IACZ,EAAS,EAAY,OAErB,EAAY,SAGb,EAAS,OAET,EAAY,IAEZ,wBACC,EAAY,2BAOP,GAAgB,GAAgB,EAAW,KACjD,EAAU,AAAU,EAAM,MAAhB,4BAKJ,IAAc,eAGV,EAAQ,YACZ,KACN,IAAK,KACL,MAAO,gBAIK,SACN,GAAe,GAAO,GAAS,EAAQ,QAC7C,IAAK,GACF,KACE,EAAQ,KACb,EAAO,EAAM,yKAiEI,EAAO,sqCCqHjB,kCAAL,qCASI,oCAAL,qCAmBK,oCAAL,0eA9BH,SACC,2DASD,6DAmBA,yFA3BS,2BAAL,+HAAA,mBASI,6BAAL,+HAAA,mBAmBK,6BAAL,+HAAA,kDA9BqC,SAAS,KAAM,OAAO,2CAUZ,MAAM,KAAM,SAAS,KAAM,OAAO,2CAmBlC,MAAM,KAAM,SAAS,KAAM,OAAO,wDA7B5C,SAAS,KAAM,OAAO,iCAUZ,MAAM,KAAM,SAAS,KAAM,OAAO,iCAmBlC,MAAM,KAAM,SAAS,KAAM,OAAO,iRAzB/E,GAAO,GAAQ,OAAU,SAAS,MAAU,0HADgB,oBAAyB,QAAa,0CAApG,0CAAmC,kDACjC,GAAO,GAAQ,OAAU,SAAS,MAAU,oCADyC,QAAa,wbAkB1F,GAAO,GAAS,OAAU,OAAO,gJALxB,MAAM,cAAY,qDACb,+BAEI,UAAe,0CAJzC,SAMC,iCAHU,kDAGH,GAAO,GAAS,OAAU,OAAO,mDAFf,UAAe,oiBALlC,GAAS,MAAM,4WADjB,qCAAL,8KADH,wFACQ,8BAAL,4HAAA,+bA2BQ,GAAS,OAAU,gJALV,MAAM,eAAa,MAAM,mDACpB,+BAEI,UAAe,0CAJzC,SAMC,iCAHU,qEACe,UAAe,oiBALlC,GAAS,MAAM,4WADjB,qCAAL,8KADH,wFACQ,8BAAL,4HAAA,8LAjCD,8OAAA,8WA9PS,IACZ,OACA,QAGK,EAAW,KAEX,EAAU,GAAW,WAEvB,GAAU,EAAO,gDAEjB,GAAY,GAEZ,EAAsC,oBAEtB,GACnB,EAAiB,GAAY,GAE1B,QACF,EAAkB,GAElB,EAAS,QAAS,QAGnB,EAAY,qBAIZ,EAAY,OAGT,GAAkC,GAAQ,GAC1C,EAAqC,UAEnC,IAAQ,EAAuB,IAAoB,EAAyB,iBAAiB,MAAY,qBAAqB,gBAE9G,QACf,GAAgB,EAAK,EAAQ,OAAS,YAEzC,GAAkB,IAAkB,GACtC,EAAS,gBAAiB,EAAe,eAI1C,EAAkB,GAElB,EAAS,QAAS,cAGK,OACvB,EAAa,EAAK,EAAQ,OAAS,YACnC,EAAS,UAAW,QAGf,MAGH,IAAK,EACL,IAAK,QAGL,IAAK,EACL,IAAK,UAKL,IAAK,EACL,IAAK,QAGL,IAAK,EACL,IAAK,6pCCnGY,EAAoB,EAAuB,MACzD,GAAS,GAAI,IAAiB,GAAI,GAAI,IAAK,IAAK,GAEhD,EAAc,CACnB,GAAI,IAAiB,CACpB,MAAO,YAOR,GAAI,IAAkB,CACrB,IAAK,EACL,QAAS,EACT,UAAY,KAAK,SAAW,GAAO,KAEpC,GAAI,IAAiB,CACpB,IAAK,WAKA,GAAW,GAAI,WACZ,GAAI,EAAG,EAAI,GAAI,IAAK,IACxB,MAAW,GAAK,GAChB,EAAQ,EAAM,KAAK,GAAK,EACxB,EAAI,GAAK,KAAK,IAAI,GAClB,EAAI,GAAK,KAAK,IAAI,GAClB,GAAK,IACC,OAAO,EAAG,KAEV,OAAO,EAAG,SAId,IAAI,IAAK,EAAQ,IC/C1B,KAAM,IAAO,KAAK,GACZ,GAAQ,GAAO,EACf,GAAW,KAAK,KAAK,eAEA,EAAiC,EAAkB,EAAgB,EAA0B,EAAgC,MAIjJ,GAAW,GAAI,eAEd,OACD,WAAY,MAEV,GAAU,KAAK,KAAM,EAAU,IAG/B,EAAS,GAAW,GAAM,EAG1B,EAAS,EAAU,GAAY,EAE/B,EAAc,EAAQ,IAGnB,OAAO,EAAU,KAAqB,GAAS,KAG/C,OAAO,EAAW,EAAU,EAAG,EAAW,EAAQ,KAGlD,OAAO,EAAW,EAAU,EAAG,EAAW,EAAQ,aAIvD,SAAU,MAER,GAAU,KAAK,KAAK,GAGpB,EAAW,EAAY,EAAU,KAG9B,OAAO,EAAU,KACjB,OAAO,EAAW,EAAS,KAC3B,OAAO,EAAW,EAAS,EAAW,KACtC,OAAO,EAAU,EAAW,aAIjC,SAAU,MACR,GAAY,KAAK,KAAK,EAAS,MAE5B,QAAQ,EAAU,EAAU,EAAW,EAAW,EAAG,EAAG,cAI7D,OAAQ,MACN,GAAS,GAAO,EAEhB,EAAU,KAAK,KAAM,EAAI,KAAe,KAAK,IAAI,QAEnD,GAAW,KAAO,IAEb,OAAO,EAAU,EAAW,UAC7B,GAAQ,EAAG,EAAQ,EAAG,IAAW,MAClC,GAAW,MAAuB,EAAK,GAAK,KAEzC,OACR,EAAY,EAAW,KAAK,IAAI,GAChC,EAAY,EAAW,KAAK,IAAI,OAGrB,WAMN,cAEH,UAAY,GAAS,GAAU,QAC/B,KAAK,KAEL,YAAc,IACd,YAAc,UACd,UAAY,KAAK,MAAM,KAAK,KAAK,GAAU,MAC3C,OAAO,+RC8Rd,mOAjUO,GAAO,KAAK,GACZ,EAAQ,EAAO,EACf,EAAW,KAAK,KAAK,GAEd,GACZ,qBACA,wBAGG,oBAEyB,QACtB,MAEA,KAAe,aAEX,KAAY,SACf,GAAU,EAAS,GACzB,EAAW,YAAsB,SAAS,IACzC,EAAS,KAAK,EAAU,IACvB,EAAQ,aAKJ,cAIiB,QAElB,GAAS,EAAM,MAGf,EAAY,GAAG,UACpB,MAAO,EAAO,MACd,OAAQ,EAAO,SAIV,EAAQ,EAAU,WAAW,aAG3B,EAAW,EAAO,MAGvB,GAIA,EAEA,EACA,OAGE,MAAc,eAGC,EAA0B,SAEvC,EAAW,EAAO,GAAU,EAAgB,EAAW,MAExD,EAAW,EAAO,MACN,EAAO,OAGzB,EAAM,UAAU,EAAQ,EAAG,QAErB,GAAc,EAAW,EAMzB,EAAS,KAAK,IAAI,EAAc,GAAI,GAAI,GAAK,EAGnD,GAAW,EAAO,EAAY,EAAQ,EAAU,GAGhD,KAAc,IAAc,GAG5B,EAAU,GAAK,EAAS,GAKxB,EAAQ,IAAI,oBAGqB,EAA0B,GAC3D,EAAY,EAAU,GAGtB,EAAQ,SAAS,EAAI,IAGrB,EAAQ,QAAU,GAWlB,GATwB,OAAU,sBAChC,MAAO,IAAQ,EAAG,EAAG,GAAI,KACzB,OAAO,GAAO,MAAM,KACpB,SAAU,IAEV,EAAQ,SAAS,KAAK,EAAO,GAC7B,EAAQ,SAAS,KAAK,EAAO,KAGnB,QAUZ,GAPsB,KAAO,EAAG,MAC9B,IAAI,EAAG,GAAI,KACX,OAAO,GAAO,KAAK,KACnB,WAAW,EAAE,MACb,EAAQ,SAAS,KAAK,KAGd,QASV,GAPwB,OAAU,IAAM,EAAG,EAAG,IAC5C,MAAO,IAAM,EAAG,EAAO,EAAI,EAAO,EAAM,EAAO,GAAK,KACpD,OAAO,GAAO,MAAM,KACpB,SAAU,IACV,EAAQ,SAAS,IAAI,EAAO,EAAG,EAAO,EAAG,EAAO,KAGtC,2BAcZ,GATwB,OAAU,IAAQ,EAAG,EAAG,IAC9C,MAAO,qBAA6B,KACpC,OAAO,GAAO,MAAM,KACpB,SAAU,IAEV,EAAQ,SAAS,KAAK,EAAO,GAC7B,EAAQ,SAAS,KAAK,EAAO,KAGnB,QAUZ,GAPsB,KAAO,EAAG,IAC9B,IAAI,EAAG,KAAM,KACb,OAAO,GAAO,KAAK,KACnB,WAAW,EAAE,MACb,EAAQ,SAAS,KAAK,KAGd,QASV,GAPwB,OAAU,IAAM,EAAG,EAAO,EAAI,EAAO,EAAM,EAAO,IACxE,MAAO,IAAM,EAAG,EAAG,GAAI,KACvB,OAAO,GAAO,MAAM,KACpB,SAAU,IACV,EAAQ,SAAS,IAAI,EAAO,EAAG,EAAO,EAAG,EAAO,KAGtC,aAEN,GAAQ,KAGd,EAAQ,QAAU,GAGnB,aACC,OAAmB,IAClB,KAAM,kBACN,cAAe,+BACf,OAAQ,sBAIT,EAAU,EAAW,KA2BrB,EAAU,EAAW,cAGb,EAAW,GAAO,GAAU,EAAgB,EAAW,QAExD,GAAO,EAAU,MACjB,GAAO,EAAU,OAEjB,GAAS,KAAK,SAAW,EAO/B,GAAM,YAGA,IAAY,GAAO,EACnB,GAAY,GAAO,EAGzB,GAAM,UAAU,GAAW,IAC3B,GAAM,OAAO,IAGb,GAAM,MAAM,KAAK,MAAO,KAAK,OAG7B,GAAM,UAAU,GAAS,IAAY,IAGrC,GAAM,UAaN,KAAc,IAAc,QAGvB,MAAiB,KACtB,UAAW,KAGN,EAAS,GAAG,SAAS,KAAM,cAAc,wBACzC,EAAW,OAAO,WAClB,EAAY,KAAK,IAAI,IAAK,KAAK,IAAI,IAAK,OAAO,YAAc,EAAO,YAC1E,EAAW,QAAQ,EAAU,IAGzB,SAEJ,EAAa,YAAY,EAAW,iBAE9B,GAAY,EAAW,EAGvB,KAAe,IAAkB,GAAI,EAAW,EAAG,KAExD,EAAS,SAAS,IAAI,EAAG,EAAG,KAC5B,EAAS,OAAO,EAAG,EAAG,SAchB,MAAiB,IAAa,SACpC,EAAQ,IAAI,SAKN,MAAc,IACpB,EAAQ,SAAS,IAAI,EAAG,IAAK,IAC7B,EAAQ,MAAQ,IAEhB,EAAQ,MAAQ,KAAK,GAAK,EAC1B,EAAQ,SAAW,GAEnB,EAAQ,IAAI,gBAOZ,EAAW,OAAO,EAAS,GAG5B,EAAW,sBACV,IACAC,yMASa,ysCCnJX,MAAM,6CAHG,MAAM,+SATC,CAAM,QAAN,EAAa,UAAW,QAAK,MAAQ,IAAM,MAAO,UAAW,wCACpE,sBAEK,QAAW,uBACT,AAAiB,OAAjB,yBACN,AAAW,OAAX,uBACI,AAAe,OAAf,gDAPjB,SASC,2BAGA,4GAFW,MAAM,kCAGf,MAAM,kDAZU,CAAM,QAAN,EAAa,UAAW,QAAK,MAAQ,IAAM,MAAO,UAAW,yDACpE,sDAEK,QAAW,mCACT,AAAiB,OAAjB,qCACN,AAAW,OAAX,mCACI,AAAe,OAAf,mSARX,oCAAL,yLADqD,wKAAxD,gGACQ,6BAAL,wHAAA,0DADqD,4CACrD,6TAhLI,IACL,QACC,MAAO,SACP,KAAM,IAEP,OACC,MAAO,QACP,KAAM,IAEP,UACC,MAAO,WACP,KAAM,QAIJ,GAAS,GAAI,IAIN,oBACA,mBACA,mBAiBE,IACZ,MAAM,SACE,GAAQ,QAIb,GAAiD,GAAK,EAEtD,EAAoB,SAEpB,OAEE,GAAW,gBAEG,GAEhB,IAAc,QAGjB,EAAY,GAGT,EACF,EAAW,GACP,AAAY,IAAZ,QACK,EAAY,OAAO,GAEnB,AAAe,IAAf,WACA,EAAY,SAAS,EAAc,IAGpC,EAIR,EAAW,GACP,AAAY,IAAZ,QACK,EAAY,SAAS,EAAc,IAEnC,AAAe,IAAf,WACA,EAAY,SAAS,EAAc,IAGpC,EAKT,EAAS,SAAU,sNA8FF,EAAW,6CALC,8yBAvJ1B,OACF,EAAS,IACR,QACC,MAAO,GAAO,GACd,MACC,WAAY,GACZ,KAAM,GACN,SAAU,IACR,yBAfJ,EAAU,EAAO,0nEC6SR,oCAAL,qCAkBK,oCAAL,2eA7ByC,OAAkB,uwBALwB,0CAA1F,SAIC,OACC,OACC,cAID,OACC,cAGA,OACC,yDAaF,OACC,cAGA,OACC,mJA5B4C,OAAkB,eAWtD,6BAAL,kIAAA,mBAkBK,6BAAL,kIAAA,iCAlCmF,gDAAlD,SAAS,KAAM,OAAO,wDAAtB,SAAS,KAAM,OAAO,wNAsBhD,KAAY,sKAHH,QAAU,0CAF3B,+FAKQ,KAAY,wCAHH,QAAU,uLAqBnB,KAAY,uRAHH,QAAU,0CAF3B,yBAMC,oFADO,KAAY,uCAHH,QAAU,uLAtC7B,8OAAA,ySA/UH,YAAY,EAAgC,GAC3C,KAAK,UAAY,EACjB,KAAK,UAAY,KAGd,eACI,MAAK,aAGT,eACI,MAAK,0FA+CD,IACZ,OACA,YAGU,oBAEL,GAAW,KAEX,EAAU,GAAW,WAQvB,GAAU,EAAO,SAEjB,EAAY,0BAGf,EAAY,qBAIZ,EAAY,SAGP,IACL,OAAQ,UACR,MAAO,KACP,MAAO,SAGJ,GAAqC,gBAEjB,EAA4B,GAChD,IAAmB,QACrB,EAAiB,GAEjB,EAAS,SAAU,qBAKpB,EAAiB,GAEjB,EAAS,gBAIJ,GAAY,GAAG,UACpB,MAAO,IACP,OAAQ,MAIH,EAAQ,EAAU,WAAW,iBAEd,GACpB,EAAM,UAAU,EAAG,EAAG,IAAK,KAE3B,EAAM,SACN,EAAM,YAAc,GACpB,GAAW,EAAO,GAAI,KAAK,IAAI,GAAI,GAAI,EAAM,MAAQ,EAAM,YACrD,GAAS,EAAU,kBAElB,IAAG,WAGT,GAAG,QACF,MAAO,0BAEJ,GAAO,EAAM,UAAU,GAAO,EAAM,WAExC,GAAG,OACF,IAAK,MAEJ,0LA8MuB,SAcJ,EAAe,MAAO,QAkBtB,EAAe,WAAY,4sBAlT/C,EAAa,EAAU,UAAU,4BACjC,EAAa,EAAU,UAAU,iCAGjC,EAAiB,2jCC0DhB,MAAM,yCAHG,MAAM,6SAFO,CAAM,QAAN,EAAa,UAAW,QAAK,MAAQ,IAAM,MAAO,UAAW,6CAAuB,qBAA6D,OAAW,yCAArL,SACC,2BAGA,8GAJyK,OAAW,iSAD/K,GAAI,qCAAT,yLADgC,IAAM,4KAAzC,+FACQ,GAAI,8BAAT,wHAAA,wEAAA,wTA/FI,IACL,KACC,MAAO,MACP,KAAM,KAIF,EAAU,GAAI,GAAQ,UAExB,GAAiD,GAAK,GAE/C,cAAsB,UAE7B,OAEE,GAAW,gBAEG,GAEhB,IAAgB,QAGnB,EAAc,GAGd,EAAS,SAAU,yLAuEmH,EAAW,6CAFlF,ukCCIxD,GAAI,qCAAT,wLADiE,yCAApE,qFACQ,GAAI,8BAAT,wHAAA,2DADiE,4CACjE,2CADiC,SAAS,kHAAT,SAAS,wMAIxC,MAAO,uBAMP,MAAO,+CAHE,MAAO,uZALe,qBAAwD,OAAqB,yCAA/G,SACC,qBAGA,2BAGA,8GAPyF,OAAqB,6RAH7G,8OAAA,sWAxFE,IACL,SACC,KAAM,GACN,MAAO,UACP,YAAa,2FAEd,KACC,KAAM,GACN,MAAO,eACP,YAAa,0IAOX,GAAY,GAEZ,EAAsC,UAE7B,IACZ,OACA,yBAIA,EAAY,qBAIZ,EAAY,SAGP,GAAW,gBAGH,OACb,EAAmB,GACnB,EAAS,OAAQ,mKAqD2C,EAAK,otBCzHhC,UAI3B,UAAS,EAAyB,QAChC,GAAM,aAAa,OAAQ,GAAO,EAAG,IAAS,MAC/C,GAAS,aAAa,IAAI,MAC7B,GAAU,EAAO,KAAK,SACjB,SAIF,GAGR,YAAY,EAAsB,EAAkB,EAAwB,MACrE,GAAc,OAAO,KAAK,KAAK,UAAU,GAAa,UACvD,cAAgB,GAAG,KAAgB,YACtB,EAGnB,IAAI,EAAgB,EAAoB,IACnC,MACA,GACQ,KAAK,UAAU,cAGpB,IAAI,OAAM,gCAGb,MACA,GACWC,eAAI,QAAQ,EAAU,SAAiB,sBAG/C,IAAI,OAAM,mCAGV,cAAa,QAAQ,GAAG,KAAK,iBAAiB,IAAU,GAGhE,IAAyB,EAA0B,MAC5C,GAAc,aAAa,QAAQ,GAAG,KAAK,iBAAiB,QAE/D,IAAA,WAA6B,MAE5B,MACA,GACQA,eAAI,QAAQ,EAAa,SAAiB,SAASC,eAAI,iBAG5D,IAAI,OAAM,oDAGb,MACA,GACO,KAAK,MAAM,cAGf,IAAI,OAAM,wCAGV,GAGR,OAAQ,MACD,GAAY,GAAG,KAAK,wBAClB,GAAM,aAAa,OAAQ,GAAO,EAAG,IAAS,MAC/C,GAAS,aAAa,IAAI,GAC7B,kBAAQ,WAAW,kBACR,WAAW,IAK3B,OAAO,EAAgB,OACf,cAAa,WAAW,GAAG,KAAK,iBAAiB,6FC+C3C,kJADX,oEACW,qRAFP,kGAMH,4BAKF,2LAb2C,uRAD9C,SACC,OACC,6BAMC,qBAKF,kFAVO,mHAMH,oCARyC,sBAa3C,qDAd+D,MAAM,KAAO,8DAAb,MAAM,KAAO,uPAjGxE,GAAW,SAEN,eACA,YACA,YAWP,EAAU,aAiBV,eAGH,EAAS,cACR,SAAU,EACV,IAAK,mMA4D0B,imBA3F9B,EAAQ,iBAAO,iBAAiB,+BAEhC,EAAQ,kBAAO,sBACX,iBAAO;;;IAIX,OAAO,MAAM,QAAQ,IAAI,GAAK,EAAE,QAAQ,KAAK,4BAIxC,iBAAO,iBACR,cACJ,EAAS,QACT,EAAU,mBAIN,iBACJ,EAAS,QACT,EAAU,6rDC0mFD,sMADX,sIAA6G,SAAS,4EAAT,SAAS,0QAuB/G,GAAO,eAAmB,GAAO,uBAKpC,GAAO,iBAAwC,sEANjC,oaADlB,SACC,0CAGA,OACC,cACA,+DAJK,GAAO,0CAAmB,GAAO,2CAKpC,GAAO,iBAAwC,yEAPvB,SAAS,KAAO,OAAO,GAAW,MAAM,qEAAmB,SAAS,KAAO,OAAO,kMAtBzG,MAAY,OAAO,KAAK,MAAU,QAAW,aAAa,8FALrD,KAAS,GAAc,wCAGvB,+cAmBoB,uBAA0B,4BAAiC,kLAExC,sBAA2B,cAExE,8JAcsB,spCA1C5B,UACC,2BAGA,2EAaD,UACC,0BAGD,wIAyBC,iJA5CW,KAAS,GAAc,0BAK5B,MAAY,OAAO,KAAK,MAAU,QAAW,aAAa,wbAqB3D,s5BAniFkC,SAC/B,2EAGF,IACL,WAAY,GACZ,SAAU,GACV,UAAW,GACX,UAAW,GACX,KAAM,GACN,IAAK,GACL,YAAa,GACb,YAAa,OAMV,GAMA,WAKG,MAAoB,MAAK,OAAO,UAAU,UAAU,SAGvD,IAAiB,KACnB,GAAS,gBAQJ,GAAU,GAAS,MAGzB,EAAQ,UAAU,GAAc,EAAS,GAGzC,GAAW,QACV,SAAU,OAOR,GAKA,EAKA,EAKA,EAKA,EAKA,EAKA,OAME,MAAkB,OASpB,GACA,EACA,EACA,EAKA,KAAe,IACf,EAA0C,GAC1C,EAA0C,cAK1B,MACf,GAAa,OACX,GAAc,GACd,GAAc,EAAc,IAC5B,EAAW,OAAO,iBACvB,GAAc,GACX,GAAc,EAChB,OAAO,cAAc,GAGrB,EAAQ,OAAS,EAAI,GAAQ,IAE5B,QAMG,MAAoB,OAC1B,EAAc,IAAM,0BAEd,MAAkB,OACxB,EAAY,IAAM,oCAGY,YAEpB,KAAS,IAAW,GAC1B,EAAM,YAAa,GAAQ,EAAM,YAC9B,GAAQ,YAAY,EAAM,OAAO,GAAS,EAAM,SAAU,EAAM,+BAMjE,GAAQ,UAGR,GAAgB,kBAGhB,GAAQ,WAGR,GAAQ,YAAY,SAGpB,GAAQ,8BAKR,GAAQ,kCAGR,GAAQ,UAGR,GAAQ,YAAY,oCAKpB,GAAS,GAAG,UAGlB,OAAO,SAAS,YAGL,kCAGS,EAAgB,GAEpC,SAAY,UAGZ,EAAQ,YAAY,SAGd,IAAI,EAAQ,GAAM,GAGjB,uBAGgB,MAEnB,GAAa,GACb,GACH,GAAa,yCACP,GAAQ,YAAY,IAG3B,GAAQ,gBAAgB,OAEpB,GACE,EAAQ,YAAY,EAAW,KAAM,KAG3C,GAAY,UAAU,IAAI,kBACpB,GAAQ,UACd,GAAY,MAAM,QAAU,UAG5B,qBACC,GAAY,MAAM,QAAU,YAC1B,KAEC,GACH,IACC,SAAU,UACR,GAAG,SAID,GAAQ,uBAGe,EAAU,QAEjC,GAAQ;;;;;KAKX,GAAsB,SAAS,uHAE9B;AAAA,sBAG4B,GAAU,MAErC,IAAY,GAGZ,IAEH,EAAY,gBACP,IAEE,EAAQ,YAAY,8DAExB,WAIE,GAAS,GAAG,sBAGlB,GAAY,QAGN,OAAgB,YAAW,IACjC,OAAO,gBAAgB,SACjB,QAAuB,IAAW,IAAI,IAAK,OAAO,aAAc,GAAI,GAAI,KAAK,KAAK,IAClF,GAAe,OAAO,OAAO,sDAAuD,OAGtF,SAoBI,IAAa,OAAS,EAC7B,GAAQ,YAAY,4CAGb,EAAiB,GAAU,IAI3B,SA3BD,4NAQH,IAAY,GAAU,OACxB,EAAQ,YAAY,GAAU,IAAY,IAG1C,OAAO,SAAS,KAAO,8CAIjB,EAAiB,GAAU,SAkB9B,SADW,MADK,IAAc,QACX,OACc,UAGjC,QAAqB,QAG3B,EAAQ,YAAY,KAGhB,QAEG;;;;WAOA,GAAQ,UAGR,SAAe,GAAS,MAC7B,MAAO,GAAY,eAClB,MAAO,gBACP,8DAEA,MAAO,gBACP,4FASK,QAED,aAGH,EAAW,GAAY,mBAKvB,cAAO,KAAK,yBAA0B,eAGzB,MAId,IACC,OAAQ,SACN,GAAG,cAMF,cACG,6DAUA,kCAAqC,WAM3C,GAAU,OAOb,OAAgB,GAAS,QACxB,QAAS,GACT,UAAW,GACX,KAAM,GACN,IAAK,QAGL,GAAS,UAGF,gEAIH,IACL,eAEG,cAAoB,IACnB,GAAa,EACR,4DAIF,GAAQ,UAGD,IAAe,EAAU,IAG/B,aAAoB,KAIpB,aAAoB,OAHpB,EAAM,GAAS,OAQf,6BAKL,QACI,2DAIF,GAAQ,EAAS,IAGjB,EAAW,EAAM,cAGvB,EAAQ,QACP,KAAM,EAAM,KACZ,KAAM,EACN,OAAQ,EAAM,oBAIT,OAAW,IAAsB,GAAW,EAAe,GAAc,QAAQ,KAAK,KAAM,MAG9F,IAA2C,SAE9C,GAAY,GAAK,IAA4B,sBAGvC,GAAK,+DACX,GAAK,aAGA,GAAQ,QAEV,IAAoB,MAGrB,IAAa,GAAU,IACzB,EAAW,GAAU,IAGrB,GAAoB,aAKd;;;;WAMA,GAAQ,WAIR,GAAS,GAAG,mBAIjB,GACC,QACC,SAAU,EAAS,MACnB,gBACC,GACA,IAED,YAAa,GACb,aAAc,UAEf,eAAiB,GAAS,mBAI3B,GAAK,IAAI,mBACJ,UACH,IAAuB,GACvB,IAAyB,WAGtB,UACE,GAAM,GAAW,QAI1B,EAAQ,OAAO,EAAS,OAAQ,SAE1B,GAAQ,WAER,GAAQ,qBAGR,GAAQ,wBAGsB,EAAS,OACzC,GAAa,GAAS,IAEvB,EACF,sDACC,WAAY,IAKb,wEACC,WAAY,OAIV,GAA0B,OAAO,cAAgB,AAAc,aAAa,aAA3B,UAEjD,GAAwB,mBAGxB,EACF,+EAGM,IAAa,GAAG,QAChB,MAAgB,KACrB,OAAQ,KAGT,GAAU,IAAI,wBACP,IAAc,KAAK,MAItB,KAFoB,cAAa,sBAEjC,SACF,IAAU,MACT,YAAa,SAGX,KAAK,MAAQ,GAAc,GAAI,GACjC,0FAGA,uDAID,uEAKF,wFACC,QAAS,SAKR,IAAa,KAAK,MAClB,EAAa,EAAY,iBACzB,IACF,EAAW,oBAAoB,GAAc,OAG1C,IACH,IAAwB,GACxB,MAEC,KAGC,EACA,UAEH,EAAU,KAAK,UAEd,OAAsB,IAAO,uBAExB,UACF,cAAmB,IACd,EAAM,GAAQ,SAGd,EAAM,GAAQ,OAIpB,AAAM,EAAa,QAAnB,QAIH,GAAa,KAAK,WAGZ,GAAQ,UAGR,IAAW,KAAK,MAAQ,EAC3B,GAAW,EAAE,SACT,GAAQ,IAKhB,EAAY,YAAY,GAGxB,EAAW,IAAI,QAIL,eACR,OAAO,oBAAoB,QAAS,KAG5B,cACR,KACA,EAAW,UAGN,IAAU,GAAQ,iBACxB,GAAQ,OAGL,SAAS,iBAEL,GAAQ,MAEd,EAAW,KAGX,OAAO,iBAAiB,QAAS,UAI5B,QAIF,KACL,gBAAiB,sBACjB,KAAM,WACN,MAAO,YACP,QAAS,cACT,QAAS,cACT,KAAM,WACN,SAAU,eACV,iBAAkB,uBAClB,iBAAkB,uBAClB,gBAAiB,uBAGZ,GAAU,OAAO,YAAY,GAAI,IAAa,MAAM,EAAQ,MAAe,KAAY,uBAAsB,WAG/G,IAAU,GAGV,GAAW,KAGX,GACA,4BAgBG;;;;UAMA,GAAQ,YAAY,8BAE1B,EAAQ,sBACP,EAAQ,YAAY,WAEd,QAAe,SACd,oBACS,IAAO,gBAAgB,KAAK,cAAe,YAE1D,MAAM,SACE,AAAS,GAAE,WAAX,MAER,mBACM,MACE,MAER,eAAgB,UAGb,cAEE,GAAQ,SAEd,EAAQ,qBAEF,0BAA+B,GAAc,OAAO,EAAO,iBAE3D,IAAQ,KAAK,OAEZ,gBAwBR,YAAY,GAFF,KAAZ,WAAyB,uBAGhB,GAAc,EAAa,UAEjC,KAAK,QAAU,EAAa,WAAa,GAEzC,KAAK,OAAS,EAAa,IAE3B,KAAK,SAAW,GAAS,mBAGpB,KAAK,OAAO,IAEjB,KAAK,YAAc,EAAY,sBACxB,GAAQ,KAAK,WAGf,EAAM,gBAGP,EAAM,SAER,KAAK,SAAS,IAAI,KAAK,YAGvB,EAAY,YAAY,KAAK,aAC7B,KAAK,YAAc,MAIlB,KAAK,UAAU,gBAKb,GAAa,gBAMX,IAAW,EAAM,UACjB,EAAS,KAAK,IAAI,EAAG,KAAK,MAAM,GAAW,KAC3C,EAAS,KAAK,MAAM,EAAS,IAE/B,EAWI,EAAS,EAChB,KAAK,SAAS,IAAI,iCAEX,EAAS,EAChB,KAAK,SAAS,IAAI,iCAEX,EAAS,GAChB,KAAK,SAAS,IAAI,kCAGlB,KAAK,SAAS,IAAI,2CApBf,GAAU,GACZ,KAAK,SAAS,IAAI,kCAEX,GAAU,GACjB,KAAK,SAAS,IAAI,kCAGlB,KAAK,SAAS,IAAI,mCAiBlB,UAGG,IAAW,KAAK,UAAY,GAAG,QACrC,OAAO,OAAO,GAAS,OACtB,aAAc,WAIX,KACH,OAAQ,GACR,OACC,KAAM,SAKL,kBACI,MAAK,eAGT,eACI,MAAK,aAGT,eACI,MAAK,SAGb,KAAK,EAAO,IAER,KAAK,aAEP,GAAY,YAAY,KAAK,aAG7B,KAAK,YAAc,EAGnB,KAAK,UAAU,SAGf,KAAK,SAAS,IAAI,GAAU,KAAK,+BAOnC,UAAc,QAGP,EAAM,2DAIT,GAAY,GAChB,EAAQ,YAAY,+BAA+B,SAAW,GAAa,EAAQ,SAAS,QAGxF,WAGF,OAAe,IAAO,yBAItB,EAAY,GAGZ,EAAQ,YAAY,WAIrB,YAIE,GACF,SAAQ,IAAI,YAAa,GAGtB,AAAS,EAAO,QAAhB,UACC,EAAO,SACT,uEAGA,uCAGE,AAAM,EAAO,QAAb,GACF,QAAe,IAAsB,KAInC,AAAM,EAAO,QAAb,QAEG,IAAS,EAAQ,IACf,MAIL,AAAM,EAAO,QAAb,QACG,IAAS,EAAQ,IACf,QAGF,sCAAsC,EAAO,eAI9C,MAIJ,IAAa,GACb,QAEE,IAAe,GAA8B,EAAQ,mCAGvD,eACG,GAAS,GAAY,GAAQ,SACnC,EAAO,OAAS,YAGT,GAAO,sCAKX,eACG,GAAS,GAAY,GAAQ,SACnC,EAAO,OAAS,YAET,GAAO,4CAMP,IAAQ,KAAK,wCAKd,GAAS,GAAY,GAAQ,MACnC,EAAO,OAAU,KAAK,SAAS,IAAQ,YAEhC,GAAO,sCAKX,WAEK,GAAO,EAAG,EAAO,GAAI,IACvB,UACC,GAAQ,KAAK,SAAW,IAAM,IAAK,8BAKpC,GAAU,GAAY,GAAQ,gBAE7B,GAAQ,mCAIO,GACtB,YAEO,EAAQ,QAAQ,wBAGF,GACrB,YAEO,EAAQ,SAAS,uBAGC,GACzB,YAEO,EAAQ,WAAW,MAIvB,mCAIG,QAAc,IAAS,oBAEzB,qBAAO,aAAP,cAAmB,oBAEjB,GAAW,EAAM,WAAW,OAE5B,KAEA,IACL,uBACA,YACA,6BACA,QACA,iBAGG,GAAY,OAEV,UAEF,GAAS,WACH,KAAY,GACrB,GAAS,GAAY,EAErB,EAAQ,QAAS,KAChB,OAAQ,GACR,OACC,WACA,MAAO,KACP,OAAQ,eAMH,GAAM,EAAG,GAAQ,EAAS,OAAQ,EAAM,GAAS,UAClD,SAAc,IAAS,aAAa,EAAS,IAE7C,GAAU,EAAQ,GACxB,GAAQ,MACP,WAED,GAAQ,IAAI,kBAAoB,YAE9B,SAAU,GACV,IAAK,IACF,GAAM,UAEP,IAAS,WACZ,GAAS,KAAa,EAEf,GAAM,iBACP,UACD,GAAa,GAAW,aACpB,2BACN,MAEO,GAAa,QACd,GAAQ,GAAW,gBAKtB,kBACE,GAAQ,qJAQnB,aAEC,QAAQ,IAAI,QAGN,GAAc,GAAS,aAI1B,OAEF,MAAc,GAAS,OAIrB,AAAY,GAAS,SAArB,YAGD,EAAW,GAAY,mBAKvB,GAAc,UAKhB,IACC,UAAW,GAAG,KAAK,OACjB,GAAG,QAGN,GAAW,WAGL,MAGN,MAAe,IAAe,EAAU,GAAwB,GAG3D,KAGL,MAAa,IAAa,EAAU,GAAsB,QAGpD,GAAW,GAAyC,WACvD,GAAY,EAAS,EAAS,wBACX,aAKrB,IACC,cACK,GAA6B,eAChC,EAAS,eAAgB,MAEzB,GAAG,SAID,GAAa,GAAS,eACzB,AAAa,KAAb,eAEI,IAAS,QAGT,WAIA,UAID;YACI,EAAa,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAU1B,GAAQ,EAAa,IAAK,MAEzB,sBAaqB,yBAEJ,MAEpB,GAAY,QACV,GAAW,EAAQ,OACtB,MAAoB,IAApB,SACF,EAAQ,YAAY,GAAU,SAAW,GAAa,EAAQ,SAAS,KAGvE,EAAQ,SAAS,SAGZ,IAAU,EAAQ,MAClB,EAAc,EAAQ,WAAa,EAAQ,WAC3C,GAAa,EAAQ,UAAY,EAAQ,cAE3C,cAKF,OAAe,GAAQ,QAEnB,GAAQ,GACX,QAAS,QACC,WAKX,EAAY,GAGR,EAAQ,gBACX,EAAQ,YAAY,WAKjB,MACL,QAAQ,MAAM,GAGX,YAAkB,aACd,GAAU,EAAO,WAGpB,yBAAyB,KAAK,SAC1B,IAAU,GAAG,WAEf,KACH,OAAQ,GACR,OACC,KAAM,WAIF,IAAO,GAAG,KACf,KAAM,mCACN,OAAQ,WAER,oBAGD,cAAO,OAAO,GAAK,OAClB,MAAO,UAGR,GAAQ,OAAO,IAIR,wIACN,OAAQ,aAKF,2BAA2B,KAAK,SACvC,KACC,cACK,GAA6B,eAChC,EAAS,eAAgB,YAEzB,GAAG,SAGG,MAA0B,KAG5B,4JAGA,sBAAsB,KAAK,SAC3B,2DAGA,oBAAoB,KAAK,SAC3B,SACM,oBAGJ,0BAA0B,KAAK,GACtC,6BAAuB,KAClB,EAAa,GACX,QAGA,mBAAmB,KAAK,GAC/B,kCACK,GAAY,GACV,QAGA,YAAY,KAAK,SAClB,IAAa,GAAS,SAEtB,kIACL,QAAS,UAGJ,4BAA2C,GAAU,QACpD,GAAQ,QAEV,WAEH,QAAgB,IAAO,kBAEnB,GAAQ,QACX,QAAQ,+CAAgD,IAGrD,GAAQ,qBACJ,8EACA,MACC,KAGR,GAAU,YAGN,QACA,cAAmB,gBACjB,4DAA6D,IAGhE,EAAQ,gBACG,GAAQ,WAAW,IAI1B,WAKL,KAEA,KAAa,QACT,mGAGH,EAAQ,gBACG,GAAQ,cAAe,IAI9B,EAAM,kCAId,IAAW,eAAe,AAAM,KAAN,EAAiB,UAAW,6BACzC,IAAM,GAAU,WAQ3B,GAKH,EAAS,cAJF,WASR,eACO,uBAA0B,EAAO,sBAKlC,qBAAwB,KAIjC,eAAQ,IAAI,GAmBL,2BAKD,GAAQ,YAAY,uBAGpB,GAAS,GAAG,oBAEZ,QAAoB,IACzB,OAAQ,kDACF,oBACS,IAAO,YAAY,KAAK,KAAM,YAE7C,MAAM,SACE,AAAS,GAAE,QAAX,MAER,mBACM,MACE,YAIL,YAEA,GAAS,QAGV,AAAM,GAAY,QAAlB,GAEF,KACC,cACK,GAA6B,eAChC,EAAS,eAAgB,YAEzB,GAAG,IAGN,OAAe,OAIb,AAAM,EAAO,QAAb,GAIK,AAAM,EAAO,QAAb,EAHA,GAAS,GAOhB,SAAQ,MAAM,GAGd,IACC,cACK,GAA6B,eAChC,EAAS,eAAgB,YAEzB,GAAG,IAEC,EAAM,iHAIc,aAC5B,EAAkB,EAAO,WAAY,MAAM,KAAK,QAChD,EAAkB,EAAO,WAAY,MAAM,KAAK,SAChD,EAAiB,KAAO,OAAP,cAAa,MAAM,KAAK,IACzC,EAAkB,EAAO,kBAGzB,KAAe,KACf,EAAS,gBAAgB,KACzB,EAAS,gBAAgB,KACzB,EAAS,OAAO,MAGb,IAAkC,GAAQ,GAC1C,GAA0C,4BAGvC,GAAS,GAAmB,GAAwB,IAAoB,GAExE,EAAW,GAAQ,IAAiB,SAAS,GAAQ,QAErD,GAAQ,YAAY,eAGL,GACrB,EAAQ,YAAY,MAEpB,GAAkB,EAAM,OAExB,GAAoB,GAEpB,QAGG,IAAmB,eACD,MAClB,UACH,GAAmB,SACZ,EAAS,GAAY,EAAM,OAClC,uBAA6B,GAAQ,GAAS,SAAS,GAAQ,qCAAqC,GAAQ,GAAU,SAAS,GAAQ,uBAMvI,GAAoB,GAGpB,EAAQ,YAAY,MAGpB,EAAK,OAGL,uBAG6B,MAC7B,EAAQ,YAAY,MAEpB,GAAoB,EAAM,OAGvB,UACO,GAAoB,EAAgB,MAAM,KAChD,IAAqB,IACvB,IAAoB,QAEd,wFAID,EAAS,GAAW,GAAkB,MAAM,QAG/C,IAAQ,aACT,AAAiB,KAAjB,aACC,IAAmB,GACrB,GAAQ,QAGJ,CAAY,IAAZ,SAAuB,IAAY,GAClC,AAAY,IAAZ,SAAuB,IAAY,IAEvC,IAAQ,OAKN,AAAY,IAAZ,SAAuB,IAAY,GAClC,AAAY,IAAZ,SAAuB,IAAY,EAEvC,GAAQ,QAGR,GAAQ,WAKJ,MAGN,EAAQ,sBAEP,EAAK,OAGL,EAAQ,YAAY,WAEd,QAAe,SACd,oBACS,IAAO,gBAAgB,GAAiB,KAAuC,KAAK,OAAQ,YAE3G,MAAM,UACE,GAAiB,AAAS,GAAE,gBAAX,KAA0B,AAAS,GAAE,eAAX,MAEnD,aAEC,YAEK,GAAe,GACb,MAER,eAAgB,MAGb,SAGE,GAAQ,SACd,EAAQ,SAAS,IAGd,IAAgB,GAAe,OAC/B,IAAgB,GAAe,OAGlC,EAAQ,gBAGL,EAAO,cACT,GAAS,GAIT,GAAS,KAER,OAKA,sBAEoB,EAA2B,EAAU,IAC5D,GAAoB,QAGd,GAAQ,YAAY,SAGpB,wCAGA,GAAQ,mBAAmB,EAAiB,GAE9C,QAAiB,GAAQ,QAEzB,GAAe,EAAe,WAAW,kBAEvC;iCACyB,KAAmB,4CAA0D,EAAc,GAAI,OAAO,EAAe,QAAQ,UAAW;AAAA;AAAA,+EAE1F,EAAc,QAAS;AAAA,KAIjG,EAAO,yBACH,GAAQ,KAAK,GAA0B,EAAO,eAG7C,GAAS,EAAQ,GAGhB,QACF,GAAQ,MAKd,MAAqB,KACpB,OAAS,IAAa,EAAO,wBAAwB,IACrD,UAAW,gCAIN,IACL,qLAEA,WAAY,GAAe,MAC3B,eAAgB,GAAe,aAK3B,GAAK,OAEP,QAAiB,GAAQ,KAG7B,QAIG,IAAqB,GACrB,GACA,qBAEoB,EAA2B,EAAU,UAE5D,GAAoB,SAInB,sBAAuB,EACvB,mBAAoB,IACjB,MAGA,IAA0B,SACzB,KACH,IAAqB,GAGlB,IAAgB,GAAe,KAAK,sBAGvC,MAAsB,KACrB,OAAS,IAAa,EAAO,wBAAwB,IACrD,UAAW,wBACX,UAAW,UAIN,IACL,uFAEA,WAAY,GAAgB,MAC5B,eAAgB,GAAgB,cAK5B,GAAQ,KAGP,QAAe,IAAO,kBAI3B,IAAiB,GAAgB,OAGhC,GAAW,UAGT,GAAa,GAAG,WAGnB,UACK,EAAU,GAAc,GAAmB,MAAM,KAElD,GAAY,GAAS,IAGxB,AAAiB,IAAjB,aAEF,GAAS,OAAO,GAGhB,GAAU,mDAAmD,GAAwB,SAKrF,GAAS,SAAS,EAAY,IAG9B,GAAU,yBAAyB,GAAwB,WAIxD,KACH,OAAQ,EACR,OACC,cAAe,GACf,aAAc,EACd,SAAU,eAKN;;;;;;MAOL,OAAQ,GACR,QAAS,YAIH,SACA,EAAU,GAAc,EAAsB,MAAM,QAGvD,IAAS,EAAS,aAGhB,IAAU,AAAiB,IAAjB,cAA6B,IAAe,EAGtD,MAAiB,KACtB,OAAQ,EACR,OACC,cAAe,AAAiB,IAAjB,aACf,aAAc,EACd,SAAU,GAAS,aAAc,MAK7B,GAAY,GAAW,UAG7B,GAAW,IAAI,mBACd,EAAa,GAAU,OAIvB,QAAQ,eAAe,EAAS,aAChC,QAAQ,aAAa,GAAO,aAE5B,QAAQ,KAAK,EAAU,YAIlB,GAAQ,aACV,GAAO,GAA0B,kBAEpC,QAAS,eAKH,wDAIL,EAAO,0BACH,GAAQ,KAAK,GAA0B,EAAO,gBAE7C,GAAS,EAAQ,GAGhB,QACF,GAAQ,MAGf,MAAqB,KACpB,OAAS,IAAa,EAAO,+BAA+B,IAC5D,UAAW,2BAIN,IAAiB,AAAiB,MAAO,eAAP,cAAqB,MAAM,KAAK,MAAjD,aAAqD,SAAU,kBAChF,8HACqH,AAAiB,KAAjB,aAAiC,oBAAqB,wDAEhL,WAAY,GAAe,MAC3B,eAAgB,GAAe,aAI1B,GAAK,KAAK,IAGhB,QAIG,IAAqB,GACrB,GACA,GAEA,qBAEoB,EAA2B,EAAU,UAG3D,uBAAwB,EACxB,oBAAqB,IAClB,MAGA,IAA0B,SACzB,KACH,IAAqB,GAGlB,IAAiB,GAAgB,OAGpC,MAAqB,KACpB,OAAS,IAAa,EAAO,+BAA+B,IAC5D,UAAW,wBACX,UAAW,UAIN,IACL,2FAEA,WAAY,GAAe,MAC3B,eAAgB,GAAe,cAK3B,GAAQ,KAGP,QAAe,IAAO,kBAI1B,GAAW,UAGT,GAAa,GAAG,WAGnB,UACK,GAAU,GAAc,GAAmB,MAAM,KAElD,EAAY,GAAS,IAGxB,AAAiB,KAAjB,mBAEF,EAAa,GAAK,EAAE,OAAO,IAG3B,EAAU,mDAAmD,GAAwB,eAKrF,EAAa,GAAK,EAAE,SAAS,EAAY,KAGzC,EAAU,yBAAyB,GAAwB,WAIxD,KACH,OAAQ,EACR,OACC,cAAe,GACf,aAAc,EACd,SAAU,eAKN;;;;;;MAOL,OAAQ,EACR,QAAS,YAIH,GAEJ,IAAgB,GAAe,aAE3B,GAAU,GAAc,EAAsB,MAAM,KAGrD,EAAU,AAAiB,KAAjB,cAA6B,IAAe,EAGtD,KAAiB,KACtB,OAAQ,EACR,OACC,cAAe,AAAiB,KAAjB,aACf,aAAc,EACd,SAAU,EAAS,aAAc,MAK7B,GAAY,EAAW,UAG7B,EAAW,IAAI,mBACd,EAAa,GAAU,cAIlB,GAAQ,aACV,GAAO,GAA0B,kBAEpC,QAAS,eAKH,wDAIL,EAAO,kBACH,GAAQ,KAAK,GAAsB,EAAO,QAGzC,GAAS,EAAQ,GAGzB,MAAsB,KACrB,OAAS,IAAa,EAAO,uBAAuB,IACpD,UAAW,gCAIN;;;;;;;KAQL,WAAY,GAAgB,MAC5B,eAAgB,GAAgB,aAI3B,GAAW,OAEjB,QAAQ,IAAI,qBAGgB,GAC5B,EAAQ,YAAY,WAEd,GAAQ,YAAY,GAAsB,GAAQ,IAExD,EAAQ,sBAEP,EAAQ,YAAY,MAGpB,EAAW,YAEL,QAAe,SACd,oBACS,IAAO,YAAY,IAAQ,KAAK,MAAO,YAEtD,MAAM,SACE,AAAS,GAAE,QAAX,MAER,aACC,SAAW,OACN,GAAc,GACZ,MAER,eAAgB,MAGb,SAEE,GAAQ,SAGd,EAAQ,gBAGR,GAAgB,OAGX,GAAS,SAIZ,IAAoB,GACpB,GAAqB,GACrB,qBAEoB,EAA2B,EAAU,UAE3D,aAAc,EACd,MAAO,GACP,OAAQ,GACL,KAEA,IAAU,MAIX,IAAa,IACf,GAAoB,SAEb,EAAW,GAAkB,EAAU,MAAM,KAEjD,AAAc,IAAd,eACI;;OAIC,AAAY,IAAZ,QACF,IAAQ,MAAM,YAEb;+BACqB,AAAe,IAAf;;;OAK3B,GAAU,SAGJ,oCAAyC,AAAe,IAAf,+DAK7C,EAAO,qBACN,KACH,IAAqB,GAErB,MAAqB,KACpB,OAAS,IAAa,EAAO,uBAAuB,IACpD,UAAW,gBACX,UAAW,UAGN,MAAW,GAAS,uBAAwB,yGACjD,WAAY,GAAe,MAC3B,eAAgB,GAAe,cAK3B,GAAQ,KAGP,QAAe,IAAO,qBAI3B,IAAgB,GAAe,YAGlC,EAAiB,IACZ,EAAQ,oBAGb,QAAQ,IAAI,gBAAiB,GAG1B,EAAO,YAEN,EAAO,6BAGR,sBAAuB,EACvB,eAAgB,GACb,GAEG,EAAqB,GAAoB,IAAsB,EAAc,MAAM,SACjF,IAAsB,EAAc,MAAM,QAE/C,IAAgB,GAChB,GAAc,MACf,AAAc,IAAd,UACF,GAAgB,oCAGV,IAAW,GAAmB,MAAM,KAAK,GACzC,GAAW,GAAmB,MAAM,KAAK,GAEzC,GAAU,GAAS,IAAU,OAAO,GAAQ,IAAI,GAAS,IAAU,OAAO,GAEhF,GAAc,AAAc,KAAd,UAEd,MAAmB,GAAa,UAAW,4BAA4B,AAAU,IAAV,MAA+B,SAAU,sBAAsB,QAGpI,AAAqB,IAArB,6BAKI,OACF,GAAS,sBAAuB,oCALT,oDAExB,mBAG2F,eAA0B,GAAa,wBAAyB,+CAGzJ,GAAQ,MAAM,YAEb,GAAQ,KAEP,QAEA,AAAoB,IAApB,sBACD,IAAW,OAAO,EAAO,OACzB,GAAU,GAAc,IACxB,GAAU,GAAc,GAAW,gBAEnC;gDACqC;AAAA;AAAA,0CAEN,oBAAyB,gDAAqD;AAAA,aAG7G,IAAQ,KAAK,YAEb,GAAQ,KAEP,eAGD,wFAC+E,QAGjF,QAAiB,GAAQ,gBAKvB,4CAIL,AAAM,EAAO,QAAb,EACG,GAAS,EAAQ,cAGf,wCAA2C,EAAO,aAMxD,IAAqB,GACrB,qBAEoB,EAA2B,EAAU,OAC5D,MAAqB,KACpB,OAAS,IAAa,EAAO,8BAA+B,IAC5D,UAAW,4BAGN,IAAQ,gBAAgB,YAExB,GAAQ,WAER;;;;;;KAOL,WAAY,GAAe,MAC3B,eAAgB,GAAe,QAI7B,EAAO,WACF,IAAS,EAAQ,IAIzB,EAAO,yBAGmB,SACnB,OAAO,GAAW,EAEzB,EAAQ,YAAY,WAEd,GAAQ,0BAA0B,KAExC,EAAQ,sBAEP,EAAQ,YAAY,MAGpB,EAAO,YAED,QAAe,SACd,oBACS,IAAO,WAAW,IAAU,KAAK,YAAa,YAE7D,MAAM,UACE,AAAS,IAAE,OAAX,MAER,aACC,SAAO,OACF,GAAY,GACV,MAER,eAAgB,MAGb,SAGE,GAAQ,SAGd,EAAQ,gBAER,GAAS,SAIP,IACA,GAAqB,qBAED,EAA2B,EAAU,IAEzD,IAAgB,GAAe,aAIjC,OAAQ,GACL,KAGA,UA4BI,OACD,mBACC,UAEC;gHACqG,GAAc,OAAO,EAAO,gBAAkB;AAAA,kBAKrJ,eACC,UAEC;;kBAMF,mBACC,KAGF,AAAc,EAAO,OAArB,eACI;;cAMA;;4BASH,GAAQ,KAEP,gBApEH,KACH,IAAqB,GAGrB,MAAqB,KACpB,OAAS,IAAa,EAAO,8BAA8B,IAC3D,UAAW,qBACX,UAAW,UAIN,IACL,8EAEA,WAAY,GAAe,MAC3B,eAAgB,GAAe,cAK3B,GAAQ,KAGP,QAAe,IAAO,8BAmDA,MAC1B,MAED,MAAoB,IAApB,SACF,EAAQ,OAAO,YAAY,EAAM,MAAM,OAAO,IAAI,GAAM,EAAG,MAAM,OAGjE,EAAQ,EAGN,AAAc,EAAM,SAApB,yDAIE,GAAU,SACX,AAAU,GAAM,SAAhB,MACF,8BAGA,+BAGM,EAAQ,GAAS,EAAM,OAAO,OAAO,GAAQ,IAAI,GAAS,EAAM,OAAO,OAAO,wBAMtF,IACC,OAAQ,UACR,MAAO,KACP,MAAO,0BAIuB,OAAO,IACtC,GAAc,MAIX,IAAiB,qBAEhB,GACH,GAAiB,GACjB,2LAGA,eAAO,KAAK,MAAe,QAAQ,GAAM,GAAc,IACvD,aAAa,QACb,EAAQ,YAAY,IACb,gLAwGuD,IAAW,WAGT,OAAO,KAAK,mCAAoC,iBAI9B,0EASpD,6LA6BA,qsIAr8E7B,EAAY,EAAW,EAAW,EAAS,SAAS,SAAS,0BAwkB5D,IAEF,QAAO,OAAO,IAAS,QAAQ,GAAK,EAAE,MAAQ,IAG9C,IACC,MAAO,GAAS,IAAK,KACnB,GAAG,8QCv1BG,GAAI,IAAI,CACnB,OAAQ,SAAS,KACjB,MAAO"}